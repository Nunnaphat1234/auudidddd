{"version":3,"sources":["helpers/CryptoHelper.js","connectors.ts","hooks.ts","../../contracts/src/index.js","helpers/EPNSCoreHelper.js","segments/ChannelDashboard.js","segments/CreateChannel.js","segments/Feedbox.tsx","segments/ViewChannels.tsx","pages/Home.js","components/BlockiesIdenticon.js","components/Profile.tsx","components/Bell.js","segments/Header.tsx","App.tsx","serviceWorker.js","index.js","components/blockies.js"],"names":["CryptoJS","require","CryptoHelper","encryptWithAES","message","key","AES","encrypt","toString","decryptWithAES","decrypt","enc","Utf8","encryptWithECIES","publicKey","a","compressedKey","EthCrypto","compress","this","encryptWithPublicKey","encryptedSecret","decryptWithECIES","privateKey","decryptWithPrivateKey","pubKeyUint8Array","Uint8Array","from","Buffer","convertedKeyAsUint8Array","publicKeyConvert","convertedPublicKeyHex","pubKey","then","encryptedBuffers","cipher","iv","ephemPublicKey","ciphertext","mac","input","keyConvert","concat","buf","encrypted","length","keyConvertBuffer","uncompressedKey","twoStripped","substring","encryptedBuffer","decryptedBuffer","encryptionDecryptionPublicToPrivateTest","startTime","Date","console","log","publicKeyByPrivateKey","msg","encryptionTime","getTime","decryptMsg","decryptionTime","outputMsgPayload","secret","subject","calltoaction","imageurl","pkey","secretEncrypted","asubE","amsgE","actaE","aimgE","makeid","result","toISOString","characters","charactersLength","i","charAt","Math","floor","random","config","injected","InjectedConnector","supportedChainIds","network","NetworkConnector","urls","3","defaultChainId","pollingInterval","portis","PortisConnector","dAppId","networks","abis","erc20","ownable","epnscore","EPNSCoreHelper","getUserInfo","wallet","contract","Promise","resolve","reject","users","response","catch","err","getChannelInfo","channel","channels","getChannelAddEvent","startBlock","endBlock","filteredResponse","queryFilter","forEach","item","args","getJsonFileFromIPFSHash","ipfs","fetch","json","jsonData","error","getChannelJsonFromUserAddress","channelStartBlock","toNumber","getPublicKey","address","ethers","Container","styled","div","Channel","Notice","Title","h1","Info","label","Buttons","FormSubmision","Input","ShortInfo","textarea","Row","Text","span","Header","Continue","button","props","theme","ChannelDashboard","useWeb3React","account","active","library","chainId","React","useState","processing","setProcessing","recipient","setRecipient","type","setType","sub","setSub","setMsg","cta","setCTA","img","setImg","useEffect","handleSendMessage","signer","getSigner","Contract","nsub","nmsg","parseInt","k","publickey","esub","emsg","ecta","eimg","JSON","stringify","at","add","cid","sendMessage","tx","placeholder","value","onChange","e","target","maxlength","disabled","onClick","color","height","width","Name","Url","DropzoneContainer","CreateChannel","dai","uploadDone","setUploadDone","undefined","file","setFile","name","setName","desc","setDesc","url","setURL","handleCreateChannel","daiContract","sendTransactionPromise","approve","bigNumberify","waitForTransaction","hash","createChannelWithFees","onChangeStatus","status","meta","onSubmit","files","allFiles","map","f","reader","FileReader","readAsDataURL","onloadend","onDrop","maxFiles","multiple","accept","Feedbox","ViewChannels","Controls","ControlButton","border","ControlImage","css","ControlText","ControlChannelContainer","ControlChannelImage","ControlChannelText","Interface","Home","setBadgeCount","bellPressed","controlAt","setControlAt","adminStatusLoaded","setAdminStatusLoaded","channelAdmin","setChannelAdmin","channelJson","setChannelJson","userClickedAt","checkUserForChannelRights","controlIndex","listenerForChannelRights","topic","utils","id","filter","topics","on","index","src","icon","BlockiesIdenticon","seed","opts","bgcolor","size","scale","spotcolor","draw","prevProps","blockies","render","canvas","createElement","ref","Component","Blocky","BlockyInner","Wallet","Profile","setAddress","ens","setENS","ensFetched","setENSFetched","lookupAddress","toLowerCase","tadaaa","keyframes","BellImage","ringme","BellImageAbs","Badge","Bell","badgeCount","bellPressedCB","badge","setBadge","ring","setRing","setResetRinger","setTimeout","className","animationIn","animationOut","durationOut","HeaderStyle","ProfileContainer","Logo","UserControls","NetworkDisplayer","PrimaryTheme","ThirdTheme","Connection","phase","Array","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","getErrorMessage","dotenv","connectorsByName","Injected","Network","Portis","getLibrary","provider","connector","providers","Web3Provider","App","context","activate","deactivate","setBellPressed","activatingConnector","setActivatingConnector","triedEager","tried","setTried","isAuthorized","useEagerConnect","suppress","ethereum","window","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","HeaderContainer","ParentContainer","HomeContainer","ProviderUpperContainer","ProviderLogo","ProviderContainer","Object","keys","currentConnector","activating","image","ProviderButton","ProviderImage","ProviderLabel","style","display","gridGap","gridTemplateColumns","maxWidth","margin","marginTop","borderRadius","borderColor","cursor","signMessage","signature","alert","changeChainId","changeNetwork","close","Boolean","location","hostname","match","client","ApolloClient","uri","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","randseed","rand","t","createColor","buildOpts","newOpts","pow","charCodeAt","seedrand","renderIcon","imageData","dataWidth","ceil","mirrorWidth","data","y","row","x","r","slice","reverse","push","createImageData","sqrt","cc","getContext","fillStyle","fillRect","col","api","create","module","exports"],"mappings":"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","file":"static/js/main.bf30085f.chunk.js","sourcesContent":["import EthCrypto from 'eth-crypto';\nimport {encrypt, decrypt} from 'eccrypto';\nimport { publicKeyConvert, publicKeyVerify } from 'secp256k1';\n\nvar CryptoJS = require(\"crypto-js\");\n\nconst CryptoHelper = {\n  // To Encrypt with AES\n  encryptWithAES: function(message, key) {\n    return CryptoJS.AES.encrypt(message, key).toString();\n  },\n  // To Decrypt with AES\n  decryptWithAES: function(message, key) {\n    let bytes  = CryptoJS.AES.decrypt(message, key);\n    return bytes.toString(CryptoJS.enc.Utf8);\n  },\n  // To Form Encryted Secret, no more than 15 characters supported\n  encryptWithECIES: async function(message, publicKey) {\n    const compressedKey = EthCrypto.publicKey.compress(publicKey);\n\n    const encryptedSecret = await this.encryptWithPublicKey(message, compressedKey);\n\n    // Not using it since sqlite2 has some error with this\n    // const compressedEncryptedSecret = EthCrypto.hex.compress(encryptedSecret);\n\n    return encryptedSecret;\n  },\n  // To Form Decrypted Secret, no more than 15 characters supported\n  decryptWithECIES: async function(message, privateKey) {\n    // Message is always compressed, not using because sqlite2 has some error with this\n    //const uncompressedMessage = EthCrypto.hex.decompress(message).substr(2); // to remove 0x\n\n    return await this.decryptWithPrivateKey(message, privateKey);\n  },\n  // Encryption with public key\n  encryptWithPublicKey: async function(message, publicKey) {\n    // Convert compressed public key, starts with 03 or 04\n    const pubKeyUint8Array = Uint8Array.from(\n      new Buffer(publicKey, 'hex')\n    );\n    //console.log(\"[ENCRYPTION] Public Key Uint8Array: \" + pubKeyUint8Array);\n\n    const convertedKeyAsUint8Array = publicKeyConvert(pubKeyUint8Array, false);\n    //console.log(\"[ENCRYPTION] Public Key Converted: \" + convertedKeyAsUint8Array);\n\n    const convertedPublicKeyHex = new Buffer(convertedKeyAsUint8Array);\n    //console.log(\"[ENCRYPTION] Converted Public Key Buffer: \" + convertedPublicKeyHex);\n\n    const pubKey = new Buffer(convertedPublicKeyHex, 'hex');\n    //console.log(\"[ENCRYPTION] pubkey getting sentout for encrypt: \" + pubKey);\n\n    return encrypt(\n        pubKey,\n        Buffer(message)\n    ).then(encryptedBuffers => {\n      const cipher = {\n          iv: encryptedBuffers.iv.toString('hex'),\n          ephemPublicKey: encryptedBuffers.ephemPublicKey.toString('hex'),\n          ciphertext: encryptedBuffers.ciphertext.toString('hex'),\n          mac: encryptedBuffers.mac.toString('hex')\n      };\n      // use compressed key because it's smaller\n      // const compressedKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(cipher.ephemPublicKey), true)).toString('hex')\n      const input = Uint8Array.from(\n        new Buffer(cipher.ephemPublicKey, 'hex')\n      );\n      const keyConvert = publicKeyConvert(input, true)\n      // console.log(\"[ENCRYPTION] Coverted key: \" + keyConvert);\n\n      const keyConvertBuffer = new Buffer(keyConvert);\n      // console.log(\"[ENCRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\n      // console.log(keyConvertBuffer);\n\n      //console.log(keyConvert);\n      const compressedKey = keyConvertBuffer.toString('hex')\n      // console.log(\"[ENCRYPTION] Compressed key in buffer : \");\n      // console.log(compressedKey);\n\n      const ret = Buffer.concat([\n        new Buffer(cipher.iv, 'hex'), // 16bit\n        new Buffer(compressedKey, 'hex'), // 33bit\n        new Buffer(cipher.mac, 'hex'), // 32bit\n        new Buffer(cipher.ciphertext, 'hex') // var bit\n      ]).toString('hex')\n\n      return ret\n    });\n  },\n  // Decryption with public key\n  decryptWithPrivateKey: async function(message, privateKey) {\n    let encrypted = message;\n    const buf = new Buffer(encrypted, 'hex');\n    // console.log(\"[DECRYPTION] Buffer Passed: \" + buf);\n\n    encrypted = {\n      iv: buf.toString('hex', 0, 16),\n      ephemPublicKey: buf.toString('hex', 16, 49),\n      mac: buf.toString('hex', 49, 81),\n      ciphertext: buf.toString('hex', 81, buf.length)\n    };\n    // decompress publicKey\n    // encrypted.ephemPublicKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(encrypted.ephemPublicKey), true)).toString('hex')\n    const input = Uint8Array.from(new Buffer(encrypted.ephemPublicKey, 'hex'));\n    const keyConvert = publicKeyConvert(input, false)\n    // console.log(\"[DECRYPTION] Coverted key: \" + keyConvert);\n\n    const keyConvertBuffer = new Buffer(keyConvert);\n    // console.log(\"[DECRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\n    // console.log(keyConvertBuffer);\n\n    //console.log(keyConvert);\n    const uncompressedKey = keyConvertBuffer.toString('hex')\n    // console.log(\"[DECRYPTION] Uncompressed key in buffer : \");\n    // console.log(uncompressedKey);\n\n    encrypted.ephemPublicKey = uncompressedKey;\n    const twoStripped = privateKey.substring(2)\n\n    const encryptedBuffer = {\n      iv: new Buffer(encrypted.iv, 'hex'),\n      ephemPublicKey: new Buffer(encrypted.ephemPublicKey, 'hex'),\n      ciphertext: new Buffer(encrypted.ciphertext, 'hex'),\n      mac: new Buffer(encrypted.mac, 'hex')\n    };\n\n    return decrypt(\n      new Buffer(twoStripped, 'hex'),\n      encryptedBuffer\n    ).then(decryptedBuffer => decryptedBuffer.toString());\n  },\n  // Testing of Encryption and Decryption from Public to Private key\n  encryptionDecryptionPublicToPrivateTest: async function(privateKey) {\n    const startTime = new Date();\n    console.log(\"[ENCRYPTION / DECRYPTION TEST STARTED] - \" + startTime);\n\n    const publicKey = EthCrypto.publicKeyByPrivateKey(privateKey);\n    const compressedKey = EthCrypto.publicKey.compress(publicKey); // is String\n    //console.log(compressedKey);\n\n    // const bytesCompKey = Uint8Array.from(compressedKey);\n    //console.log(bytesCompKey);\n\n    const msgToEncrypt = \"PartialStringAS\";\n    const msg = await this.encryptWithPublicKey(msgToEncrypt, compressedKey);\n    console.log(\"Encryped Message With compressed public key:\" + msg);\n\n    const encryptionTime = new Date().getTime() - startTime.getTime();\n    console.log(\"[ENCRYPTION / DECRYPTION ENCRYPTION DONE] - \" + encryptionTime / 1000 + \" secs\");\n\n    // Decrypt this message\n    const decryptMsg = await this.decryptWithPrivateKey(msg, privateKey);\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTED MESSAGE] - '\" + decryptMsg + \"'\");\n\n    const decryptionTime = new Date().getTime() - startTime.getTime() - encryptionTime;\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTION DONE] - \" + decryptionTime / 1000 + \" secs\");\n  },\n  // To output messge payload if required\n  outputMsgPayload: async function(secret, subject, message, calltoaction, imageurl, pkey) {\n    // Output AES\n    console.log(\"[AES ENCRYTED FORMAT (\" + new Date() + \")\");\n    console.log(\"---------------------\");\n    console.log(\"secret --> \");\n    const secretEncrypted = await this.encryptWithECIES(secret, pkey);\n    const asubE = this.encryptWithAES(subject, secret);\n    const amsgE = this.encryptWithAES(message, secret);\n    const actaE = this.encryptWithAES(calltoaction, secret);\n    const aimgE = this.encryptWithAES(imageurl, secret);\n\n    console.log(secretEncrypted);\n    console.log(\"asub --> \");\n    console.log(asubE);\n    console.log(\"amsg --> \");\n    console.log(amsgE);\n    console.log(\"acta --> \");\n    console.log(actaE);\n    console.log(\"aimg --> \");\n    console.log(aimgE);\n    console.log(\"decrypted secret --> \");\n    console.log(await this.decryptWithECIES(secretEncrypted, pkey));\n    console.log(\"decrypted asub --> \");\n    console.log(this.decryptWithAES(asubE, secret));\n    console.log(\"decrypted amsg --> \");\n    console.log(this.decryptWithAES(amsgE, secret));\n    console.log(\"decrypted acta --> \");\n    console.log(this.decryptWithAES(actaE, secret));\n    console.log(\"decrypted aimg --> \");\n    console.log(this.decryptWithAES(aimgE, secret));\n  },\n  makeid: function (length) {\n     var result           = '[' + new Date().toISOString() + '] ';\n     var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n     var charactersLength = characters.length;\n     for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n     }\n     return result;\n  }\n};\n\nexport default CryptoHelper;\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { PortisConnector } from '@web3-react/portis-connector'\nimport { NetworkConnector } from '@web3-react/network-connector'\n// import { WalletConnectConnector } from '@web3-react/walletconnect-connector'\n// import { WalletLinkConnector } from '@web3-react/walletlink-connector'\n// import { LedgerConnector } from '@web3-react/ledger-connector'\n// import { TrezorConnector } from '@web3-react/trezor-connector'\n// import { FrameConnector } from '@web3-react/frame-connector'\n// import { AuthereumConnector } from '@web3-react/authereum-connector'\n// import { FortmaticConnector } from '@web3-react/fortmatic-connector'\n// import { SquarelinkConnector } from '@web3-react/squarelink-connector'\n// import { TorusConnector } from '@web3-react/torus-connector'\n\nrequire('dotenv').config();\n\nconst POLLING_INTERVAL = 12000\nconst RPC_URLS: { [chainId: number]: string } = {\n  3: \"https://ropsten.infura.io/v3/084ddf3da9e240c5b5dd9264f37c0526\" as string\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds: [3] })\n\nexport const network = new NetworkConnector({\n  urls: { 3: RPC_URLS[3] },\n  defaultChainId: 3,\n  pollingInterval: POLLING_INTERVAL\n})\n\n// export const walletconnect = new WalletConnectConnector({\n//   rpc: { 1: RPC_URLS[1] },\n//   bridge: 'https://bridge.walletconnect.org',\n//   qrcode: true,\n//   pollingInterval: POLLING_INTERVAL\n// })\n//\n// export const walletlink = new WalletLinkConnector({\n//   url: RPC_URLS[1],\n//   appName: 'web3-react example'\n// })\n//\n// export const ledger = new LedgerConnector({ chainId: 1, url: RPC_URLS[1], pollingInterval: POLLING_INTERVAL })\n//\n// export const trezor = new TrezorConnector({\n//   chainId: 1,\n//   url: RPC_URLS[1],\n//   pollingInterval: POLLING_INTERVAL,\n//   manifestEmail: 'dummy@abc.xyz',\n//   manifestAppUrl: 'http://localhost:1234'\n// })\n//\n// export const frame = new FrameConnector({ supportedChainIds: [1] })\n//\n// export const authereum = new AuthereumConnector({ chainId: 42 })\n//\n// export const fortmatic = new FortmaticConnector({ apiKey: process.env.FORTMATIC_API_KEY as string, chainId: 4 })\n\nexport const portis = new PortisConnector({ dAppId: 'cfefa032-9afd-4833-bfb4-2b0cb7ec3413' as string, networks: [1, 100] })\n\n// export const squarelink = new SquarelinkConnector({\n//   clientId: process.env.SQUARELINK_CLIENT_ID as string,\n//   networks: [1, 100]\n// })\n\n// export const torus = new TorusConnector({ chainId: 1 })\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from './connectors'\n\nrequire('dotenv').config();\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}\n","import erc20Abi from \"./abis/erc20\";\nimport ownableAbi from \"./abis/ownable\";\nimport epnscoreAbi from \"./abis/epnscore\";\n\nexport const abis = {\n  erc20: erc20Abi,\n  ownable: ownableAbi,\n  epnscore: epnscoreAbi,\n};\n\nexport { default as addresses } from \"./addresses\";\n","import React from \"react\";\n\nimport { addresses, abis } from \"@project/contracts\";\nconst ethers = require('ethers');\n\n// FeedDB Helper Function\nconst EPNSCoreHelper = {\n  // To get if user is a channel\n  getUserInfo: async (wallet, contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users(wallet)\n        .then(response => {\n          console.log(response);\n          resolve(response);\n        })\n        .catch((err) => {\n          console.log(err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel's Info\n  getChannelInfo: async (channel, contract) => {\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      contract.channels(channel)\n        .then(response => {\n          console.log(response);\n          resolve(response);\n        })\n        .catch((err) => {\n          console.log(err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel's AddChannel event\n  getChannelAddEvent: async (channel, startBlock, endBlock, contract) => {\n    return new Promise ((resolve, reject) => {\n      // To get channel ipfs hash from channel info\n      let filteredResponse;\n      contract.queryFilter('AddChannel', startBlock, endBlock)\n        .then(response => {\n\n          response.forEach(function (item) {\n            if (item.args[0] == channel) {\n              filteredResponse = item;\n            }\n          });\n\n          console.log(\"Full Response: \");\n          console.log(response);\n          console.log(\"Filtered Response: \");\n          console.log(filteredResponse);\n\n          resolve(filteredResponse);\n        })\n        .catch((err) => {\n          console.log(err);\n          reject(err);\n        });\n    })\n  },\n  // Retrive IPFS File from ipfshash\n  getJsonFileFromIPFSHash: async(ipfs) => {\n    return new Promise ((resolve, reject) => {\n      // Form Gateway URL\n      const url = \"https://ipfs.io/ipfs/\" + ipfs;\n      fetch(url)\n        .then(response => response.json())\n        .then((jsonData) => {\n          console.log(jsonData)\n          resolve(jsonData);\n        })\n        .catch((error) => {\n          console.error(error);\n          reject(error);\n        });\n    });\n  },\n  // Finally a helper to get Channel from User's address\n  getChannelJsonFromUserAddress: async (wallet, contract) => {\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      EPNSCoreHelper.getUserInfo(wallet, contract)\n        .then(response => EPNSCoreHelper.getChannelInfo(wallet, contract))\n        .then(response => EPNSCoreHelper.getChannelAddEvent(wallet, response.channelStartBlock.toNumber(), response.channelStartBlock.toNumber(), contract))\n        .then(response => EPNSCoreHelper.getJsonFileFromIPFSHash(response.args[1]))\n        .then(response => resolve(response))\n        .catch(err => reject(err));\n    });\n  },\n  // To retrieve a channel's Info\n  getPublicKey: async (address, contract) => {\n    return new Promise ((resolve, reject) => {\n      // To get channel ipfs hash from channel info\n      let filteredResponse;\n      contract.queryFilter('PublicKeyRegistered')\n        .then(response => {\n\n          response.forEach(function (item) {\n            if (item.args[0] == address) {\n              filteredResponse = item;\n            }\n          });\n\n          console.log(\"Full Response: \");\n          console.log(response);\n          console.log(\"Filtered Response: \");\n          console.log(filteredResponse);\n\n          if (filteredResponse.length == 0) {\n            reject()\n          }\n          else {\n            resolve(filteredResponse.args[1]);\n          }\n\n        })\n        .catch((err) => {\n          console.log(err);\n          reject(err);\n        });\n    })\n  },\n}\n\nexport default EPNSCoreHelper;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\n\nimport Loader from 'react-loader-spinner'\nimport Switch from 'components/Switch'\nimport { bigNumberify } from 'ethers/utils'\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\nimport { addresses, abis } from \"@project/contracts\";\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport CryptoHelper from 'helpers/CryptoHelper';\nconst ethers = require('ethers');\n\nconst ipfs = require('ipfs-api')()\n\n// Create Header\nfunction ChannelDashboard({ epnscore }) {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [processing, setProcessing] = React.useState(false);\n\n  const [recipient, setRecipient] = React.useState('');\n  const [secret, setSecret] = React.useState('');\n  const [type, setType] = React.useState('');\n  const [sub, setSub] = React.useState('');\n  const [msg, setMsg] = React.useState('');\n  const [cta, setCTA] = React.useState('');\n  const [img, setImg] = React.useState('');\n\n  React.useEffect(() => {\n\n  });\n\n  const handleSendMessage = async () => {\n    // Check everything in order\n    // skip this for now\n    setProcessing(true);\n\n    var signer = library.getSigner(account);\n    let contract = new ethers.Contract(epnscore, abis.epnscore, signer);\n\n    let nsub = sub;\n    let nmsg = msg;\n    let secretEncrypted;\n\n    let esub;\n    let emsg;\n    let ecta;\n    let eimg;\n\n    if (type === \"2\" || parseInt(type) == 2) {\n      // Create secret\n      let secret = CryptoHelper.makeid(14);\n\n      // Encrypt payload and change sub and msg in notification\n      nsub = \"You have a secret message!\";\n      nmsg = \"Open the app to see your secret message!\";\n\n      // get public key from EPNSCoreHelper\n      let k = await EPNSCoreHelper.getPublicKey(recipient, contract);\n\n      let publickey = k.toString().substring(2);\n      console.log(\"This is public Key: \" + publickey);\n\n      secretEncrypted = await CryptoHelper.encryptWithECIES(secret, publickey);\n      esub = CryptoHelper.encryptWithAES(sub, secret);\n      emsg = CryptoHelper.encryptWithAES(msg, secret);\n      ecta = CryptoHelper.encryptWithAES(cta, secret);\n      eimg = CryptoHelper.encryptWithAES(img, secret);\n    }\n\n    const input = JSON.stringify(\n      {\n        \"notification\": {\n          \"title\": nsub,\n          \"body\": nmsg\n        },\n        \"data\": {\n          \"type\": type,\n          \"secret\": secretEncrypted,\n          \"asub\": esub,\n          \"amsg\": emsg,\n          \"acta\": ecta,\n          \"aimg\": eimg\n        }\n      }\n    )\n    const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\n\n    console.log(\"sending payload\");\n    const cid = await ipfs.add(input);\n    console.log(\"IPFS cid:\", cid);\n    //console.log(await ipfs.cat(cid));\n\n    // Send Transaction\n    // First Approve DAI\n    var anotherSendTxPromise = contract.sendMessage(recipient, type, cid, 1);\n\n    anotherSendTxPromise.then(function(tx) {\n      console.log(tx);\n      console.log(\"Check: \" + account);\n\n    });\n  }\n\n  return (\n    <Container>\n      <Channel>\n        <Notice>\n          <Title>Send Message!</Title>\n          <Info>EPNS supports three types of messages (for now!). <b>Groups</b>, <b>Secrets</b> and <b>Targetted</b>.</Info>\n          <Info>Group messages go to all people subscribed in the group. Secrets are encrypted and go to a specific subscriber (no one else can view it, thanks crypto!), Targetted are non-encrypted secrets mostly sent from the EPNS group to channel owners.</Info>\n        </Notice>\n\n        <FormSubmision>\n          <Row>\n            <Header>Message Type</Header>\n            <Input placeholder=\" (1 for Normal, 2 for Secret)\" value={type} onChange={(e) => {setType(e.target.value)}} />\n          </Row>\n\n          <Row>\n            <Header>Recipient</Header>\n            <Input placeholder=\"Channel Address for msg type 1, recipient for 2\" value={recipient} onChange={(e) => {setRecipient(e.target.value)}} />\n          </Row>\n\n          <Row>\n            <Header>Subject</Header>\n            <Input placeholder=\"The subject of the topic\" value={sub} onChange={(e) => {setSub(e.target.value)}} />\n          </Row>\n\n          <Row>\n            <Header>Message</Header>\n            <ShortInfo placeholder=\"The message to deliver\" maxlength = \"500\" value={msg} onChange={(e) => {setMsg(e.target.value)}}/>\n          </Row>\n\n          <Row>\n            <Header>Call to Action</Header>\n            <Input placeholder=\"Call to action url if any\" maxlength = \"200\" value={cta} onChange={(e) => {setCTA(e.target.value)}} />\n          </Row>\n\n          <Row>\n            <Header>Image url</Header>\n            <Input placeholder=\"Image url if any\" maxlength = \"200\" value={img} onChange={(e) => {setImg(e.target.value)}} />\n          </Row>\n        </FormSubmision>\n\n        <Buttons>\n          <Continue theme='#674c9f' disabled={processing} onClick={handleSendMessage}>\n            {processing &&\n              <Loader\n               type=\"Oval\"\n               color=\"#FFF\"\n               height={16}\n               width={16}\n              />\n            }\n            {!processing &&\n              <Text>Group Message</Text>\n            }\n          </Continue>\n          <Continue theme='#e20880' disabled={processing} onClick={handleSendMessage}>\n            {processing &&\n              <Loader\n               type=\"Oval\"\n               color=\"#FFF\"\n               height={16}\n               width={16}\n              />\n            }\n            {!processing &&\n              <Text>Secret Message</Text>\n            }\n          </Continue>\n        </Buttons>\n\n\n      </Channel>\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  width: '100%';\n`\n\nconst Channel = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\nconst Notice = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst Title = styled.h1`\n  color: #674c9f;\n  font-size: 30px;\n  font-weight: 300;\n  margin-top: 0px;\n  margin-bottom: 30px;\n`\n\nconst Info = styled.label`\n  padding-bottom: 20px;\n  font-size: 14px;\n  color: #000;\n`\n\nconst Buttons = styled(Info)`\n  display: flex;\n    justify-content: space-around;\n`\n\nconst FormSubmision = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst Input = styled.input`\n  border: 0px;\n  outline: 0px;\n  border-bottom: 1px solid #ddd;\n  margin: 25px 10px;\n  padding: 5px;\n  flex: 1;\n`\n\nconst Name = styled(Input)`\n  border-bottom: 1px solid #e20880;\n  font-size: 24px;\n`\n\nconst ShortInfo = styled.textarea`\n  outline: 0;\n  border: 0;\n  border-bottom: 1px solid #35c5f3;\n  margin: 10px;\n  font-size: 18px;\n  min-height: 80px;\n  color: #111;\n  flex: 1;\n`\n\nconst Url = styled(Input)`\n  border-bottom: 1px solid #674c9f;\n  font-size: 1=8px;\n`\n\nconst DropzoneContainer = styled.div`\n  margin: 20px 20px 10px 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst Text = styled.span`\n\n`\n\nconst Header = styled.span`\n  width: 150px;\n`\n\nconst Continue = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n  background: ${props => props.theme || '#674c9f'};\n  border-radius: 8px;\n  padding: 16px;\n  font-size: 16px;\n  font-weight: 400;\n  flex: 1;\n  margin: 10px 20px;\n`\n\n\n// Export Default\nexport default ChannelDashboard;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\n\nimport 'react-dropzone-uploader/dist/styles.css'\nimport Dropzone from 'react-dropzone-uploader'\n\nimport Loader from 'react-loader-spinner'\nimport { bigNumberify } from 'ethers/utils'\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\nimport { addresses, abis } from \"@project/contracts\";\nconst ethers = require('ethers');\n\nconst ipfs = require('ipfs-api')()\n\n// Create Header\nfunction CreateChannel({ epnscore, dai }) {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [processing, setProcessing] = React.useState(false);\n  const [uploadDone, setUploadDone] = React.useState(false);\n  const [file, setFile] = React.useState(undefined);\n\n  const [name, setName] = React.useState('');\n  const [desc, setDesc] = React.useState('');\n  const [url, setURL] = React.useState('');\n\n  React.useEffect(() => {\n\n  });\n\n  // called every time a file's `status` changes\n  const handleChangeStatus = ({ meta, file }, status) => { console.log(status, meta, file) }\n\n  const onDropHandler=(files) =>{\n    //   var file = files[0]\n    //   const reader = new FileReader();\n    //   reader.onload = (event) => {\n    //     console.log(event.target.result);\n    //   };\n    //   reader.readAsDataURL(file);\n    // setFile(file);\n    // console.log(\"Drop Handler\");\n    // console.log(file);\n  }\n\n  // receives array of files that are done uploading when submit button is clicked\n  const handleSubmit = (files, allFiles) => {\n    setUploadDone(true);\n\n    console.log(files.map(f => f.meta))\n    allFiles.forEach(f => {\n      var file = f.file;\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n      console.log(f.file);\n      reader.onloadend = function (e) {\n        console.log(reader.result);\n        setFile(reader.result);\n      }\n    })\n    console.log(\"andle Submit\");\n  }\n\n  const handleCreateChannel = async () => {\n    // Check everything in order\n    // skip this for now\n    setProcessing(true);\n\n    console.log(file);\n    console.log(name);\n    console.log(desc);\n    console.log(url);\n\n    const input = JSON.stringify(\n      {\n        \"name\": name,\n        \"info\": desc,\n        \"url\": url,\n        \"icon\": file\n      }\n    )\n    const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\n\n    console.log(\"sending payload\");\n    const cid = await ipfs.add(input);\n    console.log(\"IPFS cid:\", cid);\n    //console.log(await ipfs.cat(cid));\n\n    // Send Transaction\n    // First Approve DAI\n    var signer = library.getSigner(account);\n\n    let daiContract = new ethers.Contract(dai, abis.erc20, signer);\n    var sendTransactionPromise = daiContract.approve(epnscore, bigNumberify('50000000000000000000000001'));\n    const tx = await sendTransactionPromise;\n\n    console.log(tx);\n    console.log(\"waiting for tx to finish\");\n    await library.waitForTransaction(tx.hash);\n\n    let contract = new ethers.Contract(epnscore, abis.epnscore, signer);\n    var anotherSendTxPromise = contract.createChannelWithFees(cid);\n\n    anotherSendTxPromise.then(function(tx) {\n      console.log(tx);\n      console.log(\"Check: \" + account);\n\n    });\n  }\n\n  return (\n    <Container>\n      <Channel>\n        <Notice>\n          <Title>Create your Channel!</Title>\n\n          {uploadDone && !processing &&\n            <Info>Image Verified! Just fill in your other information and hit <b>Beam me up</b> to create your channel... literal goosebumps!!!</Info>\n          }\n          {!uploadDone &&\n            <>\n            <Info><b>Ethereum Push Notification Service</b> (EPNS) makes it extremely easy to open and maintain a genuine channel of communication with your users.</Info>\n            <Info>The only step for <b>You</b> or your <b>dApp</b> or even your <b>Smart Contract</b> is opening up the channel.</Info>\n            <Info>Rest of the heavy lifting of securely connecting users, wallets, device tokens, listening to and ensuring sent events, forming and delivering payload to each mobile or destop devices and informing them and you about it is done automagically by EPNS.</Info>\n            </>\n          }\n        </Notice>\n\n        {!processing && uploadDone &&\n          <FormSubmision>\n            <Name placeholder=\"Your Channel Name\" maxlength = \"40\" value={name} onChange={(e) => {setName(e.target.value)}}/>\n            <ShortInfo placeholder=\"Your Channel's Short Description\" maxlength = \"200\" value={desc} onChange={(e) => {setDesc(e.target.value)}}/>\n            <Url placeholder=\"Your website\" maxlength = \"200\" value={url} onChange={(e) => {setURL(e.target.value)}}/>\n          </FormSubmision>\n        }\n\n          <>\n          {!uploadDone &&\n            <DropzoneContainer>\n              <Info>Drop in your channel <b>(dApp or Website) official logo</b> here and submit first.</Info>\n              <Dropzone\n                onChangeStatus={handleChangeStatus}\n                onSubmit={handleSubmit}\n                onDrop={onDropHandler}\n                maxFiles={1}\n                multiple={false}\n                accept=\"image/jpeg,image/png\"\n              />\n            </DropzoneContainer>\n          }\n          </>\n\n        {uploadDone &&\n          <Continue theme={processing ? '#674c9f' : '#e20880'} disabled={processing} onClick={handleCreateChannel}>\n            {processing &&\n              <Loader\n               type=\"Oval\"\n               color=\"#FFF\"\n               height={16}\n               width={16}\n              />\n            }\n            {!processing &&\n              <Text>Beam me up!</Text>\n            }\n          </Continue>\n        }\n\n      </Channel>\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  width: '100%';\n`\n\nconst Channel = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\nconst Notice = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst Title = styled.h1`\n  color: #674c9f;\n  font-size: 30px;\n  font-weight: 300;\n  margin-top: 0px;\n  margin-bottom: 30px;\n`\n\nconst Info = styled.label`\n  padding-bottom: 20px;\n  font-size: 14px;\n  color: #000;\n`\n\nconst Info2 = styled(Info)`\n\n`\n\nconst FormSubmision = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst Input = styled.input`\n  border: 0px;\n  outline: 0px;\n  border-bottom: 1px solid #ddd;\n  margin: 25px 10px;\n  padding: 5px;\n`\n\nconst Name = styled(Input)`\n  border-bottom: 1px solid #e20880;\n  font-size: 24px;\n`\n\nconst ShortInfo = styled.textarea`\n  outline: 0;\n  border: 0;\n  border-bottom: 1px solid #35c5f3;\n  margin: 10px;\n  font-size: 18px;\n  min-height: 80px;\n  color: #111;\n`\n\nconst Url = styled(Input)`\n  border-bottom: 1px solid #674c9f;\n  font-size: 1=8px;\n`\n\nconst DropzoneContainer = styled.div`\n  margin: 20px 20px 10px 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Text = styled.span`\n\n`\n\nconst Continue = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n  background: ${props => props.theme || '#674c9f'};\n  margin: 30px 0px 0px 0px;\n  border-radius: 8px;\n  padding: 16px;\n  font-size: 16px;\n  font-weight: 400;\n`\n\n\n// Export Default\nexport default CreateChannel;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\n// Create Header\nfunction Feedbox() {\n  React.useEffect(() => {\n\n  });\n\n  // to create blockies\n\n  return (\n    <Container>\n      Coming in Version 0.2!\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  font-size: 32px;\n  color: #DDD;\n  display: flex;\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n`\n\n// Export Default\nexport default Feedbox;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\n// Create Header\nfunction ViewChannels() {\n  React.useEffect(() => {\n\n  });\n\n  // to create blockies\n\n  return (\n    <Container>\n      Coming in Version 0.2!\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  font-size: 32px;\n  color: #DDD;\n  display: flex;\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n`\n\n// Export Default\nexport default ViewChannels;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\nimport Loader from 'react-loader-spinner'\n\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\n\nimport ChannelDashboard from 'segments/ChannelDashboard';\nimport CreateChannel from 'segments/CreateChannel';\nimport Feedbox from 'segments/Feedbox';\nimport ViewChannels from 'segments/ViewChannels';\n\nimport { addresses, abis } from \"@project/contracts\";\nconst ethers = require('ethers');\n\n// Create Header\nfunction Home({ setBadgeCount, bellPressed, epnscore, dai }) {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [controlAt, setControlAt] = React.useState(0);\n  const [adminStatusLoaded, setAdminStatusLoaded] = React.useState(false);\n  const [channelAdmin, setChannelAdmin] = React.useState(false);\n  const [channelJson, setChannelJson] = React.useState([]);\n\n  React.useEffect(() => {\n    // Reset when account refreshes\n    setChannelAdmin(false);\n    setAdminStatusLoaded(false);\n    userClickedAt(0);\n    setChannelJson([]);\n\n    // Call Admin Chcek\n    checkUserForChannelRights();\n\n  }, [account]);\n\n  // Revert to Feedbox on bell pressed\n  React.useEffect(() => {\n    setControlAt(0);\n  }, [bellPressed]);\n\n  // handle user action at control center\n  const userClickedAt = (controlIndex) => {\n    setControlAt(controlIndex);\n  }\n\n  //Start Listening...\n  const listenerForChannelRights = async () => {\n    let contract = new ethers.Contract(epnscore, abis.epnscore, library)\n    let topic = ethers.utils.id(\"AddChannel(address,string)\");\n\n    let filter = {\n        address: epnscore,\n        topics: [ topic ]\n    }\n\n    library.on(filter, (result) => {\n      checkUserForChannelRights();\n      console.log(result);\n    });\n  }\n\n  // Check if a user is a channel or not\n  const checkUserForChannelRights = async () => {\n\n    // Check if account is admin or not and handle accordingly\n    let contract = new ethers.Contract(epnscore, abis.epnscore, library);\n    let channelInfo;\n    EPNSCoreHelper.getChannelJsonFromUserAddress(account, contract)\n      .then(response => {\n        console.log(response);\n        setChannelJson(response);\n        setChannelAdmin(true);\n        setAdminStatusLoaded(true);\n      })\n      .catch(e => {\n        setChannelAdmin(false);\n        setAdminStatusLoaded(true);\n      });\n\n    // Start listening\n    listenerForChannelRights();\n  }\n\n  // Render\n  return (\n    <Container>\n      <Controls>\n        <ControlButton index={0} active={controlAt == 0 ? 1 : 0} border=\"#e20880\"\n          onClick={() => {\n            userClickedAt(0)\n          }}\n        >\n          <ControlImage src=\"./svg/feedbox.svg\" active={controlAt == 0 ? 1 : 0} />\n          <ControlText active={controlAt == 0 ? 1 : 0}>Feedbox</ControlText>\n        </ControlButton>\n        <ControlButton index={1} active={controlAt == 1 ? 1 : 0} border=\"#35c5f3\"\n          onClick={() => {\n            userClickedAt(1)\n          }}\n        >\n          <ControlImage src=\"./svg/channel.svg\" active={controlAt == 1 ? 1 : 0}/>\n          <ControlText active={controlAt == 1 ? 1 : 0}>Channels</ControlText>\n        </ControlButton>\n\n        <ControlButton index={2} active={controlAt == 2 ? 1 : 0} border=\"#674c9f\"\n          disabled={!adminStatusLoaded}\n          onClick={() => {\n            if (adminStatusLoaded) {\n              userClickedAt(2)\n            }\n          }}\n        >\n          {!adminStatusLoaded &&\n            <Loader\n               type=\"Oval\"\n               color=\"#674c9f\"\n               height={32}\n               width={32}\n            />\n          }\n          {channelAdmin && adminStatusLoaded &&\n            <ControlChannelContainer>\n              <ControlChannelImage src={`${channelJson.icon}`} active={controlAt == 2 ? 1 : 0}/>\n              <ControlChannelText active={controlAt == 2 ? 1 : 0}>{channelJson.name}</ControlChannelText>\n            </ControlChannelContainer>\n          }\n          {!channelAdmin && adminStatusLoaded &&\n            <>\n              <ControlImage src=\"./svg/channeladmin.svg\" active={controlAt == 2 ? 1 : 0}/>\n              <ControlText active={controlAt == 2 ? 1 : 0}>Create Your Channel</ControlText>\n            </>\n          }\n        </ControlButton>\n      </Controls>\n      <Interface>\n        {controlAt == 0 &&\n          <Feedbox />\n        }\n        {controlAt == 1 &&\n          <ViewChannels />\n        }\n        {controlAt == 2 && !channelAdmin && adminStatusLoaded &&\n          <CreateChannel\n            epnscore={epnscore}\n            dai={dai}\n          />\n        }\n        {controlAt == 2 && channelAdmin && adminStatusLoaded &&\n          <ChannelDashboard\n            epnscore={epnscore}\n          />\n        }\n      </Interface>\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  min-height: 80vh;\n  flex-direction: column;\n`\n\nconst Controls = styled.div`\n  flex: 0;\n  display: flex;\n  flex-direction: row;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`\n\nconst ControlButton = styled.div`\n  flex: 1 1 25%;\n  height: 120px;\n  min-width: 240px;\n  background: #fff;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225,225,225);\n\n  border-bottom: 10px solid rgb(180,180,180);\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-bottom: 10px solid ${(props) => props.active ? props.border : \"rgb(180,180,180)\"};\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst ControlImage = styled.img`\n  height: 30%;\n  margin-right: 15px;\n  filter: ${(props) => props.active ? \"brightness(1)\" : \"brightness(0)\"};\n  opacity: ${(props) => props.active ? \"1\" : \"0.25\"};\n\n  transition: transform .2s ease-out;\n  ${ props => props.active && css`\n    transform: scale(3.5) translate(-20px, 0px);\n    opacity: 0.4;\n  `};\n`\n\nconst ControlText = styled.label`\n  font-size: 16px;\n  font-weight: 200;\n  opacity: ${(props) => props.active ? \"1\" : \"0.75\"};\n\n  transition: transform .2s ease-out;\n  ${ props => props.active && css`\n    transform: scale(1.5) translate(-10px, 0px);\n  `};\n`\n\nconst ControlChannelContainer = styled.div`\n  margin: 0px 20px;\n  flex-direction: column;\n  align-items: center;\n  display: flex;\n`\n\nconst ControlChannelImage = styled.img`\n    width: 20%;\n    margin-bottom: 10px;\n    transition: transform .2s ease-out;\n    ${ props => props.active && css`\n      transform: scale(3.5) translate(-40px, 5px);\n      opacity: 0.2;\n      z-index: 1;\n    `};\n`\n\nconst ControlChannelText = styled.label`\n  font-size: 16px;\n  font-weight: 300;\n  opacity: ${(props) => props.active ? \"1\" : \"0.75\"};\n  transition: transform .2s ease-out;\n  background: -webkit-linear-gradient(#db268a, #34c6f3);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  z-index: 2;\n  ${ props => props.active && css`\n    transform: scale(1.1) translate(0px, -20px);\n  `};\n\n`\n\nconst Interface = styled.div`\n  flex: 1;\n  display: flex;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 20px;\n  border: 1px solid rgb(225,225,225);\n\n  margin: 15px;\n  padding: 20px;\n  overflow: hidden;\n`\n\n// Export Default\nexport default Home;\n","// Usage:\n//   create component file (e.g. BlockiesIdenticon.js) using uncommented code below\n//   npm install blockies-identicon\n//   in the file you want to use the component (e.g. BlockiesIdenticon.js):\n//   import Blockies from \"blockies/react-component\";\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\nimport React from 'react';\nimport blockies from \"./blockies\";\n\nexport default class BlockiesIdenticon extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  getOpts () {\n    return {\n      seed: this.props.opts.seed || \"foo\",\n      color: this.props.opts.color || \"#dfe\",\n      bgcolor: this.props.opts.bgcolor || \"#a71\",\n      size: this.props.opts.size || 15,\n      scale: this.props.opts.scale || 3,\n      spotcolor: this.props.opts.spotcolor || \"#000\"\n    };\n  }\n  componentDidMount() {\n    this.draw();\n  }\n  componentDidUpdate(prevProps) {\n    // Check for prop change\n    if (this.props.seed !== prevProps.seed) {\n      this.draw();\n    }\n  }\n  draw() {\n    blockies.render({\n      seed: this.props.opts.seed,\n      size: this.props.opts.size,\n      scale: this.props.opts.scale\n    }, this.canvas);\n  }\n  render() {\n    return React.createElement(\"canvas\", {ref: canvas => this.canvas = canvas});\n  }\n}\n","import React from \"react\";\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\nimport styled, { css } from 'styled-components';\n\nimport Loader from 'react-loader-spinner'\nimport Blockies from \"components/BlockiesIdenticon\";\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\n// Create Header\nfunction Profile() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [address, setAddress] = React.useState('');\n  const [ens, setENS] = React.useState('');\n  const [ensFetched, setENSFetched] = React.useState(false);\n\n  React.useEffect(() => {\n    if (account && account != '') {\n      // Check if the address is the same\n      if (address !== account) {\n        setENS('');\n        setENSFetched(false);\n\n        // get ens\n        library\n          .lookupAddress(account).then(function(name) {\n            setENS(name);\n            setENSFetched(true);\n            setAddress(account);\n          })\n          .catch(() => {\n            setENSFetched(true);\n            setAddress(account);\n          })\n      }\n\n    }\n  }, [account]);\n\n  // to create blockies\n\n  return (\n    <>\n    {account && account !== '' && !error &&\n      <Container>\n        <Blocky>\n          <BlockyInner>\n             <Blockies seed={account.toLowerCase()} opts={{seed: account.toLowerCase(), size: 7, scale: 7}}/>\n          </BlockyInner>\n        </Blocky>\n        <Wallet>\n        {!ensFetched &&\n          <Loader\n      \t     type=\"Oval\"\n      \t     color=\"#FFF\"\n      \t     height={16}\n      \t     width={16}\n      \t  />\n        }\n        {ensFetched && ens &&\n          <>{ens}</>\n        }\n        {ensFetched && !ens &&\n          <>{account.substring(0, 6)}.....{account.substring(account.length - 6)}</>\n        }\n        </Wallet>\n      </Container>\n    }\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  margin: 0;\n  padding: 0;\n  background: none;\n  border: 0;\n  outline: 0;\n  justify-content: flex-start;\n  flex: 1,\n  flex-direction: row;\n  align-items: center;\n  display: flex;\n`\n\nconst Blocky = styled.div`\n  position: relative;\n  width: 50px;\n  height: 50px;\n  border-radius: 100%;\n  overflow: hidden;\n  transform: scale(0.85);\n  outline-width: 2px;\n  outline-color: rgba(225,225,225,1);\n`\n\nconst BlockyInner = styled.div`\n`\n\nconst Wallet = styled.span`\n  margin: 0px 10px;\n  padding: 8px 15px;\n  height: 16px;\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  font-weight: bold;\n  font-size: 14px;\n  color: #fff;\n  border-radius: 15px;\n  background: rgb(226,8,128);\n  background: linear-gradient(107deg, rgba(226,8,128,1) 30%, rgba(103,76,159,1) 70%, rgba(53,197,243,1) 100%);\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\n// Export Default\nexport default Profile;\n","import React from \"react\";\nimport styled, { css, keyframes } from 'styled-components';\nimport { AnimateOnChange } from 'react-animation';\n\n// Create Header\nfunction Bell({ badgeCount, bellPressedCB, width, height }) {\n  const [badge, setBadge] = React.useState(0);\n  const [ring, setRing] = React.useState(false);\n\n  React.useEffect(() => {\n    // Set new badge count and ring the bell\n    setBadge(badgeCount);\n\n    if (badge > 0) {\n      setResetRinger();\n    }\n  }, [badgeCount]);\n\n  const setResetRinger = () => {\n    setRing(true);\n\n    setTimeout(() => {\n        setRing(false)\n    }, 500);\n  }\n\n  return (\n    <Container\n      onClick={() => {\n        if (bellPressedCB) {bellPressedCB();}\n      }}\n      width={width}\n      height={height}\n    >\n      <BellImage ring={ring} src=\"./bell.png\" className=\"tadaaa\" ringme={ring} width={width} height={height} />\n      <BellImageAbs src=\"./bellball.png\" width={width} height={height} />\n      <BellImageAbs src=\"./ring.png\" width={width} height={height} />\n      {badge != 0 &&\n        <AnimateOnChange\n          animationIn=\"fadeIn\"\n          animationOut=\"fadeOut\"\n          durationOut={200}\n        >\n          <Badge>{badge}</Badge>\n        </AnimateOnChange>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  border: 0;\n  outline: 0;\n  background: transparent;\n  border: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 10px;\n  position: relative;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst tadaaa = keyframes`\n  0% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n\n  10%, 20% {\n    -webkit-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n  }\n\n  30%, 50%, 70%, 90% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n  }\n\n  40%, 60%, 80% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n  }\n\n  100% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n`;\n\nconst BellImage = styled.img`\n  position: absolute;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n\n  transition: transform .2s ease-out;\n  ${ props => props.ringme && css`\n    animation: ${tadaaa} 1s ease-out;\n  `};\n\n\n`\n\nconst BellImageAbs = styled(BellImage)`\n  left: 0,\n`\n\nconst Badge = styled.span`\n  position: absolute;\n  font-size: 10px;\n  color: #fff;\n  padding: 2px 4px;\n  border-radius: 100%;\n  background: rgba(208.0, 44.0, 30.0, 1.0);\n  top: 0px;\n  left: 5px;\n  font-weight: bold;\n`\n\n// Export Default\nexport default Bell;\n","import React from \"react\";\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\n\nimport styled, { css } from 'styled-components';\n\nimport Profile from 'components/Profile';\nimport Bell from 'components/Bell';\n\n\n// Create Header\nfunction Header({ badgeCount, bellPressedCB }) {\n  const { active, error, account, chainId } = useWeb3React();\n  const randseed = new Array(4);\n\n  React.useEffect(() => {\n    if (account && account != '') {\n\n    }\n  }, [account]);\n\n  function getErrorMessage(error: Error) {\n    if (error instanceof NoEthereumProviderError) {\n      return 'Web3 not enabled, install MetaMask on desktop or visit from a dApp browser on mobile'\n    } else if (error instanceof UnsupportedChainIdError) {\n      return \"Unsupported Network, please connect to Ropsten\"\n    } else if (\n      error instanceof UserRejectedRequestErrorInjected\n    ) {\n      return 'Please authorize this website to access the dApp'\n    } else {\n      console.error(error)\n      return 'An unknown error occurred. Check the console for more details'\n    }\n  }\n\n  // to create blockies\n\n  return (\n    <HeaderStyle>\n      <ProfileContainer>\n      {active && !error &&\n        <Profile />\n      }\n      {!active &&\n        <Logo src=\"epns.png\" />\n      }\n      </ProfileContainer>\n      <UserControls>\n        {active && !error &&\n          <Bell\n            badgeCount={badgeCount}\n            bellPressedCB={bellPressedCB}\n            width={40}\n            height={40}\n          />\n        }\n      </UserControls>\n      <NetworkDisplayer>\n        {!!error &&\n          <PrimaryTheme>{getErrorMessage(error)}</PrimaryTheme>\n        }\n        {!active && !error &&\n          <ThirdTheme>Please connect to a Web3 Network</ThirdTheme>\n        }\n        <Connection phase={active ? 'active' : error ? 'error' : 'waiting'} />\n      </NetworkDisplayer>\n\n    </HeaderStyle>\n  );\n}\n\n// CSS Styles\nconst HeaderStyle = styled.div`\n  height: 100%;\n  padding: 10px 15px;\n  background: rgb(255,255,255);\n  background: linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 21%);\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n`\n\nconst ProfileContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justfy-content: flex-start;\n`\n\nconst Logo = styled.img`\n  height: 45px;\n`\n\nconst UserControls = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ImageButton = styled.button`\n\n`\n\nconst NetworkDisplayer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Notice = styled.span`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n`\n\nconst PrimaryTheme = styled(Notice)`\n  background: #e20880;\n`\n\nconst ThirdTheme = styled(Notice)`\n  background: #674c9f;\n`\n\nconst Connection = styled.span`\n  height: 10px;\n  width: 10px;\n  border-radius: 100%;\n  flex-shrink: 0;\n\n  ${props => props.phase === 'active' && css`\n    background: #77DD77;\n  `};\n\n  ${props => props.phase === 'waiting' && css`\n    background: #FFAE42;\n  `};\n\n  ${props => props.phase === 'error' && css`\n    background: #DC143C;\n  `};\n`\n\n// Export Default\nexport default Header;\n","import React from \"react\";\n\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { Web3Provider } from 'ethers/providers'\n\nimport { useEagerConnect, useInactiveListener } from 'hooks'\nimport {\n  injected,\n  portis,\n  network\n} from 'connectors'\nimport Loader from 'react-loader-spinner'\nimport { ethers } from \"ethers\";\n\nimport Home from 'pages/Home';\nimport Header from 'segments/Header';\n\nimport styled from 'styled-components';\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\nconst connectorsByName: { [name: string]: AbstractConnector } = {\n  Injected: injected,\n  Network: network,\n  Portis: portis\n}\n\nfunction getErrorMessage(error: Error) {\n  if (error instanceof NoEthereumProviderError) {\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\n  } else if (error instanceof UnsupportedChainIdError) {\n    return \"You're connected to an unsupported network.\"\n  } else if (\n    error instanceof UserRejectedRequestErrorInjected\n  ) {\n    return 'Please authorize this website to access your Ethereum account.'\n  } else {\n    console.error(error)\n    return 'An unknown error occurred. Check the console for more details.'\n  }\n}\n\nfunction getLibrary(provider, connector) {\n  return new ethers.providers.Web3Provider(provider); // this will vary according to whether you use e.g. ethers or web3.js\n}\n\nexport default function() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  )\n}\n\nfunction ChainId() {\n  const { chainId } = useWeb3React()\n\n  return (\n    <>\n      <span>Chain Id</span>\n      <span role=\"img\" aria-label=\"chain\">\n        ⛓\n      </span>\n      <span>{Number.isInteger(chainId) ? chainId : ''}</span>\n    </>\n  )\n}\n\nfunction BlockNumber() {\n  const { chainId, library } = useWeb3React()\n\n  const [blockNumber, setBlockNumber] = React.useState<number>()\n  React.useEffect((): any => {\n    if (!!library) {\n      let stale = false\n\n      library\n        .getBlockNumber()\n        .then((blockNumber: number) => {\n          if (!stale) {\n            setBlockNumber(blockNumber)\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setBlockNumber(null)\n          }\n        })\n\n      const updateBlockNumber = (blockNumber: number) => {\n        setBlockNumber(blockNumber)\n      }\n      library.on('block', updateBlockNumber)\n\n      return () => {\n        stale = true\n        library.removeListener('block', updateBlockNumber)\n        setBlockNumber(undefined)\n      }\n    }\n  }, [library, chainId]) // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return (\n    <>\n      <span>Block Number</span>\n      <span role=\"img\" aria-label=\"numbers\">\n        🔢\n      </span>\n      <span>\n        {Number.isInteger(blockNumber)\n          ? blockNumber.toLocaleString()\n          : blockNumber === null\n          ? 'Error'\n          : !!library\n          ? '...'\n          : ''}\n      </span>\n    </>\n  )\n}\n\nfunction Account() {\n  const { account } = useWeb3React()\n\n  return (\n    <>\n      <span>Account</span>\n      <span role=\"img\" aria-label=\"robot\">\n        🤖\n      </span>\n      <span>\n        {account === undefined\n          ? ''\n          : account === null\n          ? '-'\n          : `${account.substring(0, 6)}...${account.substring(account.length - 4)}`}\n      </span>\n    </>\n  )\n}\n\nfunction Balance() {\n  const { account, library, chainId } = useWeb3React()\n\n  const [balance, setBalance] = React.useState()\n  React.useEffect((): any => {\n    if (!!account && !!library) {\n      let stale = false\n\n      library\n        .getBalance(account)\n        .then((balance: any) => {\n          if (!stale) {\n            setBalance(balance)\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setBalance(null)\n          }\n        })\n\n      return () => {\n        stale = true\n        setBalance(undefined)\n      }\n    }\n  }, [account, library, chainId]) // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return (\n    <>\n      <span>Balance</span>\n      <span role=\"img\" aria-label=\"gold\">\n        💰\n      </span>\n      <span>\n        {!!balance\n          ? `Ξ${parseFloat(balance).toPrecision(4)}`\n          : balance === null\n          ? 'Error'\n          : account === null\n          ? '-'\n          : !!account && !!library\n          ? '...'\n          : ''}\n      </span>\n    </>\n  )\n}\n\nfunction HeaderOld() {\n  const { active, error } = useWeb3React()\n\n  return (\n    <>\n\n      <h5\n        style={{\n          display: 'grid',\n          gridGap: '0rem',\n          gridTemplateColumns: '1fr min-content 1fr',\n          maxWidth: '20rem',\n          lineHeight: '2rem',\n          margin: 'auto'\n        }}\n      >\n        <ChainId />\n        <BlockNumber />\n        <Account />\n        <Balance />\n      </h5>\n    </>\n  )\n}\n\nfunction App() {\n  const context = useWeb3React<Web3Provider>()\n  const { connector, library, chainId, account, activate, deactivate, active, error } = context\n\n  const [ badgeCount, setBadgeCount ] = React.useState(0);\n  const [ bellPressed, setBellPressed ] = React.useState(0);\n\n  // handle logic to recognize the connector currently being activated\n  const [activatingConnector, setActivatingConnector] = React.useState<AbstractConnector>()\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined)\n    }\n  }, [activatingConnector, connector])\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect()\n\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager || !!activatingConnector)\n\n  return (\n      <>\n        <HeaderContainer>\n          <Header\n            badgeCount={badgeCount}\n            bellPressedCB={() => {setBellPressed(bellPressed + 1)}}\n          />\n        </HeaderContainer>\n\n        <ParentContainer>\n        {(active) && !error && (\n          <HomeContainer>\n            <Home\n              setBadgeCount={setBadgeCount}\n              bellPressed={bellPressed}\n              epnscore={'0x42d10cdd9cdc4ae284e4bec54e204dbdc44adf9a'}\n              dai={'0xf80A32A835F79D7787E8a8ee5721D0fEaFd78108'}\n            />\n          </HomeContainer>\n\n        )}\n\n        {!active &&\n          <ProviderUpperContainer>\n            <ProviderLogo src=\"./epnsbell.png\" />\n            <ProviderContainer>\n              {Object.keys(connectorsByName).map(name => {\n                const currentConnector = connectorsByName[name]\n                const activating = currentConnector === activatingConnector\n                const connected = currentConnector === connector\n                const disabled = !triedEager || !!activatingConnector || connected || !!error\n                const image = name === 'Injected' ? './metamask.png' : name === 'Portis' ? './portis.png' : './ninja.png';\n\n                return (\n                  <ProviderButton\n                    disabled={disabled}\n                    key={name}\n                    onClick={() => {\n                      setActivatingConnector(currentConnector)\n                      activate(connectorsByName[name])\n                    }}\n                    border={name === 'Injected' ? '#e20880' : name === 'Portis' ? '#35c5f3' : '#674c9f'}\n                  >\n                    <ProviderImage src={image} />\n\n                    <ProviderLabel>\n                      {activating &&\n                        <Loader\n                           type=\"Oval\"\n                           color=\"#35c5f3\"\n                           height={20}\n                           width={20}\n                        />\n                      }\n                      {!activating &&\n                        <>\n                        {name === 'Injected' ? 'Connect with MetaMask' : name === 'Portis' ? 'Connect with Portis' : 'Login as Ninja'}\n                        </>\n                      }\n\n                    </ProviderLabel>\n\n                  </ProviderButton>\n                )\n              })}\n            </ProviderContainer>\n          </ProviderUpperContainer>\n        }\n\n        {active &&\n          <div\n            style={{\n              display: 'grid',\n              gridGap: '1rem',\n              gridTemplateColumns: 'fit-content',\n              maxWidth: '20rem',\n              margin: 'auto',\n              marginTop: '1200px'\n            }}\n          >\n            {(active || error) && (\n              <button\n                style={{\n                  height: '3rem',\n                  marginTop: '2rem',\n                  borderRadius: '1rem',\n                  borderColor: 'red',\n                  cursor: 'pointer'\n                }}\n                onClick={() => {\n                  deactivate()\n                }}\n              >\n                Deactivate\n              </button>\n            )}\n\n            {!!(library && account) && (\n              <button\n                style={{\n                  height: '3rem',\n                  borderRadius: '1rem',\n                  cursor: 'pointer'\n                }}\n                onClick={() => {\n                  library\n                    .getSigner(account)\n                    .signMessage('👋')\n                    .then((signature: any) => {\n                      window.alert(`Success!\\n\\n${signature}`)\n                    })\n                    .catch((error: any) => {\n                      window.alert('Failure!' + (error && error.message ? `\\n\\n${error.message}` : ''))\n                    })\n                }}\n              >\n                Sign Message\n              </button>\n            )}\n            {!!(connector === network && chainId) && (\n              <button\n                style={{\n                  height: '3rem',\n                  borderRadius: '1rem',\n                  cursor: 'pointer'\n                }}\n                onClick={() => {\n                  ;(connector as any).changeChainId(chainId === 1 ? 3 : 1)\n                }}\n              >\n                Switch Networks\n              </button>\n            )}\n            {connector === portis && (\n              <>\n                {chainId !== undefined && (\n                  <button\n                    style={{\n                      height: '3rem',\n                      borderRadius: '1rem',\n                      cursor: 'pointer'\n                    }}\n                    onClick={() => {\n                      ;(connector as any).changeNetwork(chainId === 1 ? 100 : 1)\n                    }}\n                  >\n                    Switch Networks\n                  </button>\n                )}\n                <button\n                  style={{\n                    height: '3rem',\n                    borderRadius: '1rem',\n                    cursor: 'pointer'\n                  }}\n                  onClick={() => {\n                    ;(connector as any).close()\n                  }}\n                >\n                  Kill Portis Session\n                </button>\n              </>\n            )}\n          </div>\n        }\n        </ParentContainer>\n\n\n      </>\n  );\n}\n\n\n// CSS STYLES\nconst HeaderContainer = styled.div`\n  height: 55px;\n  left: 0;\n  right: 0;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  z-index: 999;\n`\n\nconst ParentContainer = styled.div`\n  flex-wrap: wrap;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 80px 20px 20px 20px;\n  flex: 1;\n`\n\nconst HomeContainer = styled.div`\n  display: flex;\n  flex: 1;\n  align-self: center;\n  width: 100%;\n  max-width: 940px;\n`\n\nconst ProviderUpperContainer = styled.div`\n  display: flex;\n  flex: 1,\n  align-self: center;\n  flex-direction: column;\n`\n\nconst ProviderLogo = styled.img`\n  width: 15vw;\n  align-self: center;\n  display: flex;\n  margin: 20px;\n  min-width: 200px;\n`\n\nconst ProviderContainer = styled.div`\n  flex-wrap: wrap;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst ProviderButton = styled.button`\n  flex: 1 1 0;\n  min-width: 200px;\n  background: #fff;\n  outline: 0;\n  max-width: 200px;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225,225,225);\n\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n    border: 1px solid ${props => props.border}\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n    border: 1px solid ${props => props.border}\n  }\n`\n\nconst ProviderImage = styled.img`\n  height: 60px;\n  padding: 10px;\n`\n\nconst ProviderLabel = styled.span`\n  font-size: 12px;\n  margin: 5px;\n`\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\n\nimport './index.css';\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { ethers } from \"ethers\";\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\n// You should replace this uri with your own and put it into a .env file\nconst client = new ApolloClient({\n  uri: \"https://api.thegraph.com/subgraphs/name/paulrberg/create-eth-app\",\n});\n\nReactDOM.render(\n\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>,\n    document.getElementById(\"root\"),\n\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","(function() {\n\t// The random number is a js implementation of the Xorshift PRNG\n\tvar randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\n\n\tfunction seedrand(seed) {\n\t\tfor (var i = 0; i < randseed.length; i++) {\n\t\t\trandseed[i] = 0;\n\t\t}\n\t\tfor (var i = 0; i < seed.length; i++) {\n\t\t\trandseed[i%4] = ((randseed[i%4] << 5) - randseed[i%4]) + seed.charCodeAt(i);\n\t\t}\n\t}\n\n\tfunction rand() {\n\t\t// based on Java's String.hashCode(), expanded to 4 32bit values\n\t\tvar t = randseed[0] ^ (randseed[0] << 11);\n\n\t\trandseed[0] = randseed[1];\n\t\trandseed[1] = randseed[2];\n\t\trandseed[2] = randseed[3];\n\t\trandseed[3] = (randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8));\n\n\t\treturn (randseed[3]>>>0) / ((1 << 31)>>>0);\n\t}\n\n\tfunction createColor() {\n\t\t//saturation is the whole color spectrum\n\t\tvar h = Math.floor(rand() * 360);\n\t\t//saturation goes from 40 to 100, it avoids greyish colors\n\t\tvar s = ((rand() * 60) + 40) + '%';\n\t\t//lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\n\t\tvar l = ((rand()+rand()+rand()+rand()) * 25) + '%';\n\n\t\tvar color = 'hsl(' + h + ',' + s + ',' + l + ')';\n\t\treturn color;\n\t}\n\n\tfunction createImageData(size) {\n\t\tvar width = size; // Only support square icons for now\n\t\tvar height = size;\n\n\t\tvar dataWidth = Math.ceil(width / 2);\n\t\tvar mirrorWidth = width - dataWidth;\n\n\t\tvar data = [];\n\t\tfor(var y = 0; y < height; y++) {\n\t\t\tvar row = [];\n\t\t\tfor(var x = 0; x < dataWidth; x++) {\n\t\t\t\t// this makes foreground and background color to have a 43% (1/2.3) probability\n\t\t\t\t// spot color has 13% chance\n\t\t\t\trow[x] = Math.floor(rand()*2.3);\n\t\t\t}\n\t\t\tvar r = row.slice(0, mirrorWidth);\n\t\t\tr.reverse();\n\t\t\trow = row.concat(r);\n\n\t\t\tfor(var i = 0; i < row.length; i++) {\n\t\t\t\tdata.push(row[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tfunction buildOpts(opts) {\n\t\tvar newOpts = {};\n\n\t\tnewOpts.seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);\n\n\t\tseedrand(newOpts.seed);\n\n\t\tnewOpts.size = opts.size || 8;\n\t\tnewOpts.scale = opts.scale || 4;\n\t\tnewOpts.color = opts.color || createColor();\n\t\tnewOpts.bgcolor = opts.bgcolor || createColor();\n\t\tnewOpts.spotcolor = opts.spotcolor || createColor();\n\n\t\treturn newOpts;\n\t}\n\n\tfunction renderIcon(opts, canvas) {\n\t\topts = buildOpts(opts || {});\n\t\tvar imageData = createImageData(opts.size);\n\t\tvar width = Math.sqrt(imageData.length);\n\n\t\tcanvas.width = canvas.height = opts.size * opts.scale;\n\n\t\tvar cc = canvas.getContext('2d');\n\t\tcc.fillStyle = opts.bgcolor;\n\t\tcc.fillRect(0, 0, canvas.width, canvas.height);\n\t\tcc.fillStyle = opts.color;\n\n\t\tfor(var i = 0; i < imageData.length; i++) {\n\n\t\t\t// if data is 0, leave the background\n\t\t\tif(imageData[i]) {\n\t\t\t\tvar row = Math.floor(i / width);\n\t\t\t\tvar col = i % width;\n\n\t\t\t\t// if data is 2, choose spot color, if 1 choose foreground\n\t\t\t\tcc.fillStyle = (imageData[i] == 1) ? opts.color : opts.spotcolor;\n\n\t\t\t\tcc.fillRect(col * opts.scale, row * opts.scale, opts.scale, opts.scale);\n\t\t\t}\n\t\t}\n\t\treturn canvas;\n\t}\n\n\tfunction createIcon(opts) {\n\t\tvar canvas = document.createElement('canvas');\n\n\t\trenderIcon(opts, canvas);\n\n\t\treturn canvas;\n\t}\n\n\tvar api = {\n\t\tcreate: createIcon,\n\t\trender: renderIcon\n\t};\n\n\tif (typeof module !== \"undefined\") {\n\t\tmodule.exports = api;\n\t}\n\tif (typeof window !== \"undefined\") {\n\t\t window.blockies = api;\n\t}\n\n})();\n"],"sourceRoot":""}
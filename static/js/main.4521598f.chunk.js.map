{"version":3,"sources":["helpers/CryptoHelper.js","serviceWorker.js","connectors.ts","hooks.ts","config/index.js","helpers/EPNSCoreHelper.js","components/NotificationToast.js","api/index.js","components/AliasVerificationModal.js","components/ViewInfoItem.js","segments/Info.tsx","redux/slices/spamSlice.js","components/DisplayNotice.js","redux/slices/notificationSlice.js","segments/spam.tsx","segments/Feedbox.tsx","assets/Device.js","singletons/ChannelsDataStore.js","redux/slices/channelSlice.js","components/ViewChannelItem.js","components/Faucets.js","segments/ViewChannels.tsx","assets/icons/index.js","components/SendNotifications.tsx","components/AddDelegateModal.js","components/RemoveDelegateModal.js","components/ActivateChannelModal.js","redux/slices/adminSlice.js","components/ChannelSettingsDropdown.tsx","components/ChannelSettings.jsx","components/ChannelDetails.js","segments/ChannelOwnerDashboard.js","segments/ChannelCreationDashboard.js","singletons/UsersDataStore.js","redux/slices/contractSlice.js","pages/Home.js","components/BlockiesIdenticon.js","components/Profile.tsx","components/Bell.js","segments/Header.tsx","App.tsx","redux/store.js","index.js","../../contracts/src/config.js","../../contracts/src/addresses.js","../../contracts/src/index.js","components/CreateChannel.js","components/blockies.js","components/SharedStyling.js"],"names":["CryptoJS","require","CryptoHelper","encryptWithAES","message","key","AES","encrypt","toString","decryptWithAES","decrypt","enc","Utf8","encryptWithECIES","publicKey","a","compressedKey","EthCrypto","compress","this","encryptWithPublicKey","encryptedSecret","decryptWithECIES","privateKey","decryptWithPrivateKey","pubKeyUint8Array","Uint8Array","from","Buffer","convertedKeyAsUint8Array","publicKeyConvert","convertedPublicKeyHex","pubKey","then","encryptedBuffers","cipher","iv","ephemPublicKey","ciphertext","mac","input","keyConvert","concat","buf","encrypted","length","keyConvertBuffer","uncompressedKey","twoStripped","substring","encryptedBuffer","decryptedBuffer","encryptionDecryptionPublicToPrivateTest","startTime","Date","console","log","publicKeyByPrivateKey","msg","encryptionTime","getTime","decryptMsg","decryptionTime","outputMsgPayload","secret","subject","calltoaction","imageurl","pkey","secretEncrypted","asubE","amsgE","actaE","aimgE","makeid","result","toISOString","characters","charactersLength","i","charAt","Math","floor","random","Boolean","window","location","hostname","match","config","SUPPORTED_CHAIN_IDS","envConfig","allowedNetworks","CORE_CHAIN_ID","coreContractChain","CORE_RPC","coreRPC","RPC_URLS","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","portis","LedgerConnector","chainId","url","TrezorConnector","manifestEmail","manifestAppUrl","PortisConnector","dAppId","networks","dotenv","etherscanToken","process","REACT_APP_INFURA_API_KEY","EPNSCoreHelper","getOwnerInfo","contract","Promise","resolve","reject","governance","response","catch","err","getUserInfo","user","users","mappings","addr","getChannelAddressFromID","channelID","channelById","getChannelInfo","channel","channels","getChannelEvent","startBlock","updateBlock","filter","filters","AddChannel","block","UpdateChannel","queryFilter","filteredResponse","forEach","item","args","ethers","utils","toUtf8String","identity","getJsonFileFromIdentity","ids","split","fetch","json","getChannelJsonFromChannelAddress","channelStartBlock","toNumber","channelUpdateBlock","hash","getChannelJsonFromUserAddress","getTotalNumberOfChannels","channelsCount","getChannelsMetaLatestToOldest","atIndex","numChannels","channelsInfo","channelArrays","assignedChannelID","push","promises","map","all","getTotalNumberOfUsers","usersCount","getPublicKey","address","getSubscribedStatus","isUserSubscribed","getTotalSubscribedChannels","subscribedCount","getFairShareOfUserAtBlock","userActivated","calcAllChannelsRatio","getPoolFunds","poolFunds","formatBigNumberToMetric","bignumber","convertToCurrency","div","metricFormatter","e","num","digits","si","value","symbol","toFixed","replace","NotificationWrapper","styled","Toaster","NotificationToast","notification","clearToast","LoaderToast","color","notificationTitle","notificationBody","toast","dark","onClick","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","BASE_URL","apiUrl","postReq","path","obj","axios","post","headers","AliasVerificationModal","onClose","onSuccess","verificationStatus","aliasEthAccount","useWeb3React","account","active","error","library","signer","getSigner","modalRef","useRef","polygonCommsContract","Contract","addresses","epnsPolyComm","abis","epnsComm","useState","mainAddress","loading","setLoading","useClickAway","checkAlias","submitAlias","setTimeout","verifyChannelAlias","tx","wait","intervalId","setInterval","aliasAddress","op","data","status","clearInterval","Overlay","AliasModal","ref","align","textTransform","spacing","weight","bg","padding","CustomInput","placeholder","radius","border","disabled","readOnly","margin","flex","self","type","height","width","StyledInput","cursor","size","Input","Container","ChannelTitleLink","AppLink","AppLinkText","ChannelInfo","ChannelTitle","ViewInfoItem","href","target","rel","ContainerInfo","InfoBox","Info","React","controlAt","initialState","page","notifications","finishedFetching","toggler","contractSlice","createSlice","name","reducers","toggleToggler","state","resetState","addPaginatedNotifications","action","payload","incrementPage","addNewNotification","setFinishedFetching","updateTopNotifications","notifs","slice","pageSize","sn","actions","Notice","span","props","theme","css","DisplayNotice","title","useEffect","animationIn","animationOut","durationOut","pp","CenteredContainerInfo","Items","SpamBox","currentTab","dispatch","useDispatch","epnsCommReadProvider","useSelector","contracts","spam","EPNS_DOMAIN","toggle","verifyingContract","bgUpdateLoading","setBgUpdateLoading","loadNotifications","api","fetchSpamNotifications","count","results","parsedResponsePromise","parseApiResponse","elem","subscribers","parsedResponse","fetchLatestNotifications","handlePagination","onSubscribeToChannel","channelAddress","Subscribe","subscriber","_signTypedData","signature","contractAddress","isSubscribedFn","toLowerCase","includes","style","marginTop","id","oneNotification","index","cta","app","icon","image","Number","showWayPoint","onEnter","subscribeFn","stopPropagation","isSpam","ControlButtonBack","ControlButton","ControlImage","img","FullWidth","Wrapper","Feedbox","setCurrentTab","fetchNotifications","setClicked","marginLeft","src","Device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","ChannelEvents","ChannelsDataStore","channelsMeta","channelsJson","callbacks","epnsReadProvider","init","resetChannelsListeners","initChannelsListenersAsync","getChannelsCountAsync","removeAllListeners","listenForAddChannelAnyAsync","listenForAddChannelSelfAsync","listenForUpdateChannelAnyAsync","listenForUpdateChannelSelfAsync","listenForSubscribeAnyAsync","listenForSubscribeSelfAsync","listenForUnsubscribeAnyAsync","listenForUnsubscribeSelfAsync","on","ipfs","incrementChannelsCountAsync","Object","entries","callback","Unsubscribe","addCallbacks","callbackType","callbackID","removeCallbacks","incrementCount","getChannelFromApi","startIndex","pageCount","ceil","getChannelsMetaAsync","stopIndex","channelIDs","getChannelMetaAsync","channelMetaData","getChannelMetaViaAddressAsync","optInCache","userAddress","cachedSubscribers","optOutCache","sub","getChannelSubscribers","subs","getChannelJsonAsync","instance","CHANNNEL_DEACTIVATED_STATE","CHANNEL_BLOCKED_STATE","CHANNEL_ACTIVE_STATE","CHANNEL_BLACKLIST","channelsCache","setChannelMeta","cacheChannelInfo","meta","FlexBox","ColumnFlex","SkeletonWrapper","atW","atH","borderRadius","marginBottom","marginRight","ChannelLogo","ChannelLogoOuter","ChannelLogoInner","ChannelLogoImg","VerifiedBy","VerifierIcon","VerifierName","ChannelDesc","ChannelDescLabel","label","ChannelMeta","ChannelMetaBox","Subscribers","SubscribersCount","LineBreak","ChannelActions","ChannelActionButton","button","ActionTitle","hideit","ActionLoader","SkeletonButton","SubscribeButton","UnsubscribeButton","OwnerButton","ToasterMsg","ViewChannelItem","channelObjectProp","epnsWriteProvider","pushAdminAddress","ZERO_ADDRESS","canVerify","admin","isOwner","channelObject","setChannelObject","channelJson","setChannelJson","subscribed","setSubscribed","memberCount","setMemberCount","isPushAdmin","setIsPushAdmin","isVerified","setIsVerified","isBlocked","setIsBlocked","vLoading","setvLoading","bLoading","setBLoading","txInProgress","setTxInProgress","canUnverify","setCanUnverify","verifierDetails","setVerifierDetails","copyText","setCopyText","isChannelBlacklisted","showToast","verifiedBy","fetchChannelJson","alert","channelState","channelSubscribers","find","addressText","subscribe","subscribeAction","notificationToast","toaster","txToast","res","update","render","TYPE","SUCCESS","ERROR","unsubscribeAction","unsubscriber","finally","display","info","toLocaleString","navigator","clipboard","writeText","el","document","createElement","body","appendChild","select","execCommand","removeChild","copyToClipboard","onMouseEnter","onMouseLeave","blockChannel","INFO","verifyChannel","unverifyChannel","Faucets","overflow","pos","top","right","direction","textAlign","Header","InputWrapper","SearchBar","CenterContainer","SearchIconImage","ViewChannels","moreLoading","setMoreLoading","search","setSearch","channelToShow","setChannelToShow","loadingChannel","setLoadingChannel","trialCount","setTrialCount","channelsVisited","isMainnet","fetchInitialsChannelMeta","updateCurrentPage","loadMoreChannelMeta","newPageNumber","startingPoint","moreChannels","searchForChannel","query","t","timeout","clearTimeout","minHeight","onChange","className","alt","CloseIcon","xmlns","viewBox","data-name","transform","x2","fill","stroke","stroke-linecap","stroke-width","y2","NFTypes","LIMITER_KEYS","DropdownStyledParent","MultiRecipientsContainer","ModifiedContent","Content","DropdownHeader","DropdownStyled","Dropdown","DropdownStyledWhite","DropdownStyledParentWhite","CustomDropdownItem","SendNotifications","epnsCommWriteProvider","channelDetails","delegatees","nfProcessing","setNFProcessing","setChannelAddress","nfRecipient","setNFRecipient","multipleRecipients","setMultipleRecipients","tempRecipeint","setTempRecipient","nfType","setNFType","nfSub","setNFSub","nfSubEnabled","setNFSubEnabled","nfMsg","setNFMsg","nfCTA","setNFCTA","nfCTAEnabled","setNFCTAEnabled","nfMedia","setNFMedia","nfMediaEnabled","setNFMediaEnabled","nfInfo","setNFInfo","delegateeOptions","setDelegateeOptions","isChannelDeactivated","cannotDisplayDelegatees","oneDelegatee","bodyValidated","validated","handleSendMessage","preventDefault","nsub","nmsg","asub","amsg","acta","aimg","k","publickey","storagePointer","isEmpty","jsonPayload","JSON","stringify","at","add","toUtf8Bytes","Data","recipient","deployedContract","field","trim","justify","onSubmit","minWidth","options","option","d","Switch","checked","required","z","oneRecipient","recipientAddress","filteredRecipients","rec","removeRecipient","onKeyPress","oldRecipients","Array","Set","text","borderBottom","rows","autocomplete","AddDelegateModal","addDelegate","mainAdress","setMainAddress","RemoveDelegateModal","removeDelegate","ActivateChannelModal","activateChannel","setChannelStakeFees","channelStakeFees","popupRef","PopupOverlay","PopupSlider","Slider","defaultValue","onChangeCommitted","_","aria-labelledby","valueLabelDisplay","step","marks","min","max","setUserChannelDetails","setCanVerify","setDelegatees","DropdownWrapper","ActiveChannelWrapper","inactive","DeactivateButton","ChannelSettings","onCoreNetwork","ALLOWED_CORE_NETWORK","showActivateChannelPopup","setShowActivateChannelPopup","poolContrib","setPoolContrib","addDelegateLoading","setAddDelegateLoading","addModalOpen","setAddModalOpen","removeDelegateLoading","setRemoveDelegateLoading","removeModalOpen","setRemoveModalOpen","isChannelBlocked","channelInactive","poolContribution","daiContract","dai","erc20","fees","parseUnits","sendTransactionPromise","approve","epnscore","waitForTransaction","reactivateChannel","deactivateChannel","amountToBeConverted","parseInt","pushValue","quote","PUSH","price","pow","walletAddress","setActive","SettingsWrapper","ChannelSettingsDropdown","Settings","ChannelDetails","verifyingChannel","setVerifyingChannel","creationDate","setCreationDate","setEthAliasAccount","aliasVerified","setAliasVerified","channelIsActive","channelIsDeactivated","bn","getBlock","date","moment","timestamp","format","aliasAccount","ChannelDetailsWrapper","SectionTop","ImageSection","Details","ChannelName","VerifyImage","ChanneStateText","SectionDes","fontSize","fontWeight","SectionDate","Verified","VerifyingIcon","VerifyingName","ChannelOwnerDashboard","CreateChannel","ChannelCreationDashboard","UsersDataStore","userMeta","ownerMeta","resetUsersListeners","initUsersListenersAsync","getOwnerMetaAsync","getUsersCountAsync","getUserMetaAsync","listenForSubscribedAsync","listenForUnsubscribedAsync","publicKeyRegistered","listenForPublicKeyBroadcastAsync","incrementUsersCountAsync","setCoreReadProvider","setCoreWriteProvider","setCommunicatorReadProvider","setCommunicatorWriteProvider","setPushAdmin","Controls","ControlText","ControlChannelContainer","ControlChannelImage","ControlChannelText","Interface","Home","ReactGA","pageview","setControlAt","modalOpen","setModalOpen","adminStatusLoaded","setAdminStatusLoaded","setAliasEthAccount","channelAdmin","setChannelAdmin","coreProvider","getDefaultProvider","etherscan","ethAddress","coreContractInstance","commAddress","epnsEthComm","commContractInstance","coreSignerInstance","communicatorSignerInstance","userClickedAt","pushChannelAdmin","checkUserForChannelOwnership","fetchDelegators","controlIndex","delegateAddress","delegators","channelOwners","channelInformationPromise","channelInformation","ownerAccount","getChannelVerfication","val","BlockiesIdenticon","seed","opts","bgcolor","scale","spotcolor","draw","prevProps","blockies","canvas","Component","Blocky","BlockyInner","Wallet","Profile","setAddress","ens","setENS","ensFetched","setENSFetched","lookupAddress","tadaaa","keyframes","BellImage","ringme","BellImageAbs","Badge","Bell","badgeCount","bellPressedCB","badge","setBadge","ring","setRing","setResetRinger","HeaderContainer","Section","Logo","PrimaryTheme","ThirdTheme","Connection","phase","context","deactivate","showLoginControls","setShowLoginControls","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","getErrorMessage","web3Connectors","Injected","logo","WalletConnect","Portis","App","connector","activate","activatingConnector","setActivatingConnector","setcurrentTime","now","triedEager","tried","setTried","isAuthorized","useEagerConnect","suppress","ethereum","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","initialize","googleAnalyticsId","ParentContainer","HomeContainer","ProviderLogo","srcSet","maxWidth","keys","currentConnector","ProviderButton","ProviderImage","StyledItem","newestOnTop","rtl","pauseOnFocusLoss","Item","header","ToastContainer","attrs","rootReducer","combineReducers","contractReducer","channelReducer","adminReducer","notificationReducer","spamReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","ApolloProvider","getLibrary","provider","gottenProvider","providers","Web3Provider","oldNetwork","reload","getElementById","serviceWorker","ready","registration","unregister","ceaErc20","aDai","staking","yieldFarmPUSH","yieldFarmLP","epnsToken","epnsLPToken","rockstar","batchMintNFT","NFTRewards","distributor","erc20Abi","ownable","ownableAbi","epnscoreAbi","epnsCommAbi","daiAbi","epnsTokenAbi","stakingAbi","yieldFarming","yieldFarmingAbi","rockstarAbi","erc721","ec721Abi","MerkleDistributorAbi","ALIAS_CHAINS","Step","activeBG","Line","h1","Minter","textarea","Pool","PoolShare","processing","setProcessing","processingInfo","setProcessingInfo","uploadDone","setUploadDone","stakeFeesChoosen","setStakeFeesChoosen","channelInfoDone","setChannelInfoDone","chainDetails","setChainDetails","channelName","setChannelName","channelAlias","setChannelAlias","channelInfo","setChannelInfo","channelURL","setChannelURL","channelFile","setChannelFile","stepFlow","setStepFlow","handleLogoSizeLimitation","base64","sizeOf","base64Data","pop","dimensions","success","handleCreateChannel","chainDetailsSplit","blockchain","chain_id","identityBytes","anotherSendTxPromise","createChannelWithFees","gasLimit","mintDai","amount","mintTransactionPromise","mint","onChangeStatus","file","files","allFiles","f","reader","FileReader","readAsDataURL","onloadend","onDrop","maxFiles","multiple","accept","maxlength","classNamePrefix","colors","primary25","primary","selectedOption","paddingLeft","randseed","rand","createColor","buildOpts","newOpts","charCodeAt","seedrand","renderIcon","imageData","dataWidth","mirrorWidth","y","row","x","r","reverse","createImageData","sqrt","cc","getContext","fillStyle","fillRect","col","create","module","exports","section","gradient","ItemBreak","wrap","filterHover","hover","tabletAlign","tabletTextAlign","ItemH","H2","bottom","arcRGB","h2","family","H3","h3","P","p","Span","left","B","Anchor","ul","li","hoverBG","A","C","Button","FormSubmision","opacity","tabletRight","tabletLeft","tabletTop","tabletBottom","tabletTransform","tabletOpacity","form","outline","hand","TextField"],"mappings":"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","file":"static/js/main.4521598f.chunk.js","sourcesContent":["import EthCrypto from 'eth-crypto';\nimport {encrypt, decrypt} from 'eccrypto';\nimport { publicKeyConvert, publicKeyVerify } from 'secp256k1-v4';\n\nvar CryptoJS = require(\"crypto-js\");\n\nconst CryptoHelper = {\n  // To Encrypt with AES\n  encryptWithAES: function(message, key) {\n    return CryptoJS.AES.encrypt(message, key).toString();\n  },\n  // To Decrypt with AES\n  decryptWithAES: function(message, key) {\n    let bytes  = CryptoJS.AES.decrypt(message, key);\n    return bytes.toString(CryptoJS.enc.Utf8);\n  },\n  // To Form Encryted Secret, no more than 15 characters supported\n  encryptWithECIES: async function(message, publicKey) {\n    const compressedKey = EthCrypto.publicKey.compress(publicKey);\n\n    const encryptedSecret = await this.encryptWithPublicKey(message, compressedKey);\n\n    // Not using it since sqlite2 has some error with this\n    // const compressedEncryptedSecret = EthCrypto.hex.compress(encryptedSecret);\n\n    return encryptedSecret;\n  },\n  // To Form Decrypted Secret, no more than 15 characters supported\n  decryptWithECIES: async function(message, privateKey) {\n    // Message is always compressed, not using because sqlite2 has some error with this\n    //const uncompressedMessage = EthCrypto.hex.decompress(message).substr(2); // to remove 0x\n\n    return await this.decryptWithPrivateKey(message, privateKey);\n  },\n  // Encryption with public key\n  encryptWithPublicKey: async function(message, publicKey) {\n    // Convert compressed public key, starts with 03 or 04\n    const pubKeyUint8Array = Uint8Array.from(\n      new Buffer(publicKey, 'hex')\n    );\n    //console.log(\"[ENCRYPTION] Public Key Uint8Array: \" + pubKeyUint8Array);\n\n    const convertedKeyAsUint8Array = publicKeyConvert(pubKeyUint8Array, false);\n    //console.log(\"[ENCRYPTION] Public Key Converted: \" + convertedKeyAsUint8Array);\n\n    const convertedPublicKeyHex = new Buffer(convertedKeyAsUint8Array);\n    //console.log(\"[ENCRYPTION] Converted Public Key Buffer: \" + convertedPublicKeyHex);\n\n    const pubKey = new Buffer(convertedPublicKeyHex, 'hex');\n    //console.log(\"[ENCRYPTION] pubkey getting sentout for encrypt: \" + pubKey);\n\n    return encrypt(\n        pubKey,\n        Buffer(message)\n    ).then(encryptedBuffers => {\n      const cipher = {\n          iv: encryptedBuffers.iv.toString('hex'),\n          ephemPublicKey: encryptedBuffers.ephemPublicKey.toString('hex'),\n          ciphertext: encryptedBuffers.ciphertext.toString('hex'),\n          mac: encryptedBuffers.mac.toString('hex')\n      };\n      // use compressed key because it's smaller\n      // const compressedKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(cipher.ephemPublicKey), true)).toString('hex')\n      const input = Uint8Array.from(\n        new Buffer(cipher.ephemPublicKey, 'hex')\n      );\n      const keyConvert = publicKeyConvert(input, true)\n      // console.log(\"[ENCRYPTION] Coverted key: \" + keyConvert);\n\n      const keyConvertBuffer = new Buffer(keyConvert);\n      // console.log(\"[ENCRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\n      // console.log(keyConvertBuffer);\n\n      //console.log(keyConvert);\n      const compressedKey = keyConvertBuffer.toString('hex')\n      // console.log(\"[ENCRYPTION] Compressed key in buffer : \");\n      // console.log(compressedKey);\n\n      const ret = Buffer.concat([\n        new Buffer(cipher.iv, 'hex'), // 16bit\n        new Buffer(compressedKey, 'hex'), // 33bit\n        new Buffer(cipher.mac, 'hex'), // 32bit\n        new Buffer(cipher.ciphertext, 'hex') // var bit\n      ]).toString('hex')\n\n      return ret\n    });\n  },\n  // Decryption with public key\n  decryptWithPrivateKey: async function(message, privateKey) {\n    let encrypted = message;\n    const buf = new Buffer(encrypted, 'hex');\n    // console.log(\"[DECRYPTION] Buffer Passed: \" + buf);\n\n    encrypted = {\n      iv: buf.toString('hex', 0, 16),\n      ephemPublicKey: buf.toString('hex', 16, 49),\n      mac: buf.toString('hex', 49, 81),\n      ciphertext: buf.toString('hex', 81, buf.length)\n    };\n    // decompress publicKey\n    // encrypted.ephemPublicKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(encrypted.ephemPublicKey), true)).toString('hex')\n    const input = Uint8Array.from(new Buffer(encrypted.ephemPublicKey, 'hex'));\n    const keyConvert = publicKeyConvert(input, false)\n    // console.log(\"[DECRYPTION] Coverted key: \" + keyConvert);\n\n    const keyConvertBuffer = new Buffer(keyConvert);\n    // console.log(\"[DECRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\n    // console.log(keyConvertBuffer);\n\n    //console.log(keyConvert);\n    const uncompressedKey = keyConvertBuffer.toString('hex')\n    // console.log(\"[DECRYPTION] Uncompressed key in buffer : \");\n    // console.log(uncompressedKey);\n\n    encrypted.ephemPublicKey = uncompressedKey;\n    const twoStripped = privateKey.substring(2)\n\n    const encryptedBuffer = {\n      iv: new Buffer(encrypted.iv, 'hex'),\n      ephemPublicKey: new Buffer(encrypted.ephemPublicKey, 'hex'),\n      ciphertext: new Buffer(encrypted.ciphertext, 'hex'),\n      mac: new Buffer(encrypted.mac, 'hex')\n    };\n\n    return decrypt(\n      new Buffer(twoStripped, 'hex'),\n      encryptedBuffer\n    ).then(decryptedBuffer => decryptedBuffer.toString());\n  },\n  // Testing of Encryption and Decryption from Public to Private key\n  encryptionDecryptionPublicToPrivateTest: async function(privateKey) {\n    const startTime = new Date();\n    console.log(\"[ENCRYPTION / DECRYPTION TEST STARTED] - \" + startTime);\n\n    const publicKey = EthCrypto.publicKeyByPrivateKey(privateKey);\n    const compressedKey = EthCrypto.publicKey.compress(publicKey); // is String\n    //console.log(compressedKey);\n\n    // const bytesCompKey = Uint8Array.from(compressedKey);\n    //console.log(bytesCompKey);\n\n    const msgToEncrypt = \"PartialStringAS\";\n    const msg = await this.encryptWithPublicKey(msgToEncrypt, compressedKey);\n    console.log(\"Encryped Message With compressed public key:\" + msg);\n\n    const encryptionTime = new Date().getTime() - startTime.getTime();\n    console.log(\"[ENCRYPTION / DECRYPTION ENCRYPTION DONE] - \" + encryptionTime / 1000 + \" secs\");\n\n    // Decrypt this message\n    const decryptMsg = await this.decryptWithPrivateKey(msg, privateKey);\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTED MESSAGE] - '\" + decryptMsg + \"'\");\n\n    const decryptionTime = new Date().getTime() - startTime.getTime() - encryptionTime;\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTION DONE] - \" + decryptionTime / 1000 + \" secs\");\n  },\n  // To output messge payload if required\n  outputMsgPayload: async function(secret, subject, message, calltoaction, imageurl, pkey) {\n    // Output AES\n    console.log(\"[AES ENCRYTED FORMAT (\" + new Date() + \")\");\n    console.log(\"---------------------\");\n    console.log(\"secret --> \");\n    const secretEncrypted = await this.encryptWithECIES(secret, pkey);\n    const asubE = this.encryptWithAES(subject, secret);\n    const amsgE = this.encryptWithAES(message, secret);\n    const actaE = this.encryptWithAES(calltoaction, secret);\n    const aimgE = this.encryptWithAES(imageurl, secret);\n\n    console.log(secretEncrypted);\n    console.log(\"asub --> \");\n    console.log(asubE);\n    console.log(\"amsg --> \");\n    console.log(amsgE);\n    console.log(\"acta --> \");\n    console.log(actaE);\n    console.log(\"aimg --> \");\n    console.log(aimgE);\n    console.log(\"decrypted secret --> \");\n    console.log(await this.decryptWithECIES(secretEncrypted, pkey));\n    console.log(\"decrypted asub --> \");\n    console.log(this.decryptWithAES(asubE, secret));\n    console.log(\"decrypted amsg --> \");\n    console.log(this.decryptWithAES(amsgE, secret));\n    console.log(\"decrypted acta --> \");\n    console.log(this.decryptWithAES(actaE, secret));\n    console.log(\"decrypted aimg --> \");\n    console.log(this.decryptWithAES(aimgE, secret));\n  },\n  makeid: function (length) {\n     var result           = '[' + new Date().toISOString() + '] ';\n     var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n     var charactersLength = characters.length;\n     for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n     }\n     return result;\n  }\n};\n\nexport default CryptoHelper;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { envConfig } from \"@project/contracts\";\nimport { PortisConnector } from '@web3-react/portis-connector'\n// import { NetworkConnector } from '@web3-react/network-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\n// import { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { LedgerConnector } from '@web3-react/ledger-connector'\nimport { TrezorConnector } from '@web3-react/trezor-connector'\n// import { FrameConnector } from '@web3-react/frame-connector'\n// import { AuthereumConnector } from '@web3-react/authereum-connector'\n// import { FortmaticConnector } from '@web3-react/fortmatic-connector'\n// import { SquarelinkConnector } from '@web3-react/squarelink-connector'\n// import { TorusConnector } from '@web3-react/torus-connector'\n\nrequire('dotenv').config();\nconst SUPPORTED_CHAIN_IDS = [...envConfig.allowedNetworks];\nconst POLLING_INTERVAL = 12000;\nconst CORE_CHAIN_ID = envConfig.coreContractChain;\nconst CORE_RPC = envConfig.coreRPC;\n\nconst RPC_URLS: { [chainId: number]: string } = {\n  [CORE_CHAIN_ID]: envConfig.coreRPC\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds: SUPPORTED_CHAIN_IDS })\n\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { ...RPC_URLS },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL\n})\n//\n// export const walletlink = new WalletLinkConnector({\n//   url: RPC_URLS[1],\n//   appName: 'web3-react example'\n// })\n//\nexport const ledger = new LedgerConnector({ chainId: CORE_CHAIN_ID, url: CORE_RPC, pollingInterval: POLLING_INTERVAL })\n\nexport const trezor = new TrezorConnector({\n  chainId: CORE_CHAIN_ID,\n  url: CORE_RPC,\n  pollingInterval: POLLING_INTERVAL,\n  manifestEmail: 'support@epns.io',\n  manifestAppUrl: 'https://staging-app.epns.io'\n})\n\n//\n// export const frame = new FrameConnector({ supportedChainIds: [1] })\n//\n// export const authereum = new AuthereumConnector({ chainId: 42 })\n//\n// export const fortmatic = new FortmaticConnector({ apiKey: process.env.FORTMATIC_API_KEY as string, chainId: 4 })\n\nexport const portis = new PortisConnector({ dAppId: 'e7ab8b33-73b1-4911-a483-dcca2762a9be' as string, networks: [CORE_CHAIN_ID] })\n\n// export const squarelink = new SquarelinkConnector({\n//   clientId: process.env.SQUARELINK_CLIENT_ID as string,\n//   networks: [1, 100]\n// })\n\n// export const torus = new TorusConnector({ chainId: 1 })\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from './connectors'\n\nrequire('dotenv').config();\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}\n","import dotenv from \"dotenv\";\ndotenv.config();\n\nexport default  {\n    etherscanToken: process.env.REACT_APP_INFURA_API_KEY || \"\"\n}","import React from \"react\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { ethers } from \"ethers\";\n//import { parseEther, bigNumber } from 'ethers/utils'\n\nconst COINDESK_CHANNEL_ADDR = \"0xe56f1D3EDFFF1f25855aEF744caFE7991c224FFF\";\nconst COINDESK_HASH = \"1+bafkreif643vf3cteadznccivnsk5uj26e3ls7onbshnldb3aej3omrxsau\"\nconst ENS_CHANNEL_ADDR = \"0x983110309620D911731Ac0932219af06091b6744\";\nconst ENS_HASH = \"1+bafkreiekigkyezwrspignt7l7vsrjefjmogwmigy4eqtts277cu2p23ilm\";\n// FeedDB Helper Function\nconst EPNSCoreHelper = {\n  // To get owner info\n  getOwnerInfo: async (contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.governance()\n        .then(response => {\n          if (enableLogs) console.log(\"getOwnerInfo() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getOwnerInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To get user info\n  getUserInfo: async (user, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users(user)\n        .then(response => {\n          const mappings = { ...response };\n          mappings.addr = user;\n\n          if (enableLogs) console.log(\"getUserInfo() --> %o\", mappings);\n          resolve(mappings);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getUserInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel address from it's id\n  getChannelAddressFromID: async (channelID, contract) => {\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      contract.channelById(channelID)\n        .then(response => {\n          // console.log(\"getChannelAddressFromID() --> %o\", response.toString());\n          resolve(response.toString());\n        })\n        .catch(err => { console.log(\"!!!Error, getChannelAddressFromID() --> %o\", err); reject(err); });\n    })\n  },\n  // To retrieve a channel's Info from channel address\n  getChannelInfo: async (channel, contract) => {\n    const enableLogs = 0;\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      contract.channels(channel)\n        .then(response => {\n          // Add an extra field for future info\n          const mappings = { ...response };\n          mappings.addr = channel;\n\n          if (enableLogs) console.log(\"getChannelInfo() --> %o\", mappings);\n          resolve(mappings);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel's AddChannel event\n  getChannelEvent: async (channel, startBlock, updateBlock, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n\n      // To get channel ipfs hash from channel info\n      let filter = contract.filters.AddChannel(channel);\n      let block = startBlock;\n      if (startBlock != updateBlock) {\n        filter = contract.filters.UpdateChannel(channel);\n        block = updateBlock;\n      }\n\n      contract.queryFilter(filter, block, block)\n        .then(response => {\n          let filteredResponse;\n\n          if (enableLogs) console.log(\"getChannelEvent() --> Finding: %s in | %o |\", channel, response );\n\n          response.forEach(function (item) {\n            if (item.args.channel.toString() == channel.toString()) {\n              if (enableLogs) console.log(\"getChannelEvent() --> Selected Channel %o: \", item);\n              filteredResponse = ethers.utils.toUtf8String(item.args.identity);\n            }\n          });\n\n          if (enableLogs) console.log(\"getChannelEvent() --> Filtered Channel: %o\", filteredResponse);\n          resolve(filteredResponse);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelEvent() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Retrive IPFS File from ipfshash\n  getJsonFileFromIdentity: async(identity, channel) => {\n    const enableLogs = 0;\n\n\n    return new Promise ((resolve, reject) => {\n      // Split Channel Identity, delimeter of identity is \"+\"\n      if(!identity){\n        reject(\"There is no identity file for channel:\",channel);\n      }\n      const ids = identity?.split(\"+\") || []; // First segment is storage type, second is the pointer to it\n\n      if (ids[0] == 1) {\n        // IPFS HASH\n        // Form Gateway URL\n        const url = \"https://ipfs.io/ipfs/\" + ids[1];\n        fetch(url)\n          .then(response => response.json())\n          .then(response => {\n            if (enableLogs) console.log(\"getJsonFileFromIdentity() --> %o\", response);\n            resolve(response);\n          })\n          .catch(err => {\n            console.log(\"!!!Error, getJsonFileFromIdentity() --> %o\", err);\n            reject(err);\n          });\n      }\n\n    });\n  },\n  // Helper to get Channel from Channel's address\n  getChannelJsonFromChannelAddress: async (channel, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      EPNSCoreHelper.getChannelInfo(channel, contract)\n        .then(response => EPNSCoreHelper.getChannelEvent(channel, response.channelStartBlock.toNumber(), response.channelUpdateBlock.toNumber(), contract))\n        .then(response => {\n          // add little hack for now to change coindesk's descriptioon\n          const hash = channel === COINDESK_CHANNEL_ADDR ? COINDESK_HASH  : (channel === ENS_CHANNEL_ADDR ? ENS_HASH : response);\n          return EPNSCoreHelper.getJsonFileFromIdentity(hash, channel)\n          // return EPNSCoreHelper.getJsonFileFromIdentity(response, channel)\n        })\n        .then(response => {\n          if (enableLogs) console.log(\"getChannelJsonFromChannelAddress() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelJsonFromChannelAddress() --> %o\", err);\n          reject(err);\n        });\n    });\n  },\n  // Helper to get Channel from User's address\n  getChannelJsonFromUserAddress: async (user, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      // EPNSCoreHelper.getUserInfo(user, contract)\n      //   .then(response => EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract))\n        EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract)\n        .then(response => {\n          if (enableLogs) console.log(\"getChannelJsonFromUserAddress() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelJsonFromUserAddress() --> %o\", err);\n          reject(err);\n        });\n    });\n  },\n  // Get Total Number of Channels\n  getTotalNumberOfChannels: async (contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.channelsCount()\n        .then(response => {\n          if (enableLogs) console.log(\"getTotalNumberOfChannels() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getTotalNumberOfChannels() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Get channels address given number of channels, , atIndex: -1 is start from latest, numChannels: -1 is return all\n  getChannelsMetaLatestToOldest: async (atIndex, numChannels, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      EPNSCoreHelper.getTotalNumberOfChannels(contract)\n        .then(async (response) => {\n          let channelsInfo = [];\n          const channelsCount = response;\n\n          if (atIndex > channelsCount || atIndex == -1) {\n            atIndex = channelsCount - 1;\n          }\n\n          if (numChannels == -1) {\n            numChannels = channelsCount;\n          }\n\n          // Get channels\n          let channelArrays = [];\n\n          // prefil and then refil\n          let count = 0;\n          for (let i = numChannels - 1; i >= 0; i--) {\n            const assignedChannelID = atIndex - i;\n            channelArrays.push(assignedChannelID);\n          }\n\n          const promises = channelArrays.map(async (channelID) => {\n            await EPNSCoreHelper.getChannelAddressFromID(channelID, contract)\n              .then(response => EPNSCoreHelper.getChannelInfo(response, contract))\n              .then(response => {\n                if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(%d, %d) --> %o\", channelID, numChannels, channelsInfo);\n                channelsInfo = [response, ...channelsInfo];\n              })\n              .catch(err => console.log(\"Error in channel: %d | skipping...\", channelID))\n          });\n\n          // wait until all promises are resolved\n          await Promise.all(promises);\n\n          if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(Index: %d, Number: %d) --> %o\", atIndex, numChannels, channelsInfo);\n          resolve(channelsInfo);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelsMetaLatestToOldest() --> %o\", err);\n          reject(err);\n        })\n    });\n  },\n  // Get Total Number of Users\n  getTotalNumberOfUsers: async (contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.usersCount()\n        .then(response => {\n          console.log(\"getTotalNumberOfUsers() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => { console.log(\"!!!Error, getTotalNumberOfUsers() --> %o\", err); reject(err); });\n    })\n  },\n  // To retrieve public key of a user\n  getPublicKey: async (address, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel ipfs hash from channel info\n      let filteredResponse;\n      contract.queryFilter('PublicKeyRegistered')\n        .then(response => {\n\n          response.forEach(function (item) {\n            if (item.args[0] == address) {\n              filteredResponse = item;\n            }\n          });\n\n          if (enableLogs) console.log(\"Public Key Registry Response: \" + response);\n          if (enableLogs) console.log(\"Public Key Registry Filtered: \" + filteredResponse);\n\n          if (!filteredResponse || filteredResponse.length == 0) {\n            resolve(null)\n          }\n          else {\n            resolve(filteredResponse.args[1]);\n          }\n\n        })\n        .catch((err) => {\n          console.log(err);\n          reject(err);\n        });\n    })\n  },\n  // Get Total Subsbribed Channels\n  getSubscribedStatus: async (user, channel, contract) => {\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.isUserSubscribed(channel, user)\n        .then(response => {\n          // console.log(\"getSubscribedStatus() --> %o\", {response, user, channel});\n          resolve(response);\n        })\n        .catch(err => { console.log(\"!!!Error, getSubscribedStatus() --> %o\", err); reject(err); });\n    })\n  },\n  // Get Total Subsbribed Channels\n  getTotalSubscribedChannels: async (user, contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users[user].subscribedCount()\n        .then(response => {\n          console.log(\"getTotalSubscribedChannels() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => { console.log(\"!!!Error, getTotalSubscribedChannels() --> %o\", err); reject(err); });\n    })\n  },\n  // Get Fair Share\n  getFairShareOfUserAtBlock: async(user, block, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users(user)\n        .then((response) => {\n          if (response.userActivated) {\n            contract.calcAllChannelsRatio(user, block)\n              .then(response => {\n                if (enableLogs) console.log(\"calcAllChannelsRatio() --> %o\", response);\n                resolve(response);\n              })\n              .catch(err => {\n                console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\n                reject(err);\n              });\n          }\n          else {\n            if (enableLogs) console.log(\"!!!Warning, calcAllChannelsRatio() --> User not activated\");\n            reject(\"User not activated\");\n          }\n        })\n        .catch(err => {\n          console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Get Pool Funds\n  getPoolFunds: async(contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      contract.poolFunds()\n        .then(response => {\n          if (enableLogs) console.log(\"getPoolFunds() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getPoolFunds() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Helper Functions\n  // To format Big Number\n  formatBigNumberToMetric: (bignumber, convertToCurrency) => {\n    try {\n      if (convertToCurrency) {\n        bignumber = bignumber.div(100000000000000);\n        bignumber = bignumber.div(10000);\n      }\n      bignumber = bignumber.toNumber();\n      return EPNSCoreHelper.metricFormatter(bignumber, 2);\n    }\n    catch (e) {\n      console.log(e);\n      return \"---\";\n    }\n  },\n  // Metric Formatter, thanks: https://stackoverflow.com/questions/9461621/format-a-number-as-2-5k-if-a-thousand-or-more-otherwise-900\n  metricFormatter: (num, digits) => {\n    var si = [\n      { value: 1, symbol: \"\" },\n      { value: 1E3, symbol: \"k\" },\n      { value: 1E6, symbol: \"M\" },\n      { value: 1E9, symbol: \"G\" },\n      { value: 1E12, symbol: \"T\" },\n      { value: 1E15, symbol: \"P\" },\n      { value: 1E18, symbol: \"E\" }\n    ];\n    var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n    var i;\n    for (i = si.length - 1; i > 0; i--) {\n      if (num >= si[i].value) {\n        break;\n      }\n    }\n    return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\n  },\n\n}\n\nexport default EPNSCoreHelper;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\n\nimport { useWeb3React } from '@web3-react/core'\nimport { addresses, abis } from \"@project/contracts\";\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\nimport { toast } from 'react-toastify';\nimport moment from 'moment';\n\nfunction NotificationToast({ notification, clearToast }) {\n\n  // toast customize\n  const LoaderToast = ({color }) => (\n      <Toaster>\n      <div>{notification.notificationTitle}</div>\n      <div>{notification.notificationBody}</div>\n      </Toaster>\n  )\n \n  // Render\n  return (\n    <NotificationWrapper>{\n    toast.dark(<LoaderToast onClick={clearToast} color=\"#35c5f3\"/>, {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        })\n    }\n    </NotificationWrapper>\n  );\n}\n\nconst NotificationWrapper = styled.div`\n  display: none;\n`;\n\nconst Toaster = styled.div`\n  align-items: center;\n  margin: 0px 10px;\n`\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`\n\n\n\n// Export Default\nexport default NotificationToast;\n","import axios from \"axios\";\nimport { envConfig } from \"@project/contracts\";\n\n\n// const BASE_URL = \"https://backend-staging.epns.io/apis\";\nconst BASE_URL = envConfig.apiUrl// \"https://backend-kovan.epns.io/apis\";\n// const BASE_URL = \"http://localhost:4000/apis\"; //for local push node\n\n/**\n * A function used to make get requests throughout the entire application\n * @param {String} path e.g /feeds/get_feeds, this represents the route of the enpoint to call\n * @returns {Promise}\n */\nexport const getReq = async (path) => {\n    try {\n      const response = await axios.get(BASE_URL + path);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n/**\n * A function used to make post requests to the backend\n * @param {String} path e.g /feeds/get_feeds, this represents the route of the enpoint to call\n * @param {Object} obj \n * @returns {Promise}\n */\nexport const postReq = async (path, obj) => {\n  try {\n    const response = await axios.post(BASE_URL + path, obj, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n","import React, {useRef, useState} from 'react';\nimport { useClick, useClickAway } from 'react-use';\nimport styled from 'styled-components';\nimport { useWeb3React } from '@web3-react/core';\nimport { addresses, abis } from \"@project/contracts\";\nimport Loader from 'react-loader-spinner';\nimport { postReq } from \"../api\";\n\nimport {Item, H2, H3, Span, Button, Input} from 'components/SharedStyling';\n\nconst ethers = require('ethers');\n\n\nexport default function AliasVerificationModal({\n    onClose,onSuccess, verificationStatus, aliasEthAccount\n}) {\n    const { active, error, account, library, chainId } = useWeb3React();\n    const signer = library.getSigner(account);\n\n    const modalRef = useRef(null);\n    const polygonCommsContract = new ethers.Contract(addresses.epnsPolyComm, abis.epnsComm, signer);\n    const [mainAddress, setMainAddress] = useState(aliasEthAccount);\n    const [loading, setLoading] = useState('');\n\n    // Form signer and contract connection\n    useClickAway(modalRef, ()=>onClose(loading !== ''));\n\n    const checkAlias = async () => {\n        console.log(mainAddress, aliasEthAccount);\n        if (mainAddress == aliasEthAccount) {\n            submitAlias();\n        } else {\n            setLoading('Enter Correct Eth Channel Address');\n            setTimeout(() => {\n                setLoading('')\n            }, 4000)\n        }\n    }\n\n    const submitAlias = () => {\n        setLoading('loading')\n        const anotherSendTxPromise = polygonCommsContract.verifyChannelAlias(mainAddress);\n        anotherSendTxPromise\n        .then(async (tx) => {\n            console.log(tx);\n            setLoading(\"Transaction Sent!\");\n\n\t\t\tawait tx.wait(1);\n            setTimeout(() => {\n                setLoading(\"Transaction Mined!\");\n            }, 2000);\n            \n            setTimeout(() => {\n                setLoading(\"Verification in Process. Please wait, it may take some time\");\n            }, 2000);\n\t\t\t\n            const intervalId = setInterval(async () => {\n                const response = await postReq(\"/channels/get_alias_verification_status\", {\n                    aliasAddress: account,\n                    op: \"read\",\n                })\n                const status = response?.data?.status;\n                if (status == true) {\n                    clearInterval(intervalId);\n                    onSuccess();\n                    onClose();\n                }\n            }, 5000);\n        })\n        .catch(() => {\n            setLoading('There was an error');\n            setTimeout(() => {\n                setLoading('')\n            }, 2000)\n        })\n    };\n    \n\n    return (\n        <Overlay>\n            <AliasModal ref={modalRef}>\n                <Item align=\"flex-start\">\n                    <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n                    <Span weight=\"200\">Verify </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Alias</Span>\n                    </H2>\n                    {\n                        verificationStatus === null ?\n                        (\n                            <H3>There has been an error in the verification of your alias, Please contact the admin</H3>\n                        ) : (\n                            <H3>Before you can use this channel on this chain, you first need to verify your Alias.</H3>\n                        )\n                    }\n                </Item>\n                {\n                    verificationStatus !== null && (\n                        <>\n                            <Item align=\"flex-start\">\n                                <CustomInput\n                                    placeholder={aliasEthAccount}\n                                    radius=\"4px\"\n                                    padding=\"12px\"\n                                    border=\"1px solid #674c9f\"\n                                    bg=\"#fff\"\n                                    disabled\n                                    readOnly={true}\n                                />\n                            </Item>\n                            <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                                <Button\n                                    bg='#e20880'\n                                    color='#fff'\n                                    flex=\"1\"\n                                    radius=\"0px\"\n                                    padding=\"20px 10px\"\n                                    disabled={mainAddress.length !== 42 || loading !== ''}\n                                    onClick={checkAlias}\n                                >\n                                    { loading && <Loader\n                                        type=\"Oval\"\n                                        color=\"#FFF\"\n                                        height={16}\n                                        width={16}\n                                        />\n                                    }\n                                    <StyledInput\n                                        cursor=\"hand\"\n                                        textTransform=\"uppercase\"\n                                        color=\"#fff\" weight=\"400\"\n                                        size=\"0.8em\" spacing=\"0.2em\"\n                                        value={loading ? loading : \"Verify Alias\"}\n                                    />\n                                </Button>\n                            </Item>\n                        </>\n                    )\n                }\n            </AliasModal>\n        </Overlay>\n    )\n}\n\nconst StyledInput = styled(Input)`\n    width: 100%;\n    text-align: center;\n    caret-color: transparent;\n`\n\nconst CustomInput = styled(Input)`\n    box-sizing: border-box;\n    width: 100%;\n    margin: 20px 0px;\n`;\n\nconst Overlay = styled.div`\n    top: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0,0,0,0.85);\n    height: 100%;\n    width: 100%;\n    z-index: 1000;\n    position: fixed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    overflow-y: scroll;\n`;\n\nconst AliasModal = styled.div`\n    padding: 20px 30px;\n    background: white;\n`;","import React from \"react\";\nimport styled, { css } from 'styled-components';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport Loader from 'react-loader-spinner';\n\nimport { useWeb3React } from '@web3-react/core';\n\n\n// Other Information URLs\nfunction ViewInfoItem() {\n  // render\n  return (\n    <>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <>\n          <AppLinkText>\n            <AppLink href={`${process.env.REACT_APP_BROWSER_EXTENSION_URL}`} target=\"_blank\" rel=\"nofollow\">\n              Download EPNS Browser Extension\n            </AppLink>\n          </AppLinkText>\n          \n          </>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <>\n          <AppLinkText>\n            <AppLink href={`${process.env.REACT_APP_IOS_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\n              Download EPNS App (iOS)\n            </AppLink>\n          </AppLinkText>\n           For iOS Users\n          </>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <>\n          <AppLinkText>\n            <AppLink href={`${process.env.REACT_APP_ANDROID_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\n              Download EPNS App (Android)\n            </AppLink>\n          </AppLinkText>\n           For Android Users\n          </>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <ChannelTitleLink href={`${process.env.REACT_APP_HOW_TO_GUIDE}`} target=\"_blank\" rel=\"nofollow\">\n            Click here for our How to Guides\n          </ChannelTitleLink>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  flex: 1;\n  // display: flex;\n  // flex-wrap: wrap;\n\n  background: #fff;\n  border-radius: 10px;\n  border: 1px solid rgb(237, 237, 237);\n\n  margin: 15px 0px;\n  justify-content: center;\n  padding: 10px;\n`\n\nconst ChannelTitleLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\nconst AppLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\nconst AppLinkText = styled.div`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n`\nconst ChannelInfo = styled.div`\n  flex: 1;\n  margin: 5px 10px;\n  min-width: 120px;\n  flex-grow: 4;\n  flex-direction: column;\n  display: flex;\n`\n\nconst ChannelTitle = styled.div`\n  margin-bottom: 5px;\n`\n\n// Export Default\nexport default ViewInfoItem;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport Loader from 'react-loader-spinner'\n\nimport { useWeb3React } from '@web3-react/core'\n\nimport ViewInfoItem from \"components/ViewInfoItem\";\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\n// Other Information section\nfunction  Info() {\n  const { account, library } = useWeb3React();\n\n  const [controlAt, setControlAt] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n\n  return (\n    <Container>\n      {loading &&\n        <ContainerInfo>\n          <Loader\n           type=\"Oval\"\n           color=\"#35c5f3\"\n           height={40}\n           width={40}\n          />\n        </ContainerInfo>\n      }\n\n      {!loading && controlAt == 0 && \n      <>\n        <InfoBox>\n          <ViewInfoItem/>\n        </InfoBox>\n      </>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n\n  max-height: 80vh;\n`\n\nconst ContainerInfo = styled.div`\n  padding: 20px;\n`\nconst InfoBox = styled.div`\n  padding: 10px 20px;\n  display: block;\n  align-self: stretch;\n  background: #fafafa;\n`\n\n\n// Export Default\nexport default  Info;\n","/**\n * This file helps us maintain the spamnotifications fetched in state, so when tabs are switched we can retain the notification information\n */\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    page: 1, //the current page\n    notifications: [],// the actual notifications\n    finishedFetching: false,\n    toggler: false\n}\n\nexport const contractSlice = createSlice({\n    name: \"spam\",\n    initialState,\n    reducers: {\n        toggleToggler: (state) => {\n            state.toggler = !state.toggler;\n        },\n        resetState: (state) => {\n            state.page = initialState.page;\n            state.notifications = initialState.notifications;\n            state.finishedFetching = initialState.finishedFetching;\n        },\n        addPaginatedNotifications: (state, action) => {\n            state.notifications = [ ...state.notifications, ...action.payload ];\n            state.page += 1;\n        },\n        incrementPage: (state) => {\n            state.page += 1;\n        },\n        addNewNotification: (state, action) => {\n            state.notifications = [{...action.payload}, ...state.notifications]\n        },\n        setFinishedFetching: (state) => {\n            state.finishedFetching = true;\n        },\n        updateTopNotifications: (state, action) => {\n            state.notifications = [...action.payload.notifs, ...state.notifications.slice(action.payload.pageSize)];\n            console.log({sn: state.notifications});\n        }\n    }\n});\n\nexport const {\n    toggleToggler,\n    addPaginatedNotifications,\n    incrementPage,\n    addNewNotification,\n    setFinishedFetching,\n    resetState,\n    updateTopNotifications\n} = contractSlice.actions;\n\nexport default contractSlice.reducer;","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport { AnimateOnChange } from 'react-animation';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\n// Create Header\nfunction DisplayNotice({ title, theme }) {\n  React.useEffect(() => {\n\n  }, [title, theme]);\n\n  // to create blockies\n\n  return (\n    <Container>\n      <AnimateOnChange\n        animationIn=\"fadeIn\"\n        animationOut=\"fadeOut\"\n        durationOut={200}\n      >\n        <Notice theme={theme}>{title}</Notice>\n      </AnimateOnChange>\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n\n`\n\nconst Notice = styled.span`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n  font-weight: 400;\n\n  ${props => props.theme === 'primary' && css`\n    background: #e20880;\n  `};\n\n  ${props => props.theme === 'secondary' && css`\n    background: #35c5f3;\n  `};\n\n  ${props => props.theme === 'third' && css`\n    background: #674c9f;\n  `};\n`\n\n// Export Default\nexport default DisplayNotice;\n","/**\n * This file helps us maintain the notifications fetched in state, so when tabs are switched we can retain the notification information\n */\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    page: 1, //the current page\n    notifications: [],// the actual notifications\n    finishedFetching: false,\n    toggler: false\n}\n\nexport const contractSlice = createSlice({\n    name: \"notifications\",\n    initialState,\n    reducers: {\n        toggleToggler: (state) => {\n            state.toggler = !state.toggler;\n        },\n        resetState: (state) => {\n            state.page = initialState.page;\n            state.notifications = initialState.notifications;\n            state.finishedFetching = initialState.finishedFetching;\n        },\n        addPaginatedNotifications: (state, action) => {\n            state.notifications = [ ...state.notifications, ...action.payload ];\n            state.page += 1;\n        },\n        incrementPage: (state) => {\n            state.page += 1;\n        },\n        addNewNotification: (state, action) => {\n            state.notifications = [{...action.payload}, ...state.notifications]\n        },\n        setFinishedFetching: (state) => {\n            state.finishedFetching = true;\n        },\n        updateTopNotifications: (state, action) => {\n            console.log({pp: action.payload});\n            state.notifications = [...action.payload.notifs, ...state.notifications.slice(action.payload.pageSize)];\n            console.log({sn: state.notifications});\n        }\n    }\n});\n\nexport const {\n    toggleToggler,\n    addPaginatedNotifications,\n    incrementPage,\n    addNewNotification,\n    setFinishedFetching,\n    resetState,\n    updateTopNotifications\n} = contractSlice.actions;\n\nexport default contractSlice.reducer;","import React from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"react-loader-spinner\";\nimport { Waypoint } from \"react-waypoint\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { envConfig } from \"@project/contracts\";\nimport {\n  api,\n  utils,\n  NotificationItem,\n} from \"@epnsproject/frontend-sdk-staging\";\nimport {\n  addPaginatedNotifications,\n  incrementPage,\n  setFinishedFetching,\n} from \"redux/slices/spamSlice\";\nimport { postReq } from \"api\";\nimport DisplayNotice from \"components/DisplayNotice\";\nimport { updateTopNotifications } from \"redux/slices/notificationSlice\";\n\nconst NOTIFICATIONS_PER_PAGE = 10;\n// Create Header\nfunction SpamBox({ currentTab }) {\n  const dispatch = useDispatch();\n  const { account, chainId, library } = useWeb3React();\n  const { epnsCommReadProvider } = useSelector(\n    (state: any) => state.contracts\n  );\n\n  const { notifications, page, finishedFetching } = useSelector((state: any) => state.spam);\n  const { toggle } = useSelector(\n    (state: any) => state.notifications\n  );\n  const EPNS_DOMAIN = {\n    name: \"EPNS COMM V1\",\n    chainId: chainId,\n    verifyingContract: epnsCommReadProvider?.address,\n  };\n\n  const [bgUpdateLoading, setBgUpdateLoading] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const loadNotifications = async () => {\n    if (loading || finishedFetching) return;\n    setLoading(true);\n    try {\n      const { count, results } = await api.fetchSpamNotifications(\n        account,\n        NOTIFICATIONS_PER_PAGE,\n        page,\n        envConfig.apiUrl\n      );\n      const parsedResponsePromise = utils\n        .parseApiResponse(results)\n        .map(async (elem: any, i: any) => {\n          elem.channel = results[i].channel;\n          const {\n            data: { subscribers },\n          } = await postReq(\"/channels/get_subscribers\", {\n            channel: results[i].channel,\n            op: \"read\",\n          });\n          elem.subscribers = subscribers;\n          return { ...elem };\n        });\n      const parsedResponse = await Promise.all(parsedResponsePromise);\n      // get all the subsc\n      dispatch(addPaginatedNotifications(parsedResponse));\n      if (count === 0) {\n        dispatch(setFinishedFetching());\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchLatestNotifications = async () => {\n    if (loading || bgUpdateLoading) return;\n    setBgUpdateLoading(true);\n    setLoading(true);\n\n    try {\n      const { count, results } = await api.fetchSpamNotifications(\n        account,\n        NOTIFICATIONS_PER_PAGE,\n        1,\n        envConfig.apiUrl\n      );\n      if (!notifications.length) {\n        dispatch(incrementPage());\n      }\n      const parsedResponsePromise = utils\n        .parseApiResponse(results)\n        .map(async (elem: any, i: any) => {\n          elem.channel = results[i].channel;\n          const {\n            data: { subscribers },\n          } = await postReq(\"/channels/get_subscribers\", {\n            channel: results[i].channel,\n            op: \"read\",\n          });\n          elem.subscribers = subscribers;\n          return { ...elem };\n        });\n      const parsedResponse = await Promise.all(parsedResponsePromise);\n      dispatch(\n        updateTopNotifications({\n          notifs: parsedResponse,\n          pageSize: NOTIFICATIONS_PER_PAGE,\n        })\n      );\n      if (count === 0) {\n        dispatch(setFinishedFetching());\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setBgUpdateLoading(false);\n      setLoading(false);\n    }\n  };\n\n  React.useEffect(() => {\n    if (account && currentTab === \"spambox\") {\n      fetchLatestNotifications();\n    }\n  }, [account, currentTab]);\n\n  React.useEffect(() => {\n    if (epnsCommReadProvider) {\n      loadNotifications();\n    }\n  }, [epnsCommReadProvider, account]);\n\n  //function to query more notifications\n  const handlePagination = async () => {\n    loadNotifications();\n    dispatch(incrementPage());\n  };\n\n  const showWayPoint = (index: any) => {\n    return (\n      Number(index) === notifications.length - 1 &&\n      !finishedFetching &&\n      !bgUpdateLoading\n    );\n  };\n\n  const onSubscribeToChannel = async (channelAddress) => {\n    let txToast;\n    const type = {\n      Subscribe: [\n        { name: \"channel\", type: \"address\" },\n        { name: \"subscriber\", type: \"address\" },\n        { name: \"action\", type: \"string\" },\n      ],\n    };\n    const message = {\n      channel: channelAddress,\n      subscriber: account,\n      action: \"Subscribe\",\n    };\n\n    const signature = await library\n      .getSigner(account)\n      ._signTypedData(EPNS_DOMAIN, type, message);\n\n    return postReq(\"/channels/subscribe_offchain\", {\n      signature,\n      message,\n      op: \"write\",\n      chainId,\n      contractAddress: epnsCommReadProvider.address,\n    });\n  };\n\n  const isSubscribedFn = async (subscribers: any) => {\n    return subscribers\n      .map((a) => a.toLowerCase())\n      .includes(account.toLowerCase());\n  };\n\n  // Render\n  return (\n    <>\n      <Container>\n        {bgUpdateLoading && (\n          <div style={{ marginTop: \"10px\" }}>\n            <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\n          </div>\n        )}\n        {notifications && (\n          <Items id=\"scrollstyle-secondary\">\n            {notifications.map((oneNotification, index) => {\n              const {\n                cta,\n                title,\n                message,\n                app,\n                icon,\n                image,\n                channel,\n                subscribers,\n              } = oneNotification;\n              // render the notification item\n              return (\n                <div key={`${message}+${title}`}>\n                  {showWayPoint(index) && !loading && (\n                    <Waypoint onEnter={() => handlePagination()} />\n                  )}\n                  <NotificationItem\n                    notificationTitle={title}\n                    notificationBody={message}\n                    cta={cta}\n                    app={app}\n                    icon={icon}\n                    image={image}\n                    subscribeFn={(e) => {\n                      e?.stopPropagation();\n                      onSubscribeToChannel(channel);\n                    }}\n                    isSpam\n                    isSubscribedFn={async () => isSubscribedFn(subscribers)}\n                  />\n                </div>\n              );\n            })}\n          </Items>\n        )}\n        {loading && !bgUpdateLoading && (\n          <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\n        )}\n        {!loading && !notifications.length && (\n          <CenteredContainerInfo>\n            <DisplayNotice\n              title=\"You currently have no spam notifications.\"\n              theme=\"third\"\n            />\n          </CenteredContainerInfo>\n        )}\n      </Container>\n    </>\n  );\n}\n\nconst CenteredContainerInfo = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`;\n// css styles\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  max-height: 100vh;\n\n  // padding: 20px;\n  // font-size: 16px;\n  // display: flex;\n  // font-weight: 200;\n  // align-content: center;\n  // align-items: center;\n  // justify-content: center;\n  // width: 100%;\n  // min-height: 40vh;\n`;\n\n// Export Default\nexport default SpamBox;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"react-loader-spinner\";\nimport { Waypoint } from \"react-waypoint\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { envConfig } from \"@project/contracts\";\nimport DisplayNotice from \"components/DisplayNotice\";\nimport SpamBox from \"./spam\";\nimport {\n  api,\n  utils,\n  NotificationItem,\n} from \"@epnsproject/frontend-sdk-staging\";\nimport {\n  addPaginatedNotifications,\n  incrementPage,\n  setFinishedFetching,\n  resetState,\n  updateTopNotifications,\n} from \"redux/slices/notificationSlice\";\nimport Button from \"@material-ui/core/Button/Button\";\n\nconst NOTIFICATIONS_PER_PAGE = 10;\n// Create Header\nfunction Feedbox() {\n  const dispatch = useDispatch();\n  const { account } = useWeb3React();\n  const { epnsCommReadProvider } = useSelector((state: any) => state.contracts);\n  const { notifications, page, finishedFetching, toggle } = useSelector(\n    (state: any) => state.notifications\n  );\n\n  const [bgUpdateLoading, setBgUpdateLoading] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [currentTab, setCurrentTab] = React.useState(\"inbox\");\n\n  const loadNotifications = async () => {\n    if (loading || finishedFetching) return;\n    setLoading(true);\n    try {\n      const { count, results } = await api.fetchNotifications(\n        account,\n        NOTIFICATIONS_PER_PAGE,\n        page,\n        envConfig.apiUrl\n      );\n      const parsedResponse = utils.parseApiResponse(results);\n      dispatch(addPaginatedNotifications(parsedResponse));\n      if (count === 0) {\n        dispatch(setFinishedFetching());\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchLatestNotifications = async () => {\n    if (loading || bgUpdateLoading) return;\n    setBgUpdateLoading(true);\n    setLoading(true);\n    try {\n      const { count, results } = await api.fetchNotifications(\n        account,\n        NOTIFICATIONS_PER_PAGE,\n        1,\n        envConfig.apiUrl\n      );\n      if (!notifications.length) {\n        dispatch(incrementPage());\n      }\n      const parsedResponse = utils.parseApiResponse(results);\n      // replace the first 20 notifications with these\n      dispatch(\n        updateTopNotifications({\n          notifs: parsedResponse,\n          pageSize: NOTIFICATIONS_PER_PAGE,\n        })\n      );\n      if (count === 0) {\n        dispatch(setFinishedFetching());\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setBgUpdateLoading(false);\n      setLoading(false);\n    }\n  };\n\n  React.useEffect(() => {\n    if (account && currentTab === \"inbox\") {\n      fetchLatestNotifications();\n    }\n  }, [account, currentTab]);\n\n  React.useEffect(() => {\n    fetchLatestNotifications();\n  }, [toggle]);\n\n  //function to query more notifications\n  const handlePagination = async () => {\n    loadNotifications();\n    dispatch(incrementPage());\n  };\n\n  const showWayPoint = (index: any) => {\n    return (\n      Number(index) === notifications.length - 1 &&\n      !finishedFetching &&\n      !bgUpdateLoading\n    );\n  };\n  const [clicked, setClicked] = React.useState(false);\n\n  // Render\n  return (\n    <FullWidth>\n      <Wrapper>\n        {bgUpdateLoading && (\n          <div style={{ marginTop: \"10px\", marginLeft: \"21px\" }}>\n            <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\n          </div>\n        )}\n        <ControlButtonBack\n          active={currentTab == \"inbox\"}\n          onClick={() => {\n            setCurrentTab(\"inbox\");\n            setClicked(false);\n          }}\n        >\n          {/* Inbox */}\n          <img src=\"./arrow_back.png\" />\n          <img style={{ marginLeft: \"15px\" }} src=\"./svg/INBOX.svg\" />\n          {/* <ControlText color=\"#35C5F3\">INBOX</ControlText> */}\n        </ControlButtonBack>\n\n        <ControlButton\n          active={currentTab == \"spambox\"}\n          onClick={() => {\n            setCurrentTab(\"spambox\");\n            setClicked(true);\n          }}\n          spam\n        >\n          {/* spambox */}\n\n          {/* <Button style={{ border: '2px solid black',width:\"35px\",height:\"45px\",borderRadius:\"10px\" }} > */}\n          \n          <ControlImage active={currentTab == \"spambox\"} src=\"./spam-icon.png\"/>\n            {/* </Button> */}\n\n        </ControlButton>\n      </Wrapper>\n\n      {currentTab == \"spambox\" ? (\n        <SpamBox currentTab={currentTab} />\n      ) : (\n        <Container>\n          {notifications && (\n            <Items id=\"scrollstyle-secondary\">\n              {notifications.map((oneNotification, index) => {\n                const {\n                  cta,\n                  title,\n                  message,\n                  app,\n                  icon,\n                  image,\n                } = oneNotification;\n\n                // render the notification item\n                return (\n                  <div key={`${message}+${title}`}>\n                    {showWayPoint(index) && (\n                      <Waypoint onEnter={() => handlePagination()} />\n                    )}\n                    <NotificationItem\n                      notificationTitle={title}\n                      notificationBody={message}\n                      cta={cta}\n                      app={app}\n                      icon={icon}\n                      image={image}\n                    />\n                  </div>\n                );\n              })}\n            </Items>\n          )}\n          {loading && !bgUpdateLoading && (\n            <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\n          )}\n          {!notifications.length && !loading && (\n            <CenteredContainerInfo>\n              <DisplayNotice\n                title=\"You currently have no notifications, try subscribing to some channels.\"\n                theme=\"third\"\n              />\n            </CenteredContainerInfo>\n          )}\n        </Container>\n      )}\n    </FullWidth>\n  );\n}\n\n// const Controls = styled.div`\n//   flex: 0;\n//   display: flex;\n//   flex-direction: row;\n//   display: flex;\n//   flex-wrap: wrap;\n//   justify-content: space-between;\n// `;\n\nconst ControlButtonBack = styled.div`\n  flex: 1 1 21%;\n  height: 20px;\n  min-width: 70px;\n  background: #fff;\n  margin-top: 10px;\n  margin-left: 27px;\n\n  overflow: hidden;\n  background: #fafafa;\n\n  display: flex;\n  visibility:${(props) => (props.active ? \"hidden\" : \"\")};\n\n  // opacity: ${(props) => (props.active ? \"1\" : \"0.4\")};\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n`;\n\nconst ControlButton = styled.div`\n  display: flex;\n  height: 44px;\n  min-width: 40px;\n  border-radius: 10px;\n  margin-right: 30px;\n  margin-bottom: 20px;\n\n  // opacity: ${(props) => (props.active ? \"1\" : \"0.4\")};\n  // background-color: ${(props) => (props.active ? \"#E20880\" : \"\")};\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n`;\n\nconst ControlImage = styled.img`\n  height: 40px;\n  width: 40px;\n  \n\n\n`;\n\nconst ControlText = styled.div`\n  font-size: 20px;\n  font-weight: 400;\n  margin-left: 15px;\n  opacity: ${(props) => (props.active ? \"1\" : \"0.75\")};\n`;\n\nconst FullWidth = styled.div`\n  width: 100%;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding-top: 20px;\n  background: #fafafa;\n`;\n\nconst EmptyWrapper = styled.div`\n  padding-top: 50px;\n  padding-bottom: 50px;\n`;\nconst CenteredContainerInfo = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`;\n// css styles\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  max-height: 100vh;\n\n  // padding: 20px;\n  // font-size: 16px;\n  // display: flex;\n  // font-weight: 200;\n  // align-content: center;\n  // align-items: center;\n  // justify-content: center;\n  // width: 100%;\n  // min-height: 40vh;\n`;\n\n// Export Default\nexport default Feedbox;\n","const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px'\n}\n\nexport const Device = {\n  mobileS: `(max-width: ${size.mobileS})`,\n  mobileM: `(max-width: ${size.mobileM})`,\n  mobileL: `(max-width: ${size.mobileL})`,\n  tablet: `(max-width: ${size.tablet})`,\n  laptop: `(max-width: ${size.laptop})`,\n  laptopL: `(max-width: ${size.laptopL})`,\n  desktop: `(max-width: ${size.desktop})`,\n  desktopL: `(max-width: ${size.desktop})`\n};\n","import EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\nimport { ethers } from \"ethers\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { postReq } from \"api\";\n\n// STATIC SINGLETON\nexport const ChannelEvents = {\n  ADD_CHANNEL_ANY: \"AddChannelAny\",\n  ADD_CHANNEL_SELF: \"AddChannelSelf\",\n  UPDATE_CHANNEL_ANY: \"UpdateChannelAny\",\n  UPDATE_CHANNEL_SELF: \"UpdateChannelSelf\",\n  SUBSCRIBER_ANY_CHANNEL: \"SubscriberAnyChannel\",\n  SUBSCRIBER_SELF_CHANNEL: \"SubscriberSelfChannel\",\n  UNSUBSCRIBER_ANY_CHANNEL: \"UnsubscriberAnyChannel\",\n  UNSUBSCRIBER_SELF_CHANNEL: \"UnsubscriberSelfChannel\",\n};\n\nexport default class ChannelsDataStore {\n  static instance = ChannelsDataStore.instance || new ChannelsDataStore();\n\n  state = {\n    channelsCount: -1,\n    channelsMeta: {},\n    channelsJson: {},\n    subscribers: {},\n\n    callbacks: [],\n\n    account: null,\n    epnsReadProvider: null,\n    epnsCommReadProvider: null,\n  };\n\n  // init\n  init = (account, epnsReadProvider, epnsCommReadProvider) => {\n    // set account\n    this.state.account = account;\n\n    // First attach listeners then overwrite the old one if any\n    this.resetChannelsListeners();\n    this.state.epnsReadProvider = epnsReadProvider;\n    this.state.epnsCommReadProvider = epnsCommReadProvider;\n    this.initChannelsListenersAsync();\n\n    // next get store channels count\n    this.getChannelsCountAsync();\n  };\n\n  // RESET LISTENERS\n  resetChannelsListeners = () => {\n    // only proceed if a read provider is attached\n    if (this.state.epnsReadProvider) {\n      this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\n      this.state.epnsReadProvider.removeAllListeners(\"UpdateChannel\");\n      this.state.epnsCommReadProvider.removeAllListeners(\"Subscribe\");\n      this.state.epnsCommReadProvider.removeAllListeners(\"Unsubscribe\");\n    }\n  };\n\n  // init LISTENERS\n  initChannelsListenersAsync = async () => {\n    // Add Listeners\n    await this.listenForAddChannelAnyAsync();\n    await this.listenForAddChannelSelfAsync();\n\n    await this.listenForUpdateChannelAnyAsync();\n    await this.listenForUpdateChannelSelfAsync();\n\n    // use the communicator contract for the below\n    await this.listenForSubscribeAnyAsync();\n    await this.listenForSubscribeSelfAsync();\n    await this.listenForUnsubscribeAnyAsync();\n    await this.listenForUnsubscribeSelfAsync();\n  };\n\n  // 1. Add Any Channel Listeners\n  listenForAddChannelAnyAsync = async () => {\n    const contract = this.state.epnsReadProvider;\n    let filter = contract.filters.AddChannel(null, null);\n\n    contract.on(filter, async (channel, ipfs) => {\n      // Do own stuff\n      await this.incrementChannelsCountAsync(1);\n\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY]\n        )) {\n          if (callback) {\n            callback(channel, ipfs);\n          }\n        }\n      }\n    });\n  };\n\n  // 2. Add Self Channel Listener\n  listenForAddChannelSelfAsync = async () => {\n    const contract = this.state.epnsReadProvider;\n    let filter = contract.filters.AddChannel(this.state.account, null);\n\n    contract.on(filter, async (channel, ipfs) => {\n      // Do own stuff\n      // Nothing to do, just do callback\n\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF]\n        )) {\n          if (callback) {\n            callback(channel, ipfs);\n          }\n        }\n      }\n    });\n  };\n\n  // 3. Update Any Channel Listener\n  listenForUpdateChannelAnyAsync = async () => {\n    const contract = this.state.epnsReadProvider;\n    let filter = contract.filters.UpdateChannel(null, null);\n\n    contract.on(filter, async (channel, ipfs) => {\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY]\n        )) {\n          if (callback) {\n            callback(channel, ipfs);\n          }\n        }\n      }\n    });\n  };\n\n  // 4. Update Self Channel Listener\n  listenForUpdateChannelSelfAsync = async () => {\n    const contract = this.state.epnsReadProvider;\n    let filter = contract.filters.UpdateChannel(this.state.account, null);\n\n    contract.on(filter, async (channel, ipfs) => {\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF]\n        )) {\n          if (callback) {\n            callback(channel, ipfs);\n          }\n        }\n      }\n    });\n  };\n\n  // 5. Subscriber Any\n  listenForSubscribeAnyAsync = async () => {\n    const contract = this.state.epnsCommReadProvider;\n    let filter = contract.filters.Subscribe(null, null);\n\n    contract.on(filter, async (channel, user) => {\n      //   // Do own stuff\n      //   if (this.state.channelsMeta[channel]) {\n      //     const channelID = this.state.channelsMeta[channel];\n      //     let count = this.state.channelsMeta[channelID].memberCount.toNumber();\n      //     count = count + 1;\n      //     this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\n      //   }\n\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL]\n        )) {\n          if (callback) {\n            callback(channel, user);\n          }\n        }\n      }\n    });\n  };\n\n  // 6. Subscriber Self\n  listenForSubscribeSelfAsync = async () => {\n    const contract = this.state.epnsCommReadProvider;\n    let filter = contract.filters.Subscribe(this.state.account, null);\n\n    contract.on(filter, async (channel, user) => {\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL]\n        )) {\n          if (callback) {\n            callback(channel, user);\n          }\n        }\n      }\n    });\n  };\n\n  // 7. Unsubscribe Any\n  listenForUnsubscribeAnyAsync = async () => {\n    const contract = this.state.epnsCommReadProvider;\n    let filter = contract.filters.Unsubscribe(null, null);\n\n    contract.on(filter, async (channel, user) => {\n      // Do own stuff\n      // if (this.state.channelsMeta[channel]) {\n      //   const channelID = this.state.channelsMeta[channel];\n      //   let count = this.state.channelsMeta[channelID].memberCount.toNumber();\n      //   count = count - 1;\n      //   this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\n      // }\n\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL]\n        )) {\n          if (callback) {\n            callback(channel, user);\n          }\n        }\n      }\n    });\n  };\n\n  // 8. Unsubscribe Self\n  listenForUnsubscribeSelfAsync = async () => {\n    const contract = this.state.epnsCommReadProvider;\n    let filter = contract.filters.Unsubscribe(this.state.account, null);\n\n    contract.on(filter, async (channel, user) => {\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL]\n        )) {\n          if (callback) {\n            callback(channel, user);\n          }\n        }\n      }\n    });\n  };\n\n  // FOR CALLBACKS\n  addCallbacks = (callbackType, callbackID, callback) => {\n    // first check if callback already exists\n    if (!this.state.callbacks[callbackType]) {\n      this.state.callbacks[callbackType] = {};\n    }\n\n    if (!this.state.callbacks[callbackType][callbackID]) {\n      this.state.callbacks[callbackType][callbackID] = callback;\n    }\n  };\n\n  removeCallbacks = (callbackType, callbackID) => {\n    // first check if callback already exists\n    if (this.state.callbacks[callbackType][callbackID]) {\n      this.state.callbacks[callbackType][callbackID] = null;\n    }\n  };\n\n  // CHANNELS COUNT\n  getChannelsCountAsync = async () => {\n    const enableLogs = 0;\n\n    return new Promise(async (resolve, reject) => {\n      if (this.state.channelsCount == -1) {\n        // Count not set, get and set it first\n        const count = EPNSCoreHelper.getTotalNumberOfChannels(\n          this.state.epnsReadProvider\n        )\n          .then((response) => {\n            this.state.channelsCount = response;\n\n            if (enableLogs)\n              console.log(\"getChannelsCountAsync() --> %o\", response);\n            resolve(this.state.channelsCount);\n          })\n          .catch((err) => {\n            console.log(\"!!!Error, getChannelsCountAsync() --> %o\", err);\n            reject(err);\n          });\n      } else {\n        resolve(this.state.channelsCount);\n      }\n    });\n  };\n\n  incrementChannelsCountAsync = async (incrementCount) => {\n    return new Promise((resolve, reject) => {\n      this.getChannelsCountAsync()\n        .then((response) => {\n          this.state.channelsCount = response + incrementCount;\n          console.log(\n            \"incrementChannelsCountAsync() --> %d\",\n            this.state.channelsCount\n          );\n          resolve(this.state.channelsCount);\n        })\n        .catch((err) => {\n          console.log(\"!!!Error, incrementChannelsCountAsync() --> %o\", err);\n          reject(err);\n        });\n    });\n  };\n  /**\n   * Get paginated channel information\n   * @param {Number} startIndex the number of channels viewed so far e.g 50\n   * @param {Number} pageCount the number of items per page we want\n   * @returns \n   */\n  getChannelFromApi = async (startIndex, pageCount) => {\n    return postReq(\"/channels/fetch_channels\", {\n      page: Math.ceil(startIndex / pageCount) || 1,\n      pageSize: pageCount,\n      op: \"write\",\n    }).then((response) => {\n      const output = response.data.results.map(({channel}) => ({addr: channel}));\n      return output;\n    });\n  };\n  // CHANNELS META FUNCTIONS\n  // To get channels meta\n  // get channels meta in a paginated format\n  // by passing in the starting index and the number of items per page\n  getChannelsMetaAsync = async (startIndex, pageCount) => {\n    this.getChannelFromApi(startIndex, pageCount)\n    return new Promise(async (resolve, reject) => {\n      // get total number of channels\n      const channelsCount = await this.getChannelsCountAsync();\n      let stopIndex = startIndex + pageCount;\n\n      // if the stop index is -1 then get all channels\n      if (stopIndex == -1 || stopIndex > channelsCount) {\n        stopIndex = channelsCount;\n      }\n\n      // initialise an array with the values from 0 to the length of the number of channels\n      let channelIDs = [];\n\n      for (let i = startIndex; i < stopIndex; i++) {\n        channelIDs.push(i);\n      }\n      console.log({ channelIDs });\n\n      const promises = channelIDs.map(async (channelID) => {\n        // Match the cache\n        return this.getChannelMetaAsync(channelID)\n          .then((response) => response)\n          .catch((err) =>\n            console.log(\n              \"!!!Error (but skipping), getChannelMetaAsync() --> %o\",\n              err\n            )\n          );\n      });\n\n      // wait until all promises are resolved\n      const channelMetaData = await Promise.all(promises);\n\n      // return channels meta\n      // console.log(\"getChannelsMetaAsync(From %d to %d) --> %o\", startIndex, stopIndex, channelMetaData);\n      resolve(channelMetaData);\n    });\n  };\n\n  // To get a single channel meta via id\n  getChannelMetaAsync = async (channelID) => {\n    return new Promise(async (resolve, reject) => {\n      if (this.state.channelsMeta[channelID]) {\n        console.log(\n          \"getChannelMetaAsync() [CACHED] --> %o\",\n          this.state.channelsMeta[channelID]\n        );\n        resolve(this.state.channelsMeta[channelID]);\n      } else {\n        let channelAddress;\n\n        await EPNSCoreHelper.getChannelAddressFromID(\n          channelID,\n          this.state.epnsReadProvider\n        )\n          .then(async (response) => {\n            channelAddress = response;\n            await this.getChannelMetaViaAddressAsync(channelAddress).then(\n              (response) => {\n                // update the channel cache before resolving\n                this.state.channelsMeta[channelID] = response;\n                this.state.channelsMeta[channelAddress] = channelID;\n\n                // resolve\n                // console.log(\"getChannelMetaAsync() [Address: %s] --> %o\", channelAddress, response);\n                resolve(response);\n              }\n            );\n          })\n          .catch((err) => {\n            console.log(\"!!!Error, getChannelMetaAsync() --> %o\", err);\n            reject(err);\n          });\n      }\n    });\n  };\n\n  // To get a single channel meta via address\n  getChannelMetaViaAddressAsync = async (channelAddress) => {\n    return new Promise(async (resolve, reject) => {\n      if (this.state.channelsMeta[channelAddress]) {\n        const channelID = this.state.channelsMeta[channelAddress];\n\n        console.log(\n          \"getChannelMetaViaAddressAsync() [CACHED] --> %o\",\n          this.state.channelsMeta[channelID]\n        );\n        resolve(this.state.channelsMeta[channelID]);\n      } else {\n        // Can't cache this :(, no way to know channel id\n        await EPNSCoreHelper.getChannelInfo(\n          channelAddress,\n          this.state.epnsReadProvider\n        )\n          .then((response) => {\n            // resolve\n            // console.log(\"getChannelMetaViaAddressAsync() [Address: %s] --> %o\", channelAddress, response);\n            resolve(response);\n          })\n          .catch((err) => {\n            console.log(\n              \"!!!Error, getChannelMetaViaAddressAsync() --> %o\",\n              err\n            );\n            reject(err);\n          });\n      }\n    });\n  };\n  \n  optInCache = async (channelAddress, userAddress) => {\n    const cachedSubscribers = [...this.state.subscribers[channelAddress]];\n    if (!cachedSubscribers) return;\n    this.state.subscribers[channelAddress] = [\n      ...cachedSubscribers,\n      userAddress,\n    ];\n    return cachedSubscribers;\n  };\n\n  optOutCache = async (channelAddress, userAddress) => {\n    const cachedSubscribers = [...this.state.subscribers[channelAddress]];\n    if (!cachedSubscribers) return;\n    this.state.subscribers[channelAddress] = cachedSubscribers.filter(\n      (sub) => sub != userAddress\n    );\n    return cachedSubscribers;\n  };\n\n  getChannelSubscribers = async (channelAddress) => {\n    const cachedSubscribers = this.state.subscribers[channelAddress];\n    if (cachedSubscribers) {\n      return cachedSubscribers;\n    }\n    return postReq(\"/channels/get_subscribers\", {\n      channel: channelAddress,\n      op: \"read\",\n    })\n      .then(({ data }) => {\n        const subs = data.subscribers;\n        this.state.subscribers[channelAddress] = subs;\n        return subs;\n      })\n      .catch((err) => {\n        console.log(`getChannelSubscribers => ${err.message}`);\n        return [];\n      });\n  };\n\n  // CHANNELS INFO FUNCTIONS\n  // To get a single channel meta via id\n  getChannelJsonAsync = async (channelAddress) => {\n    return new Promise(async (resolve, reject) => {\n      if (this.state.channelsJson[channelAddress]) {\n        // console.log(\"getChannelJsonAsync() [CACHED] --> %o\", this.state.channelsJson[channelAddress]);\n        resolve(this.state.channelsJson[channelAddress]);\n      } else {\n        await EPNSCoreHelper.getChannelJsonFromChannelAddress(\n          channelAddress,\n          this.state.epnsReadProvider\n        )\n          .then((response) => {\n            // First set the cache\n            this.state.channelsJson[channelAddress] = response;\n\n            // resolve\n            // console.log(\"getChannelJsonAsync() [Address: %s] --> %o\", channelAddress, response);\n            resolve(response);\n          })\n          .catch((err) => {\n            console.log(\"!!!Error, getChannelJsonAsync() --> %o\", err);\n            reject(err);\n          });\n      }\n    });\n  };\n}\n","/**\n * This file helps us maintain the channels fetched in state, such that when we leave the tab, the channels can be fetched from memory\n */\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  CHANNNEL_DEACTIVATED_STATE: 2,\n  CHANNEL_BLOCKED_STATE: 3,\n  CHANNEL_ACTIVE_STATE: 1,\n  CHANNEL_BLACKLIST: [], //a list of channels\n  page: 0,\n  channels: [], // the channels meta-data\n  channelsCache: {}, // a mapping of channel address to channel details\n};\n\nexport const contractSlice = createSlice({\n  name: \"channels\",\n  initialState,\n  reducers: {\n    setChannelMeta: (state, action) => {\n      state.channels = action.payload;\n    },\n    incrementPage: (state) => {\n      state.page += 1;\n    },\n    cacheChannelInfo: (state, action) => {\n      const { address, meta } = action.payload;\n      state.channelsCache[address] = meta;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  setChannelMeta,\n  incrementPage,\n  cacheChannelInfo,\n} = contractSlice.actions;\n\nexport default contractSlice.reducer;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { Device } from \"assets/Device\";\n\nimport { toast as toaster } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport Loader from \"react-loader-spinner\";\nimport Skeleton from \"@yisheng90/react-loading\";\nimport { IoMdPeople } from \"react-icons/io\";\nimport { GoVerified } from \"react-icons/go\";\nimport { FaRegAddressCard } from \"react-icons/fa\";\nimport { AiTwotoneCopy } from \"react-icons/ai\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { postReq } from \"api\";\nimport NotificationToast from \"components/NotificationToast\";\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\nimport { cacheChannelInfo } from \"redux/slices/channelSlice\";\n\n// Create Header\nfunction ViewChannelItem({ channelObjectProp }) {\n  const dispatch = useDispatch();\n  const {\n    epnsReadProvider,\n    epnsWriteProvider,\n    epnsCommReadProvider,\n    pushAdminAddress,\n    ZERO_ADDRESS,\n  } = useSelector((state) => state.contracts);\n  const { canVerify } = useSelector((state) => state.admin);\n  const { channelsCache, CHANNEL_BLACKLIST } = useSelector(\n    (state) => state.channels\n  );\n  const { account, library, chainId } = useWeb3React();\n  const isOwner = channelObjectProp.addr === account;\n\n  const [channelObject, setChannelObject] = React.useState({});\n  const [channelJson, setChannelJson] = React.useState({});\n  const [subscribed, setSubscribed] = React.useState(true);\n  const [loading, setLoading] = React.useState(true);\n  const [memberCount, setMemberCount] = React.useState(0);\n  const [isPushAdmin, setIsPushAdmin] = React.useState(false);\n  const [isVerified, setIsVerified] = React.useState(false);\n  const [isBlocked, setIsBlocked] = React.useState(false);\n  const [vLoading, setvLoading] = React.useState(false);\n  const [bLoading, setBLoading] = React.useState(false);\n  const [txInProgress, setTxInProgress] = React.useState(false);\n  const [canUnverify, setCanUnverify] = React.useState(false);\n  const [verifierDetails, setVerifierDetails] = React.useState(null);\n  const [copyText, setCopyText] = React.useState(null);\n\n  // ------ toast related section\n  const isChannelBlacklisted = CHANNEL_BLACKLIST.includes(channelObject.addr);\n  const [toast, showToast] = React.useState(null);\n  const clearToast = () => showToast(null);\n\n  //clear toast variable after it is shown\n  React.useEffect(() => {\n    if (toast) {\n      clearToast();\n    }\n  }, [toast]);\n  // ------ toast related section\n\n  React.useEffect(() => {\n    if (!channelObject.addr) return;\n    if (channelObject.verifiedBy) {\n      // procced as usual\n      fetchChannelJson().catch((err) => alert(err.message));\n      setIsBlocked(\n        channelObject.channelState === 3 || channelObject.channelState === 2 //dont display channel if blocked //dont display channel if deactivated\n      );\n    } else {\n      // if this key (verifiedBy) is not present it means we are searching and should fetch the channel object from chain again\n      epnsReadProvider.channels(channelObject.addr).then((response) => {\n        setChannelObject({ ...response, addr: channelObject.addr });\n        fetchChannelJson();\n      });\n    }\n  }, [account, channelObject, chainId]);\n\n  React.useEffect(() => {\n    if (!channelObjectProp) return;\n    setChannelObject(channelObjectProp);\n  }, [channelObjectProp]);\n\n  React.useEffect(() => {\n    if (!isVerified || channelObject?.verifiedBy === ZERO_ADDRESS) return;\n    ChannelsDataStore.instance\n      .getChannelJsonAsync(channelObject.verifiedBy)\n      .then((verifierDetails) => {\n        setVerifierDetails(verifierDetails);\n      })\n      .catch((err) => {\n        console.log(channelObject.verifiedBy, err);\n      });\n  }, [isVerified, channelObject]);\n\n  const EPNS_DOMAIN = {\n    name: \"EPNS COMM V1\",\n    chainId: chainId,\n    verifyingContract: epnsCommReadProvider.address,\n  };\n  // to fetch channels\n  const fetchChannelJson = async () => {\n    try {\n      let channelJson = {};\n      setCopyText(channelObject.addr);\n      if (channelsCache[channelObject.addr]) {\n        channelJson = channelsCache[channelObject.addr];\n      } else {\n        channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(\n          channelObject.addr\n        );\n        dispatch(\n          cacheChannelInfo({\n            address: channelObject.addr,\n            meta: channelJson,\n          })\n        );\n      }\n      const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(channelObject.addr);\n      const subscribed = channelSubscribers.find((sub) => {\n        return sub.toLowerCase() === account.toLowerCase();\n      });\n\n      setIsPushAdmin(pushAdminAddress === account);\n      setMemberCount(channelSubscribers.length);\n      setSubscribed(subscribed);\n      setChannelJson({ ...channelJson, addr: channelObject.addr });\n      setLoading(false);\n    } catch (err) {\n      setIsBlocked(true);\n    }\n  };\n\n  React.useEffect(() => {\n    if(!channelObject) return;\n    setIsVerified(\n      Boolean(\n        (channelObject.verifiedBy &&\n          channelObject.verifiedBy !== ZERO_ADDRESS) ||\n          channelObject.addr === pushAdminAddress\n      )\n    );\n    setCanUnverify(channelObject.verifiedBy == account);\n  }, [channelObject]);\n\n  // toast customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader type=\"Oval\" color={color} height={30} width={30} />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  );\n\n  // to subscribe\n  const subscribe = async () => {\n    subscribeAction(false);\n  };\n  const formatAddress = (addressText) => {\n    return addressText.length > 40\n      ? `${addressText.slice(0, 4)}....${addressText.slice(36)}`\n      : addressText;\n  };\n\n  // Toastify\n  let notificationToast = () =>\n    toaster.dark(<LoaderToast msg=\"Preparing Notification\" color=\"#fff\" />, {\n      position: \"bottom-right\",\n      autoClose: false,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n  const verifyChannel = () => {\n    setvLoading(true);\n    // post op\n    epnsWriteProvider\n      .verifyChannel(channelObject.addr)\n      .then(async (tx) => {\n        console.log(tx);\n        console.log(\"Transaction Sent!\");\n\n        toaster.update(notificationToast(), {\n          render: \"Transaction sent\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n\n        await tx.wait(1);\n        console.log (\"Transaction Mined!\");\n        setIsVerified(true);\n      })\n      .catch((err) => {\n        console.log(\"!!!Error verifyChannel() --> %o\", err);\n        toaster.update(notificationToast(), {\n          render: \"Transacion Failed: \" + err.error?.message || \"Unknown Error\",\n          type: toaster.TYPE.ERROR,\n          autoClose: 5000,\n        });\n      })\n      .finally(() => {\n        setvLoading(false);\n      });\n  };\n\n  const unverifyChannel = () => {\n    setvLoading(true);\n    epnsWriteProvider\n      .unverifyChannel(channelObject.addr)\n      .then(async (tx) => {\n        console.log(tx);\n        console.log(\"Transaction Sent!\");\n\n        toaster.update(notificationToast(), {\n          render: \"Transaction sent\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n\n        await tx.wait(1);\n        console.log(\"Transaction Mined!\");\n        setIsVerified(false);\n      })\n      .catch((err) => {\n        console.log(\"!!!Error handleSendMessage() --> %o\", err);\n        toaster.update(notificationToast(), {\n          render: \"Transacion Failed: \" + err.error?.message || \"Unknown Error\",\n          type: toaster.TYPE.ERROR,\n          autoClose: 5000,\n        });\n      });\n    setvLoading(false);\n  };\n  const blockChannel = () => {\n    setBLoading(true);\n    epnsWriteProvider\n      .blockChannel(channelObject.addr)\n      .then(async (tx) => {\n        console.log(tx);\n        console.log(\"Transaction Sent!\");\n\n        toaster.update(notificationToast(), {\n          render: \"Transaction Sent\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n\n        // await tx.wait(1);\n        // console.log (\"Transaction Mined!\");\n      })\n      .catch((err) => {\n        console.log(\"!!!Error handleSendMessage() --> %o\", err);\n        toaster.update(notificationToast(), {\n          render: \"Transacion Failed: \" + err.error.message,\n          type: toaster.TYPE.ERROR,\n          autoClose: 5000,\n        });\n      })\n      .finally(() => {\n        // post op\n        setBLoading(false);\n        setIsBlocked(true);\n      });\n  };\n\n  const subscribeAction = async () => {\n    setTxInProgress(true);\n    let txToast;\n    try {\n      const type = {\n        Subscribe: [\n          { name: \"channel\", type: \"address\" },\n          { name: \"subscriber\", type: \"address\" },\n          { name: \"action\", type: \"string\" },\n        ],\n      };\n      const message = {\n        channel: channelObject.addr,\n        subscriber: account,\n        action: \"Subscribe\",\n      };\n\n      const signature = await library\n        .getSigner(account)\n        ._signTypedData(EPNS_DOMAIN, type, message);\n      txToast = toaster.dark(\n        <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\n        {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        }\n      );\n\n      postReq(\"/channels/subscribe_offchain\", {\n        signature,\n        message,\n        op: \"write\",\n        chainId,\n        contractAddress: epnsCommReadProvider.address,\n      }).then((res) => {\n        setSubscribed(true);\n        setMemberCount(memberCount + 1);\n        toaster.update(txToast, {\n          render: \"Successfully opted into channel !\",\n          type: toaster.TYPE.SUCCESS,\n          autoClose: 5000,\n        });\n        ChannelsDataStore.instance.optInCache(channelObject.addr, account);\n        setTxInProgress(false);\n      });\n    } catch (err) {\n      toaster.update(txToast, {\n        render: \"There was an error opting into channel (\" + err.message + \")\",\n        type: toaster.TYPE.ERROR,\n        autoClose: 5000,\n      });\n      console.log(err);\n    } finally {\n      setTxInProgress(false);\n    }\n  };\n\n  const copyToClipboard = (url) => {\n    // fallback for non navigator browser support\n    if (navigator && navigator.clipboard) {\n      navigator.clipboard.writeText(url);\n    } else {\n      const el = document.createElement(\"textarea\");\n      el.value = url;\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(el);\n    }\n  };\n\n  const unsubscribeAction = async () => {\n    let txToast;\n    try {\n      const type = {\n        Unsubscribe: [\n          { name: \"channel\", type: \"address\" },\n          { name: \"unsubscriber\", type: \"address\" },\n          { name: \"action\", type: \"string\" },\n        ],\n      };\n      const message = {\n        channel: channelObject.addr,\n        unsubscriber: account,\n        action: \"Unsubscribe\",\n      };\n      const signature = await library\n        .getSigner(account)\n        ._signTypedData(EPNS_DOMAIN, type, message);\n\n      txToast = toaster.dark(\n        <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\n        {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        }\n      );\n\n      postReq(\"/channels/unsubscribe_offchain\", {\n        signature,\n        message,\n        op: \"write\",\n        chainId,\n        contractAddress: epnsCommReadProvider.address,\n      })\n        .then((res) => {\n          setSubscribed(false);\n          setMemberCount(memberCount - 1);\n          ChannelsDataStore.instance.optOutCache(channelObject.addr, account);\n          toaster.update(txToast, {\n            render: \"Successfully opted out of channel !\",\n            type: toaster.TYPE.SUCCESS,\n            autoClose: 5000,\n          });\n          console.log(res);\n        })\n        .catch((err) => {\n          toaster.update(txToast, {\n            render:\n              \"There was an error opting into channel (\" + err.message + \")\",\n            type: toaster.TYPE.ERROR,\n            autoClose: 5000,\n          });\n          console.log(err);\n        })\n        .finally(() => {\n          setTxInProgress(false);\n        });\n    } finally {\n      setTxInProgress(false);\n    }\n  };\n\n  if (isBlocked) return <></>;\n  if (isChannelBlacklisted) return <></>;\n\n  // render\n  return (\n    <Container key={channelObject.addr}>\n      <ChannelLogo>\n        <ChannelLogoOuter>\n          <ChannelLogoInner>\n            {loading ? (\n              <Skeleton color=\"#eee\" height=\"100%\" />\n            ) : (\n              <ChannelLogoImg src={`${channelJson.icon}`} />\n            )}\n          </ChannelLogoInner>\n        </ChannelLogoOuter>\n      </ChannelLogo>\n\n      <ChannelInfo>\n        <ChannelTitle>\n          {loading ? (\n            <Skeleton color=\"#eee\" width=\"50%\" height={24} />\n          ) : (\n            <ChannelTitleLink\n              href={channelJson.url}\n              target=\"_blank\"\n              rel=\"nofollow\"\n            >\n              {channelJson.name}\n              {isVerified && (\n                <Subscribers style={{ display: \"inline\", marginLeft: \"8px\" }}>\n                  <GoVerified size={18} color=\"#35c4f3\" />\n                </Subscribers>\n              )}\n            </ChannelTitleLink>\n          )}\n        </ChannelTitle>\n\n        <ChannelDesc>\n          {loading ? (\n            <>\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\n              </SkeletonWrapper>\n\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\n              </SkeletonWrapper>\n\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"40%\" height={5} />\n              </SkeletonWrapper>\n            </>\n          ) : (\n            <ChannelDescLabel>{channelJson.info}</ChannelDescLabel>\n          )}\n        </ChannelDesc>\n\n        <ChannelMeta>\n          {loading ? (\n            <>\n              <SkeletonWrapper atH={10} atW={30} marginBottom=\"0\">\n                <Skeleton />\n              </SkeletonWrapper>\n            </>\n          ) : (\n            <ColumnFlex>\n              <FlexBox style={{ marginBottom: \"10px\" }}>\n                <Subscribers>\n                  <IoMdPeople size={20} color=\"#ccc\" />\n                  <SubscribersCount>{memberCount?.toLocaleString()}</SubscribersCount>\n                </Subscribers>\n\n                <Subscribers style={{ marginLeft: \"10px\" }}>\n                  <FaRegAddressCard size={20} color=\"#ccc\" />\n                  <SubscribersCount\n                    onClick={() => {\n                      copyToClipboard(channelJson.addr);\n                      setCopyText(\"copied\");\n                    }}\n                    onMouseEnter={() => {\n                      setCopyText(\"click to copy\");\n                    }}\n                    onMouseLeave={() => {\n                      setCopyText(channelJson.addr);\n                    }}\n                    style={{ cursor: \"pointer\" }}\n                  >\n                    <AiTwotoneCopy />\n                    {formatAddress(copyText)}\n                  </SubscribersCount>\n                </Subscribers>\n              </FlexBox>\n              {verifierDetails && (\n                <Subscribers>\n                  <VerifiedBy>Verified by:</VerifiedBy>\n                  <VerifierIcon src={verifierDetails.icon} />\n                  <VerifierName>{verifierDetails.name}</VerifierName>\n                </Subscribers>\n              )}\n            </ColumnFlex>\n          )}\n        </ChannelMeta>\n      </ChannelInfo>\n      {!!account && !!library && (\n        <>\n          <LineBreak />\n          <ChannelActions>\n            {loading && (\n              <SkeletonButton>\n                <Skeleton />\n              </SkeletonButton>\n            )}\n            {!loading && isPushAdmin && (\n              <SubscribeButton onClick={blockChannel} disabled={bLoading}>\n                {bLoading && (\n                  <ActionLoader>\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n                  </ActionLoader>\n                )}\n                <ActionTitle hideit={bLoading}>Block channel</ActionTitle>\n              </SubscribeButton>\n            )}\n            {!loading && (isPushAdmin || canVerify) && !isVerified && (\n              <SubscribeButton onClick={verifyChannel} disabled={vLoading}>\n                {vLoading && (\n                  <ActionLoader>\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n                  </ActionLoader>\n                )}\n                <ActionTitle hideit={vLoading}>Verify Channel</ActionTitle>\n              </SubscribeButton>\n            )}\n            {!loading && (isPushAdmin || canUnverify) && isVerified && (\n              <UnsubscribeButton onClick={unverifyChannel} disabled={vLoading}>\n                {vLoading && (\n                  <ActionLoader>\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n                  </ActionLoader>\n                )}\n                <ActionTitle hideit={vLoading}>Unverify Channel</ActionTitle>\n              </UnsubscribeButton>\n            )}\n            {!loading && !subscribed && (\n              <SubscribeButton onClick={subscribe} disabled={txInProgress}>\n                {txInProgress && (\n                  <ActionLoader>\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n                  </ActionLoader>\n                )}\n                <ActionTitle hideit={txInProgress}>Opt-In</ActionTitle>\n              </SubscribeButton>\n            )}\n            {!loading && subscribed && (\n              <>\n                {isOwner && <OwnerButton disabled>Owner</OwnerButton>}\n                {!isOwner && (\n                  <UnsubscribeButton\n                    onClick={unsubscribeAction}\n                    disabled={txInProgress}\n                  >\n                    {txInProgress && (\n                      <ActionLoader>\n                        <Loader\n                          type=\"Oval\"\n                          color=\"#FFF\"\n                          height={16}\n                          width={16}\n                        />\n                      </ActionLoader>\n                    )}\n                    <ActionTitle hideit={txInProgress}>Opt-Out</ActionTitle>\n                  </UnsubscribeButton>\n                )}\n              </>\n            )}\n          </ChannelActions>\n        </>\n      )}\n      {toast && (\n        <NotificationToast notification={toast} clearToast={clearToast} />\n      )}\n    </Container>\n  );\n}\n\nconst FlexBox = styled.div`\n  display: flex;\n`;\n\nconst ColumnFlex = styled(FlexBox)`\n  flex-direction: column;\n`;\n// css styles\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-wrap: wrap;\n\n  background: #fff;\n  border-radius: 10px;\n  border: 1px solid rgb(237, 237, 237);\n\n  margin: 15px 0px;\n  justify-content: center;\n  padding: 20px 10px;\n`;\n\nconst SkeletonWrapper = styled.div`\n  overflow: hidden;\n  width: ${(props) => props.atW + \"%\" || \"100%\"};\n  height: ${(props) => props.atH}px;\n  border-radius: ${(props) => props.borderRadius || 10}px;\n  margin-bottom: ${(props) => props.marginBottom || 5}px;\n  margin-right: ${(props) => props.marginRight || 0}px;\n`;\n\nconst ChannelLogo = styled.div`\n  max-width: 100px;\n  min-width: 32px;\n  flex: 1;\n  margin: 5px;\n  padding: 10px;\n  border: 2px solid #fafafa;\n  overflow: hidden;\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-self: flex-start;\n`;\n\nconst ChannelLogoOuter = styled.div`\n  padding-top: 100%;\n  position: relative;\n`;\n\nconst ChannelLogoInner = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  border-radius: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ChannelLogoImg = styled.img`\n  object-fit: contain;\n  width: 100%;\n  border-radius: 20px;\n  overflow: hidden;\n`;\n\nconst ChannelInfo = styled.div`\n  flex: 1;\n  margin: 5px 10px;\n  min-width: 120px;\n  flex-grow: 4;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst ChannelTitle = styled.div`\n  margin-bottom: 5px;\n`;\n\nconst ChannelTitleLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`;\n\nconst VerifiedBy = styled.span`\n  color: #ec008c;\n  font-size: 16px;\n  line-height: 20px;\n  letter-spacing: 0.05em;\n  font-weight: 600;\n  display: inline-block;\n`;\n\nconst VerifierIcon = styled.img`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  margin-left: 6px;\n  margin-right: 4px;\n`;\nconst VerifierName = styled.span`\n  font-weight: 400;\n  color: black;\n  font-size: 16px;\n  letter-spacing: 0em;\n`;\n\nconst ChannelDesc = styled.div`\n  flex: 1;\n  display: flex;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.75);\n  font-weight: 400;\n  flex-direction: column;\n  margin-bottom: 30px\n`;\n\nconst ChannelDescLabel = styled.label`\n  flex: 1;\n`;\n\nconst ChannelMeta = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  font-size: 13px;\n`;\n\nconst ChannelMetaBox = styled.label`\n  margin: 0px 5px;\n  color: #fff;\n  font-weight: 600;\n  padding: 5px 10px;\n  display: flex;\n  border-radius: 10px;\n  font-size: 11px;\n  gap: 3px;\n`;\n\nconst Subscribers = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst SubscribersCount = styled(ChannelMetaBox)`\n  background: #35c4f3;\n  transition: 300ms;\n`;\n\nconst Pool = styled.div`\n  margin: 0px 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst PoolShare = styled(ChannelMetaBox)`\n  background: #674c9f;\n`;\n\nconst LineBreak = styled.div`\n  display: none;\n  flex-basis: 100%;\n  height: 0;\n\n  @media ${Device.tablet} {\n    display: block;\n  }\n`;\n\nconst ChannelActions = styled.div`\n  margin: 5px;\n  flex-grow: 1;\n  // max-width: 250px;\n  display: flex;\n  justify-content: flex-end;\n  // justify-content: center;\n  align-items: center;\n`;\n\nconst ChannelActionButton = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n  ${(props) =>\n    props.disabled &&\n    css`\n      &:hover {\n        opacity: 1;\n        cursor: default;\n        pointer: default;\n      }\n      &:active {\n        opacity: 1;\n        cursor: default;\n        pointer: default;\n      }\n    `}\n`;\n\nconst ActionTitle = styled.span`\n  ${(props) =>\n    props.hideit &&\n    css`\n      visibility: hidden;\n    `};\n`;\n\nconst ActionLoader = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SkeletonButton = styled.div`\n  border: 0;\n  outline: 0;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 10px;\n  border-radius: 5px;\n  flex: 1;\n`;\n\nconst SubscribeButton = styled(ChannelActionButton)`\n  background: #e20880;\n  min-width: 80px;\n`;\n\nconst UnsubscribeButton = styled(ChannelActionButton)`\n  background: #674c9f;\n  min-width: 80px;\n`;\n\nconst OwnerButton = styled(ChannelActionButton)`\n  background: #35c5f3;\n`;\n\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`;\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`;\n\n// Export Default\nexport default ViewChannelItem;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content, Item, ItemH, Span, Anchor} from 'components/SharedStyling';\n\nimport { FaGasPump } from 'react-icons/fa';\n\n// Faucet URLs\nfunction Faucets() {\n  // render\n  return (\n    <Section margin=\"5px 0px 0px 0px\">\n      <Content>\n        <ItemH\n          self=\"flex-end\"\n          bg=\"#fff\"\n          radius=\"8px\"\n          padding=\"30px 10px 10px 10px\"\n          border=\"1px solid #ededed\"\n          overflow=\"hidden\"\n          align=\"stretch\"\n        >\n          <Span\n            pos=\"absolute\"\n            top=\"10px\"\n            right=\"0px\"\n            padding=\"5px 10px\"\n            bg=\"#e20880\"\n            color=\"#fff\"\n            size=\"12px\"\n            weight=\"600\"\n          >\n            Get Free Kovan Ether\n          </Span>\n\n          <Item margin=\"5px\">\n            <Anchor\n              direction=\"column\"\n              href=\"https://faucet.metamask.io/\"\n              target=\"_blank\"\n              rel=\"nofollow\"\n            >\n              <FaGasPump size={30} color=\"#674c9f\"/>\n              <Span\n                bg=\"#000\"\n                color=\"#fff\"\n                size=\"10px\"\n                weight=\"600\"\n                spacing=\"0.1em\"\n                textAlign=\"center\"\n                padding=\"5px 10px\"\n                margin=\"10px 0px 0px 0px\"\n                textTransform=\"uppercase\"\n                radius=\"8px\"\n              >\n                Metamask Faucet\n              </Span>\n            </Anchor>\n          </Item>\n          <Item margin=\"5px\">\n            <Anchor\n              direction=\"column\"\n              href=\"https://gitter.im/kovan-testnet/faucet\"\n              target=\"_blank\"\n              rel=\"nofollow\"\n            >\n              <FaGasPump size={30} color=\"#674c9f\"/>\n              <Span\n                bg=\"#000\"\n                color=\"#fff\"\n                size=\"10px\"\n                weight=\"600\"\n                spacing=\"0.1em\"\n                textAlign=\"center\"\n                padding=\"5px 10px\"\n                margin=\"10px 0px 0px 0px\"\n                textTransform=\"uppercase\"\n                radius=\"8px\"\n              >\n                Faucet Kovan\n              </Span>\n            </Anchor>\n          </Item>\n\n        </ItemH>\n      </Content>\n    </Section>\n  );\n}\n\n// Export Default\nexport default Faucets;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"react-loader-spinner\";\nimport { Waypoint } from \"react-waypoint\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postReq } from \"api\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { envConfig } from \"@project/contracts\";\n\nimport DisplayNotice from \"components/DisplayNotice\";\nimport ViewChannelItem from \"components/ViewChannelItem\";\nimport Faucets from \"components/Faucets\";\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\nimport { setChannelMeta, incrementPage } from \"redux/slices/channelSlice\";\n\nconst CHANNELS_PER_PAGE = 30; //pagination parameter which indicates how many channels to return over one iteration\nconst SEARCH_TRIAL_LIMIT = 5; //ONLY TRY SEARCHING 5 TIMES BEFORE GIVING UP\nconst DEBOUNCE_TIMEOUT = 500; //time in millisecond which we want to wait for then to finish typing\n\n// Create Header\nfunction ViewChannels() {\n  const dispatch = useDispatch();\n  const { account, chainId } = useWeb3React();\n  const { channels, page, ZERO_ADDRESS } = useSelector(\n    (state: any) => state.channels\n  );\n\n  const [loading, setLoading] = React.useState(false);\n  const [moreLoading, setMoreLoading] = React.useState(false);\n  const [search, setSearch] = React.useState(\"\");\n  const [channelToShow, setChannelToShow] = React.useState([]);\n  const [loadingChannel, setLoadingChannel] = React.useState(false);\n  const [trialCount, setTrialCount] = React.useState(0);\n\n  const channelsVisited = page * CHANNELS_PER_PAGE;\n  const isMainnet = chainId == 1;\n\n  // fetch channel data if we are just getting to this pae\n  React.useEffect(() => {\n    setLoading(!channels.length); //if there are no channels initially then, set the loader\n    fetchInitialsChannelMeta();\n  }, [account, chainId]);\n\n  // to update a page\n  const updateCurrentPage = () => {\n    if (loading || moreLoading) return;\n    // fetch more channel information\n    setMoreLoading(true);\n    dispatch(incrementPage());\n    loadMoreChannelMeta(page + 1); //load the meta for the next page\n  };\n\n  // to fetch initial channels and logged in user data\n  const fetchInitialsChannelMeta = async () => {\n    // fetch the meta of the first `CHANNELS_PER_PAGE` channels\n    const channelsMeta = await ChannelsDataStore.instance.getChannelFromApi(\n      channelsVisited,\n      CHANNELS_PER_PAGE\n    );\n    dispatch(incrementPage());\n    if (!channels.length) {\n      dispatch(setChannelMeta(channelsMeta));\n    }\n    setLoading(false);\n  };\n\n  // load more channels when we get to the bottom of the page\n  const loadMoreChannelMeta = async (newPageNumber: any) => {\n    const startingPoint = newPageNumber * CHANNELS_PER_PAGE;\n    const moreChannels = await ChannelsDataStore.instance.getChannelFromApi(\n      startingPoint,\n      CHANNELS_PER_PAGE\n    );\n    dispatch(setChannelMeta([...channels, ...moreChannels]));\n    setMoreLoading(false);\n  };\n\n  // conditionally display the waymore bar which loads more information\n  // load more channels when we are at the bottom of the page\n  const showWayPoint = (index: any) => {\n    return Number(index) === channels.length - 1;\n  };\n\n  // Search Channels Feature\n  React.useEffect(() => {\n    if (!channels.length) return;\n    setChannelToShow(channels);\n  }, [channels]);\n\n  function searchForChannel() {\n    if (loadingChannel) return; //if we are already loading, do nothing\n    if (search) {\n      setLoadingChannel(true); //begin loading here\n      setChannelToShow([]); //maybe remove later\n      postReq(\"/channels/search\", {\n        query: search,\n        op: \"read\",\n      })\n        .then((data) => {\n          setChannelToShow(data.data.channels || []);\n          setLoadingChannel(false);\n        })\n        .catch(() => {\n          // if there's an error search for three times before giving up and displaying the normal channels\n          if (trialCount < SEARCH_TRIAL_LIMIT) {\n            setTrialCount((t) => t + 1);\n            searchForChannel(); //if theres an error, recursively search\n          } else {\n            setChannelToShow(channels);\n            setLoadingChannel(false);\n          }\n        });\n    } else {\n      // if no search item, then set it back to the channels\n      setLoadingChannel(false);\n      setChannelToShow(channels);\n    }\n  }\n\n  React.useEffect(() => {\n    // debounce request\n    // this is done so that we only make a request after the user stops typing\n    const timeout = setTimeout(searchForChannel, DEBOUNCE_TIMEOUT);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [search]);\n\n  return (\n    <>\n      <Container>\n        {!loading && channels.length == 0 ? (\n          <ContainerInfo>\n            <DisplayNotice\n              title=\"That's weird, No Channels in EPNS... world is ending... right?\"\n              theme=\"primary\"\n            />\n          </ContainerInfo>\n        ) : (\n          <Items\n            id=\"scrollstyle-secondary\"\n            style={{ position: \"relative\", padding: \"0 1rem\" }}\n          >\n            {!loading && (\n              <Header style={{ minHeight: \"140px\" }}>\n                {/* if on mainnet then occupy full width*/}\n                <InputWrapper style={{ width: isMainnet ? \"100%\" : \"50%\" }}>\n                  <SearchBar\n                    type=\"text\"\n                    value={search}\n                    onChange={(e: any) => setSearch(e.target.value)}\n                    className=\"input\"\n                    placeholder=\"Search By Name/Address\"\n                  />\n                  <SearchIconImage src=\"/searchicon.svg\" alt=\"\" />\n                </InputWrapper>\n                {!isMainnet && <Faucets />}\n                {/* only display faucets on mainnet */}\n              </Header>\n            )}\n\n            {/* render all channels depending on if we are searching or not */}\n            {(search ? channelToShow : channels).map(\n              (channel: any, index: any) =>\n                channel &&\n                channel.addr !== ZERO_ADDRESS && (\n                  <>\n                    <div key={channel.addr}>\n                      <ViewChannelItem channelObjectProp={channel} />\n                    </div>\n                    {showWayPoint(index) && (\n                      <div style={{ width: \"100%\", height: \"40px\" }}>\n                        <Waypoint onEnter={updateCurrentPage} />\n                      </div>\n                    )}\n                  </>\n                )\n            )}\n            {/* render all channels depending on if we are searching or not */}\n\n            {/* if we are in search mode and there are no channels then display error message */}\n            {search && !channelToShow?.length && !loadingChannel && (\n              <CenteredContainerInfo>\n                <DisplayNotice\n                  title=\"No channels match your query, please search for another name/address\"\n                  theme=\"third\"\n                />\n              </CenteredContainerInfo>\n            )}\n            {/* display loader if pagination is loading next batch of channelTotalList */}\n            {((moreLoading && channels.length) ||\n              loading ||\n              loadingChannel) && (\n              <CenterContainer>\n                <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\n              </CenterContainer>\n            )}\n          </Items>\n        )}\n      </Container>\n    </>\n  );\n}\n\n// css styles\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: -webkit-sticky;\n  position: sticky;\n  top: 0px;\n  z-index: 2;\n  background: #fafafa;\n\n  @media (max-width: 600px) {\n    flex-direction: column;\n  }\n`;\nconst InputWrapper = styled.div`\n  width: 50%;\n  position: relative;\n\n  @media (max-width: 600px) {\n    width: 100%;\n    margin: 2rem 0;\n  }\n`;\n\nconst SearchBar = styled.input`\n  width: 100%;\n  padding-right: 50px;\n  height: 60px;\n  padding-left: 40px;\n\n  background: rgb(255, 255, 255);\n  border: 1px solid rgba(169, 169, 169, 0.5);\n  box-sizing: border-box;\n  border-radius: 10px;\n  transition: 500ms;\n  text-transform: capitalize;\n  font-size: 16px;\n\n  input[type=\"reset\"] {\n    display: none;\n  }\n  &::placeholder {\n    letter-spacing: 0.15em;\n  }\n  &:hover,\n  &:active,\n  &:focus {\n    outline: none;\n  }\n  &:focus {\n    border: 1px solid #ec008c;\n  }\n`;\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n\n  max-height: 92vh;\n`;\n\nconst ContainerInfo = styled.div`\n  padding: 20px;\n`;\n\nconst CenteredContainerInfo = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CenterContainer = styled(ContainerInfo)`\n  width: fit-content;\n  margin: auto;\n`;\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`;\n\nconst SearchIconImage = styled.img`\n  position: absolute;\n  right: 4px;\n  top: 4px;\n`;\n\n// Export Default\nexport default ViewChannels;\n","import React from 'react'\n\nexport const CloseIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.243\" height=\"10.243\" viewBox=\"0 0 16.243 16.243\">\n        <g id=\"Group_4723\" data-name=\"Group 4723\" transform=\"translate(2.121 2.121)\">\n            <g id=\"Group_4716\" data-name=\"Group 4716\" transform=\"translate(0)\">\n            <line id=\"Line_1079\" data-name=\"Line 1079\" x2=\"16.97\" transform=\"translate(0 12) rotate(-45)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"3\"/>\n            <line id=\"Line_1080\" data-name=\"Line 1080\" y2=\"16.97\" transform=\"translate(0 0) rotate(-45)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"3\"/>\n            </g>\n        </g>\n    </svg>\n);\n","import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport Dropdown from \"react-dropdown\";\nimport { FiLink } from \"react-icons/fi\";\nimport Loader from \"react-loader-spinner\";\nimport styled from \"styled-components\";\nimport { BsFillImageFill } from \"react-icons/bs\";\nimport { useSelector } from \"react-redux\";\nimport { postReq } from \"api\";\nimport {\n  Section,\n  Content,\n  Item,\n  ItemH,\n  H2,\n  H3,\n  Span,\n  Button,\n  FormSubmision,\n  Input,\n  TextField,\n} from \"components/SharedStyling\";\n\nimport \"react-dropdown/style.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nimport Switch from \"@material-ui/core/Switch\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport { CloseIcon } from \"assets/icons\";\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\nimport CryptoHelper from \"helpers/CryptoHelper\";\nconst ethers = require(\"ethers\");\n\n// Set Notification Form Type | 0 is reserved for protocol storage\nconst NFTypes = [\n  { value: \"1\", label: \"Broadcast (IPFS Payload)\" },\n  { value: \"2\", label: \"Secret (IPFS Payload)\" },\n  { value: \"3\", label: \"Targetted (IPFS Payload)\" },\n  // { value: \"4\", label: \"Subset (IPFS Payload)\" },\n  // { value: \"5\", label: \"Offchain (Push)\" },\n];\nconst LIMITER_KEYS = [\"Enter\", \",\"];\n\n// Create Header\nfunction SendNotifications() {\n  const { account, library, chainId } = useWeb3React();\n  const { epnsCommWriteProvider, epnsCommReadProvider } = useSelector(\n    (state: any) => state.contracts\n  );\n  const { channelDetails, delegatees } = useSelector(\n    (state: any) => state.admin\n  );\n  const { CHANNNEL_DEACTIVATED_STATE } = useSelector(\n    (state: any) => state.channels\n  );\n\n  const [nfProcessing, setNFProcessing] = React.useState(0);\n  const [channelAddress, setChannelAddress] = React.useState(\"\");\n  const [nfRecipient, setNFRecipient] = React.useState(\"\");\n  const [multipleRecipients, setMultipleRecipients] = React.useState([]);\n  const [tempRecipeint, setTempRecipient] = React.useState(\"\"); // to temporarily hold the address of one recipient who would be entered into the recipeints array above.\n  const [nfType, setNFType] = React.useState(\"\");\n  const [nfSub, setNFSub] = React.useState(\"\");\n  const [nfSubEnabled, setNFSubEnabled] = React.useState(false);\n  const [nfMsg, setNFMsg] = React.useState(\"\");\n  const [nfCTA, setNFCTA] = React.useState(\"\");\n  const [nfCTAEnabled, setNFCTAEnabled] = React.useState(false);\n  const [nfMedia, setNFMedia] = React.useState(\"\");\n  const [nfMediaEnabled, setNFMediaEnabled] = React.useState(false);\n  const [nfInfo, setNFInfo] = React.useState(\"\");\n  const [delegateeOptions, setDelegateeOptions] = React.useState([]);\n\n  const isChannelDeactivated = channelDetails\n    ? channelDetails.channelState === CHANNNEL_DEACTIVATED_STATE\n    : false;\n  const cannotDisplayDelegatees =\n    (delegatees.length === 1 && delegatees[0].address === account) ||\n    !delegatees.length; //do not display delegatees dropdown if you are the only delegatee to yourself or there are no delegatess\n  // construct a list of channel delegators\n  React.useEffect(() => {\n    if (!account) return;\n    if (!delegatees || !delegatees.length) {\n      setChannelAddress(account);\n    } else {\n      setDelegateeOptions(\n        delegatees.map((oneDelegatee: any) => ({\n          value: oneDelegatee.address,\n          label: (\n            <CustomDropdownItem>\n              <img src={oneDelegatee.icon} alt=\"\" />\n              <div>{oneDelegatee.name}</div>\n            </CustomDropdownItem>\n          ),\n        }))\n      );\n      // default the channel address to the first one on the list which should be that of the user if they have a channel\n      setChannelAddress(delegatees[0].address);\n    }\n  }, [delegatees, account]);\n  console.log(delegateeOptions);\n\n  // on change for the subset type notifications input\n  const handleSubsetInputChange = (e: any) => {\n    // if the user enters in a comma or an enter then seperate the addresses\n    if (LIMITER_KEYS.includes(e.key)) {\n      e.preventDefault();\n      // if they enter a limiter key, then add the temp value to the recipeints list\n      // then clear the value of the temp text\n      setMultipleRecipients((oldRecipients) =>\n        // use this combination to remove duplicates\n        Array.from(new Set([...oldRecipients, tempRecipeint]))\n      );\n      setTempRecipient(\"\");\n    }\n  };\n  // when to remove a subscriber\n  const removeRecipient = (recipientAddress: any) => {\n    const filteredRecipients = multipleRecipients.filter(\n      (rec) => rec !== recipientAddress\n    );\n    setMultipleRecipients(filteredRecipients);\n  };\n\n  React.useEffect(() => {\n    const broadcastIds = [\"1\", \"4\"]; //id's of notifications which qualify as broadcast\n    setMultipleRecipients([]); //reset array when type changes/\n    if (broadcastIds.includes(nfType)) {\n      // This is broadcast, nfRecipient will be the same\n      setNFRecipient(account);\n    } else {\n      setNFRecipient(\"\");\n    }\n  }, [nfType]);\n\n  // validate the body being sent, return true if no errors\n  const bodyValidated = (notificationToast) => {\n    let validated = true;\n    // if we are sending for a subset and there\n    if (nfType === \"4\" && !multipleRecipients.length) {\n      toast.update(notificationToast, {\n        render:\n          \"Please enter at least two recipients in order to use subset notifications type\",\n        type: toast.TYPE.ERROR,\n        autoClose: 5000,\n      });\n      validated = false;\n    }\n    return validated;\n  };\n\n  const handleSendMessage = async (e) => {\n    // Check everything in order\n    e.preventDefault();\n\n    // Toastify\n    let notificationToast = toast.dark(\n      <LoaderToast msg=\"Preparing Notification\" color=\"#fff\" />,\n      {\n        position: \"bottom-right\",\n        autoClose: false,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      }\n    );\n\n    // do some validation\n    if (!bodyValidated(notificationToast)) return;\n\n    // Set to processing\n    setNFProcessing(1);\n\n    // Form signer and contract connection\n    const communicatorContract = epnsCommWriteProvider;\n    // define the epns comms contracts\n\n    // For payload basic\n    let nsub = nfSub;\n    let nmsg = nfMsg;\n    let secretEncrypted;\n\n    let asub = nfSub;\n    let amsg = nfMsg;\n    let acta = nfCTA;\n    let aimg = nfMedia;\n\n    // Decide type and storage\n    switch (nfType) {\n      // Broadcast Notification\n      case \"1\":\n        break;\n\n      // Targetted Notification\n      case \"3\":\n        break;\n\n      // Secret Notification\n      case \"2\":\n        // Create secret\n        let secret = CryptoHelper.makeid(14);\n\n        // Encrypt payload and change sub and nfMsg in notification\n        nsub = \"You have a secret message!\";\n        nmsg = \"Open the app to see your secret message!\";\n\n        // get public key from EPNSCoreHelper\n        let k = await EPNSCoreHelper.getPublicKey(\n          nfRecipient,\n          epnsCommWriteProvider\n        );\n        if (k == null) {\n          // No public key, can't encrypt\n          setNFInfo(\"Public Key Registration is required for encryption!\");\n          setNFProcessing(2);\n\n          toast.update(notificationToast, {\n            render: \"Unable to encrypt for this user, no public key registered\",\n            type: toast.TYPE.ERROR,\n            autoClose: 5000,\n          });\n\n          return;\n        }\n\n        let publickey = k.toString().substring(2);\n        //console.log(\"This is public Key: \" + publickey);\n\n        secretEncrypted = await CryptoHelper.encryptWithECIES(\n          secret,\n          publickey\n        );\n        asub = CryptoHelper.encryptWithAES(nfSub, secret);\n        amsg = CryptoHelper.encryptWithAES(nfMsg, secret);\n        acta = CryptoHelper.encryptWithAES(nfCTA, secret);\n        aimg = CryptoHelper.encryptWithAES(nfMedia, secret);\n        break;\n\n      // Targetted Notification\n      case \"4\":\n        break;\n\n      // Offchain Notification\n      case \"5\":\n        console.log(nsub, nmsg, nfType, asub, amsg, acta, aimg, \"case 5\");\n\n        break;\n      default:\n        break;\n    }\n\n    // Handle Storage\n    let storagePointer = \"\";\n\n    // IPFS PAYLOAD --> 1, 2, 3\n    if (nfType === \"1\" || nfType === \"2\" || nfType === \"3\" || nfType === \"4\") {\n      // Checks for optional fields\n      if (nfSubEnabled && isEmpty(nfSub)) {\n        setNFInfo(\"Enter Subject or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n\n        return;\n      }\n\n      if (nfMediaEnabled && isEmpty(nfMedia)) {\n        setNFInfo(\"Enter Media URL or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n        return;\n      }\n\n      if (nfCTAEnabled && isEmpty(nfCTA)) {\n        setNFInfo(\"Enter Call to Action Link or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n        return;\n      }\n\n      if (isEmpty(nfMsg)) {\n        setNFInfo(\"Message cannot be empty\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n        return;\n      }\n\n      const jsonPayload = {\n        notification: {\n          title: nsub,\n          body: nmsg,\n        },\n        data: {\n          type: nfType,\n          secret: secretEncrypted,\n          asub: asub,\n          amsg: amsg,\n          acta: acta,\n          aimg: aimg,\n        },\n      };\n\n      // if we are sending a subset type, then include recipients\n      if (nfType === \"4\") {\n        jsonPayload[\"recipients\"] = [...multipleRecipients];\n      }\n\n      const input = JSON.stringify(jsonPayload);\n\n      console.log(\"Uploding to IPFS...\");\n      toast.update(notificationToast, {\n        render: \"Preparing Payload for upload\",\n      });\n\n      const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\n\n      try {\n        storagePointer = await ipfs.add(input);\n      } catch (e) {\n        setNFProcessing(2);\n        setNFInfo(\"IPFS Upload Error\");\n      }\n\n      console.log(\"IPFS cid: %o\", storagePointer);\n    }\n    if (nfType === \"1\" || nfType === \"2\" || nfType === \"3\" || nfType === \"4\") {\n      // Prepare Identity and send notification\n      const identity = nfType + \"+\" + storagePointer;\n      const identityBytes = ethers.utils.toUtf8Bytes(identity);\n\n      const EPNS_DOMAIN = {\n        name: \"EPNS COMM V1\",\n        chainId: chainId,\n        verifyingContract: epnsCommReadProvider.address,\n      };\n\n      const type = {\n        Data: [\n          { name: \"acta\", type: \"string\" },\n          { name: \"aimg\", type: \"string\" },\n          { name: \"amsg\", type: \"string\" },\n          { name: \"asub\", type: \"string\" },\n          { name: \"type\", type: \"string\" },\n          { name: \"secret\", type: \"string\" },\n        ],\n      };\n\n      const payload = {\n        data: {\n          acta: acta,\n          aimg: aimg,\n          amsg: amsg,\n          asub: asub,\n          type: nfType,\n          secret: \"\",\n        },\n\n        notification: {\n          body: amsg,\n          title: asub,\n        },\n      };\n\n      const message = payload.data;\n      console.log(payload, \"payload\");\n      console.log(\"chainId\", chainId);\n      const signature = await library\n        .getSigner(account)\n        ._signTypedData(EPNS_DOMAIN, type, message);\n      console.log(\"case5 signature\", signature);\n      try {\n        postReq(\"/payloads/add_manual_payload\", {\n          signature,\n          op: \"write\",\n          chainId: chainId.toString(),\n          channel: channelAddress,\n          recipient: nfRecipient,\n          deployedContract: epnsCommReadProvider.address,\n          payload: payload,\n          type: nfType,\n        }).then(async (res) => {\n          toast.update(notificationToast, {\n            render: \"Notification Sent\",\n            type: toast.TYPE.INFO,\n            autoClose: 5000,\n          });\n\n          setNFProcessing(2);\n          setNFType(\"\");\n          setNFInfo(\"Offchain Notification Sent\");\n\n          toast.update(notificationToast, {\n            render: \"Offchain Notification Sent\",\n            type: toast.TYPE.SUCCESS,\n            autoClose: 5000,\n          });\n          console.log(res);\n        });\n      } catch (err) {\n        setNFInfo(\"Offchain Notification Failed, please try again\");\n\n        toast.update(notificationToast, {\n          render: \"Offchain Notification Failed: \" + err,\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n        setNFProcessing(0);\n        console.log(err);\n      }\n\n      // var anotherSendTxPromise;\n\n      // anotherSendTxPromise = communicatorContract.sendNotification(\n      //   channelAddress,\n      //   nfRecipient,\n      //   identityBytes\n      // );\n\n      // console.log(\"Sending Transaction... \");\n      // toast.update(notificationToast, {\n      //   render: \"Sending Notification...\",\n      // });\n\n      // anotherSendTxPromise\n      //   .then(async (tx) => {\n      //     console.log(tx);\n      //     console.log(\"Transaction Sent!\");\n\n      //     toast.update(notificationToast, {\n      //       render: \"Notification Sent\",\n      //       type: toast.TYPE.INFO,\n      //       autoClose: 5000,\n      //     });\n\n      //     await tx.wait(1);\n      //     console.log(\"Transaction Mined!\");\n\n      //     setNFProcessing(2);\n      //     setNFType(\"\");\n      //     setNFInfo(\"Notification Sent\");\n\n      //     toast.update(notificationToast, {\n      //       render: \"Transaction Mined / Notification Sent\",\n      //       type: toast.TYPE.SUCCESS,\n      //       autoClose: 5000,\n      //     });\n      //   })\n      //   .catch((err) => {\n      //     console.log(\"!!!Error handleSendMessage() --> %o\", err);\n      //     setNFInfo(\"Transaction Failed, please try again\");\n\n      //     toast.update(notificationToast, {\n      //       render: \"Transacion Failed: \" + err,\n      //       type: toast.TYPE.ERROR,\n      //       autoClose: 5000,\n      //     });\n      //     setNFProcessing(0);\n      //   });\n    }\n    if (nfType === \"5\") {\n      // const jsonPayload = {\n      //   notification: {\n      //     title: nsub,\n      //     body: nmsg,\n      //   },\n      //   data: {\n      //     type: nfType,\n      //     secret: secretEncrypted,\n      //     asub: asub,\n      //     amsg: amsg,\n      //     acta: acta,\n      //     aimg: aimg,\n      //   },\n      // };\n\n      const EPNS_DOMAIN = {\n        name: \"EPNS COMM V1\",\n        chainId: chainId,\n        verifyingContract: epnsCommReadProvider.address,\n      };\n\n      const type = {\n        Data: [\n          { name: \"acta\", type: \"string\" },\n          { name: \"aimg\", type: \"string\" },\n          { name: \"amsg\", type: \"string\" },\n          { name: \"asub\", type: \"string\" },\n          { name: \"type\", type: \"string\" },\n          { name: \"secret\", type: \"string\" },\n        ],\n      };\n\n      const payload = {\n        data: {\n          acta: acta,\n          aimg: aimg,\n          amsg: amsg,\n          asub: asub,\n          type: nfType,\n          secret: \"\",\n        },\n\n        notification: {\n          body: amsg,\n          title: asub,\n        },\n      };\n\n      const message = payload.data;\n      console.log(payload, \"payload\");\n      console.log(\"chainId\", chainId);\n      const signature = await library\n        .getSigner(account)\n        ._signTypedData(EPNS_DOMAIN, type, message);\n      console.log(\"case5 signature\", signature);\n      try {\n        postReq(\"/payloads/add_manual_payload\", {\n          signature,\n          op: \"write\",\n          chainId: chainId.toString(),\n          channel: channelAddress,\n          recipient: nfRecipient,\n          deployedContract: epnsCommReadProvider.address,\n          payload: payload,\n          type: \"3\",\n        }).then(async (res) => {\n          toast.update(notificationToast, {\n            render: \"Notification Sent\",\n            type: toast.TYPE.INFO,\n            autoClose: 5000,\n          });\n\n          setNFProcessing(2);\n          setNFType(\"\");\n          setNFInfo(\"Offchain Notification Sent\");\n\n          toast.update(notificationToast, {\n            render: \"Offchain Notification Sent\",\n            type: toast.TYPE.SUCCESS,\n            autoClose: 5000,\n          });\n          console.log(res);\n        });\n      } catch (err) {\n        setNFInfo(\"Offchain Notification Failed, please try again\");\n\n        toast.update(notificationToast, {\n          render: \"Offchain Notification Failed: \" + err,\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n        setNFProcessing(0);\n        console.log(err);\n      }\n    }\n  };\n\n  const isEmpty = (field: any) => {\n    if (field.trim().length == 0) {\n      return true;\n    }\n\n    return false;\n  };\n\n  // toast customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader type=\"Oval\" color={color} height={30} width={30} />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  );\n\n  return (\n    <>\n      <Section>\n        <Content padding=\"10px 20px 20px\">\n          <Item align=\"flex-start\">\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n              <Span weight=\"200\">Send </Span>\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">\n                Notification\n              </Span>\n            </H2>\n            {!isChannelDeactivated ? (\n              <H3>\n                EPNS supports three types of notifications (for now!).{\" \"}\n                <b>Groups</b>, <b>Secrets</b>, and <b>Targetted</b>\n                 {/* and{\" \"} <b>Subsets</b>. */}\n              </H3>\n            ) : (\n              <H3>This channel has been deactivated, please reactivate it!.</H3>\n            )}\n          </Item>\n        </Content>\n      </Section>\n\n      {!isChannelDeactivated && (\n        <Section>\n          <ModifiedContent>\n            <Item align=\"stretch\">\n              <FormSubmision\n                flex=\"1\"\n                direction=\"column\"\n                margin=\"0px\"\n                justify=\"center\"\n                size=\"1.1rem\"\n                onSubmit={handleSendMessage}\n              >\n                <Item margin=\"0px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                  {!cannotDisplayDelegatees && (\n                    <Item\n                      flex=\"5\"\n                      justify=\"flex-start\"\n                      align=\"stretch\"\n                      minWidth=\"280px\"\n                    >\n                      <DropdownStyledParentWhite>\n                        <DropdownHeader>\n                          SEND NOTIFICATION ON BEHALF OF\n                        </DropdownHeader>\n                        <DropdownStyledWhite\n                          options={delegateeOptions}\n                          onChange={(option: any) => {\n                            setChannelAddress(option.value);\n                          }}\n                          value={delegateeOptions.find(\n                            (d) => d.value == channelAddress\n                          )}\n                        />\n                      </DropdownStyledParentWhite>\n                    </Item>\n                  )}\n\n                  <Input\n                    display=\"none\"\n                    value={nfType}\n                    onChange={(e) => {\n                      setNFType(e.target.value);\n                    }}\n                  />\n\n                  <Item\n                    flex=\"5\"\n                    justify=\"flex-start\"\n                    align=\"stretch\"\n                    minWidth=\"280px\"\n                  >\n                    <DropdownStyledParent>\n                      <DropdownStyled\n                        options={NFTypes}\n                        onChange={(option) => {\n                          setNFType(option.value);\n                          console.log(option);\n                        }}\n                        value={nfType}\n                        placeholder=\"Select Type of Notification to Send\"\n                      />\n                    </DropdownStyledParent>\n                  </Item>\n                  <Input\n                    display=\"none\"\n                    value={nfType}\n                    onChange={(e) => {\n                      setNFType(e.target.value);\n                    }}\n                  />\n\n                  {nfType && (\n                    <ItemH\n                      margin=\"0px 15px 15px 15px\"\n                      bg=\"#f1f1f1\"\n                      flex=\"1\"\n                      self=\"stretch\"\n                      justify=\"space-between\"\n                    >\n                      <ItemH margin=\"15px 10px\" flex=\"inital\">\n                        <Span\n                          margin=\"0px 10px 0px 0px\"\n                          weight=\"400\"\n                          spacing=\"0.1em\"\n                          textTransform=\"uppercase\"\n                          size=\"0.8em\"\n                          bg=\"#e20880\"\n                          color=\"#fff\"\n                          padding=\"5px 15px\"\n                          radius=\"30px\"\n                        >\n                          Enable Subject\n                        </Span>\n                        <Switch\n                          color=\"primary\"\n                          size=\"small\"\n                          checked={nfSubEnabled}\n                          onChange={() => setNFSubEnabled(!nfSubEnabled)}\n                        />\n                      </ItemH>\n\n                      <ItemH margin=\"15px 10px\" flex=\"inital\">\n                        <Span\n                          margin=\"0px 10px 0px 0px\"\n                          weight=\"400\"\n                          spacing=\"0.1em\"\n                          textTransform=\"uppercase\"\n                          size=\"0.8em\"\n                          bg=\"#e20880\"\n                          color=\"#fff\"\n                          padding=\"5px 15px\"\n                          radius=\"30px\"\n                        >\n                          Enable Media\n                        </Span>\n                        <Switch\n                          color=\"primary\"\n                          size=\"small\"\n                          checked={nfMediaEnabled}\n                          onChange={() => setNFMediaEnabled(!nfMediaEnabled)}\n                        />\n                      </ItemH>\n\n                      <ItemH margin=\"15px 10px\" flex=\"inital\">\n                        <Span\n                          margin=\"0px 10px 0px 0px\"\n                          weight=\"400\"\n                          spacing=\"0.1em\"\n                          textTransform=\"uppercase\"\n                          size=\"0.8em\"\n                          bg=\"#e20880\"\n                          color=\"#fff\"\n                          padding=\"5px 15px\"\n                          radius=\"30px\"\n                        >\n                          Enable CTA\n                        </Span>\n                        <Switch\n                          color=\"primary\"\n                          size=\"small\"\n                          checked={nfCTAEnabled}\n                          onChange={() => setNFCTAEnabled(!nfCTAEnabled)}\n                        />\n                      </ItemH>\n                    </ItemH>\n                  )}\n                </Item>\n\n                {(nfType === \"2\" || nfType === \"3\" || nfType === \"5\") && (\n                  <Item\n                    margin=\"15px 20px 15px 20px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"stretch\"\n                  >\n                    <Input\n                      required\n                      placeholder=\"Enter recipient wallet address\"\n                      radius=\"4px\"\n                      padding=\"12px\"\n                      border=\"1px solid #674c9f\"\n                      bg=\"#fff\"\n                      value={nfRecipient}\n                      onChange={(e) => {\n                        setNFRecipient(e.target.value);\n                      }}\n                    />\n                    {nfRecipient.trim().length == 0 && (\n                      <Span\n                        padding=\"4px 10px\"\n                        right=\"0px\"\n                        top=\"0px\"\n                        pos=\"absolute\"\n                        color=\"#fff\"\n                        bg=\"#000\"\n                        size=\"0.7rem\"\n                        z=\"1\"\n                      >\n                        Recipient Wallet\n                      </Span>\n                    )}\n                  </Item>\n                )}\n\n                {nfType === \"4\" && (\n                  <>\n                    <MultiRecipientsContainer>\n                      {multipleRecipients.map((oneRecipient) => (\n                        <span key={oneRecipient}>\n                          {oneRecipient}\n                          <i onClick={() => removeRecipient(oneRecipient)}>\n                            <CloseIcon />\n                          </i>\n                        </span>\n                      ))}\n                    </MultiRecipientsContainer>\n                    <Item\n                      margin=\"15px 20px 15px 20px\"\n                      flex=\"1\"\n                      self=\"stretch\"\n                      align=\"stretch\"\n                    >\n                      <Input\n                        required={multipleRecipients.length === 0}\n                        placeholder=\"Enter recipients wallet addresses seperated by a comma or by pressing the enter key\"\n                        radius=\"4px\"\n                        padding=\"12px\"\n                        border=\"1px solid #674c9f\"\n                        bg=\"#fff\"\n                        value={tempRecipeint}\n                        onKeyPress={handleSubsetInputChange}\n                        onChange={(e) => {\n                          const text = e.target.value;\n                          if (!LIMITER_KEYS.includes(text)) {\n                            setTempRecipient(e.target.value);\n                          }\n                        }}\n                      />\n                      {nfRecipient.trim().length == 0 && (\n                        <Span\n                          padding=\"4px 10px\"\n                          right=\"0px\"\n                          top=\"0px\"\n                          pos=\"absolute\"\n                          color=\"#fff\"\n                          bg=\"#000\"\n                          size=\"0.7rem\"\n                          z=\"1\"\n                        >\n                          Recipient Wallet\n                        </Span>\n                      )}\n                    </Item>\n                  </>\n                )}\n\n                {nfType && nfSubEnabled && (\n                  <Item\n                    margin=\"15px 20px 15px 20px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"stretch\"\n                  >\n                    <Input\n                      required\n                      placeholder=\"Subject of Notification\"\n                      padding=\"12px\"\n                      borderBottom=\"1px solid #000\"\n                      weight=\"400\"\n                      size=\"1.2em\"\n                      bg=\"#fff\"\n                      value={nfSub}\n                      onChange={(e) => {\n                        setNFSub(e.target.value);\n                      }}\n                    />\n                    {nfSub.trim().length == 0 && (\n                      <Span\n                        padding=\"4px 10px\"\n                        right=\"0px\"\n                        top=\"0px\"\n                        pos=\"absolute\"\n                        color=\"#fff\"\n                        bg=\"#000\"\n                        size=\"0.7rem\"\n                        z=\"1\"\n                      >\n                        Subject\n                      </Span>\n                    )}\n                  </Item>\n                )}\n\n                {nfType && (\n                  <Item\n                    margin=\"15px 20px 15px 20px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"stretch\"\n                  >\n                    <TextField\n                      required\n                      placeholder=\"Notification Message\"\n                      rows=\"6\"\n                      radius=\"4px\"\n                      padding=\"12px\"\n                      weight=\"400\"\n                      border=\"1px solid #000\"\n                      bg=\"#fff\"\n                      value={nfMsg}\n                      onChange={(e) => {\n                        setNFMsg(e.target.value);\n                      }}\n                      autocomplete=\"off\"\n                    />\n                  </Item>\n                )}\n\n                {nfType && nfMediaEnabled && (\n                  <ItemH\n                    padding=\"15px 20px 15px 20px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"center\"\n                  >\n                    <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                      <BsFillImageFill size={24} color=\"#000\" />\n                    </Item>\n                    <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                      <Input\n                        required\n                        placeholder=\"Media URL for Notification\"\n                        padding=\"12px\"\n                        border=\"1px solid #000\"\n                        radius=\"4px\"\n                        weight=\"400\"\n                        bg=\"#f1f1f1\"\n                        value={nfMedia}\n                        onChange={(e) => {\n                          setNFMedia(e.target.value);\n                        }}\n                      />\n                      {nfMedia.trim().length == 0 && (\n                        <Span\n                          padding=\"4px 10px\"\n                          right=\"0px\"\n                          top=\"0px\"\n                          pos=\"absolute\"\n                          color=\"#fff\"\n                          bg=\"#000\"\n                          size=\"0.7rem\"\n                          z=\"1\"\n                        >\n                          Media URL\n                        </Span>\n                      )}\n                    </Item>\n                  </ItemH>\n                )}\n\n                {nfType && nfCTAEnabled && (\n                  <ItemH\n                    margin=\"15px 20px 15px 20px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"center\"\n                  >\n                    <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                      <FiLink size={24} color=\"#000\" />\n                    </Item>\n                    <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                      <Input\n                        required\n                        placeholder=\"Call to Action Link\"\n                        padding=\"12px\"\n                        border=\"1px solid #000\"\n                        radius=\"4px\"\n                        weight=\"400\"\n                        bg=\"#f1f1f1\"\n                        value={nfCTA}\n                        onChange={(e) => {\n                          setNFCTA(e.target.value);\n                        }}\n                      />\n                      {nfCTA.trim().length == 0 && (\n                        <Span\n                          padding=\"4px 10px\"\n                          right=\"0px\"\n                          top=\"0px\"\n                          pos=\"absolute\"\n                          color=\"#fff\"\n                          bg=\"#000\"\n                          size=\"0.7rem\"\n                          z=\"1\"\n                        >\n                          Call to Action URL\n                        </Span>\n                      )}\n                    </Item>\n                  </ItemH>\n                )}\n\n                {nfInfo && nfProcessing != 1 && (\n                  <Item\n                    color=\"#fff\"\n                    bg=\"#e1087f\"\n                    padding=\"10px 15px\"\n                    margin=\"15px 0px\"\n                  >\n                    <Span\n                      color=\"#fff\"\n                      textTransform=\"uppercase\"\n                      spacing=\"0.1em\"\n                      weight=\"400\"\n                      size=\"1em\"\n                    >\n                      {nfInfo}\n                    </Span>\n                  </Item>\n                )}\n\n                {nfType && (\n                  <Item\n                    margin=\"15px 0px 0px 0px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"stretch\"\n                  >\n                    <Button\n                      bg=\"#e20880\"\n                      color=\"#fff\"\n                      flex=\"1\"\n                      radius=\"0px\"\n                      padding=\"20px 10px\"\n                      disabled={nfProcessing == 1 ? true : false}\n                    >\n                      {nfProcessing == 1 && (\n                        <Loader\n                          type=\"Oval\"\n                          color=\"#fff\"\n                          height={24}\n                          width={24}\n                        />\n                      )}\n                      {nfProcessing != 1 && (\n                        <Input\n                          cursor=\"hand\"\n                          textTransform=\"uppercase\"\n                          color=\"#fff\"\n                          weight=\"400\"\n                          size=\"0.8em\"\n                          spacing=\"0.2em\"\n                          type=\"submit\"\n                          value=\"Send Notification\"\n                        />\n                      )}\n                    </Button>\n                  </Item>\n                )}\n              </FormSubmision>\n            </Item>\n          </ModifiedContent>\n        </Section>\n      )}\n    </>\n  );\n}\n\n// css styles\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`;\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`;\n\nconst DropdownStyledParent = styled.div`\n  .is-open {\n    margin-bottom: 130px;\n  }\n`;\n\nconst MultiRecipientsContainer = styled.div`\n  width: 100%;\n  padding: 0px 20px;\n  padding-top: 10px;\n  box-sizing: border-box;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 7px 15px;\n\n  span {\n    color: white;\n    background: #e20880;\n    padding: 6px 10px;\n    border-radius: 5px;\n\n    i {\n      cursor: pointer;\n      margin-left: 25px;\n    }\n  }\n`;\n\nconst ModifiedContent = styled(Content)`\n  padding-top: 20px;\n  font-weight: 400;\n`;\n\nconst DropdownHeader = styled.div`\n  color: black;\n  padding: 10px;\n  letter-spacing: 3px;\n  font-size: 14px;\n`;\n\nconst DropdownStyled = styled(Dropdown)`\n  .Dropdown-control {\n    background-color: #000;\n    color: #fff;\n    padding: 12px 52px 12px 10px;\n    border: 1px solid #000;\n    border-radius: 4px;\n  }\n\n  .Dropdown-placeholder {\n    text-transform: uppercase;\n    font-weight: 400;\n    letter-spacing: 0.2em;\n    font-size: 0.8em;\n  }\n\n  .Dropdown-arrow {\n    top: 18px;\n    bottom: 0;\n    border-color: #fff transparent transparent;\n  }\n\n  .Dropdown-menu {\n    border: 1px solid #000;\n    box-shadow: none;\n    background-color: #000;\n    border-radius: 0px;\n    margin-top: -2px;\n    border-bottom-right-radius: 4px;\n    border-bottom-left-radius: 4px;\n  }\n\n  .Dropdown-option {\n    background-color: rgb(35 35 35);\n    color: #ffffff99;\n\n    text-transform: uppercase;\n    letter-spacing: 0.2em;\n    font-size: 0.7em;\n    padding: 15px 20px;\n  }\n\n  .Dropdown-option:hover {\n    background-color: #000000;\n    color: #fff;\n  }\n`;\n\nconst DropdownStyledWhite = styled(DropdownStyled)`\n  .Dropdown-control {\n    color: #000;\n    background: #fafafa;\n    border: 0px;\n    padding: 15px 52px 15px 10px;\n  }\n  .Dropdown-arrow {\n    border-color: #000 transparent transparent;\n    top: 30px;\n  }\n  .Dropdown-menu {\n    border: 0px;\n    background-color: #fafafa;\n  }\n  .Dropdown-option {\n    background-color: #fafafa;\n    color: black;\n    transition: 300ms;\n  }\n  .Dropdown-option:hover {\n    background-color: #e7e6e6;\n  }\n  .Dropdown-option.is-selected {\n    background-color: #f1efef;\n  }\n`;\n\nconst DropdownStyledParentWhite = styled(DropdownStyledParent)`\n  margin-bottom: 20px;\n  border: 1px solid rgba(169, 169, 169, 0.5);\n`;\n\nconst CustomDropdownItem = styled.div`\n  display: flex;\n  align-items: center;\n  img {\n    height: 30px;\n    width: 30px;\n    border-radius: 50%;\n    margin-right: 10px;\n  }\n  div {\n    color: black;\n    font-size: 16px;\n    letter-spacing: 2px;\n  }\n`;\n\n// Export Default\nexport default SendNotifications;\n","import React, {useRef, useState} from 'react';\nimport { useClick, useClickAway } from 'react-use';\nimport styled from 'styled-components';\nimport { useWeb3React } from '@web3-react/core';\nimport { addresses, abis } from \"@project/contracts\";\nimport Loader from 'react-loader-spinner';\n\nimport {Item, H2, H3, Span, Button, Input} from 'components/SharedStyling';\n\nconst ethers = require('ethers');\n\n\nexport default function AddDelegateModal({\n    onClose,onSuccess, addDelegate\n}) {\n\n    const modalRef = useRef(null);\n    const [mainAdress, setMainAddress] = useState('');\n    const [loading, setLoading] = useState('');\n\n    // Form signer and contract connection\n    useClickAway(modalRef, onClose);\n\n    const addDelegateFunction = () => {\n        setLoading('loading')\n        addDelegate(mainAdress)\n        .then(async (tx) => {\n            console.log(tx);\n            setLoading(\"Transaction Sent!\");\n\n            setTimeout(() => {\n                onSuccess();\n                onClose();\n            }, 2000);\n\n        })\n        .catch((err) => {\n            console.log({\n                err\n            })\n            setLoading('There was an error');\n            setTimeout(() => {\n                setLoading('')\n            }, 2000)\n        })\n    };\n    \n\n    return (\n        <Overlay>\n            <AliasModal ref={modalRef}>\n                <Item align=\"flex-start\">\n                    <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n                    <Span weight=\"200\">Add </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Delegate</Span>\n                    </H2>\n                    <H3>Add an account who can send notifications on your behalf.</H3>\n                </Item>\n                <Item align=\"flex-start\">\n                    <CustomInput\n                        required\n                        placeholder=\"Enter the ethereum address\"\n                        radius=\"4px\"\n                        padding=\"12px\"\n                        border=\"1px solid #674c9f\"\n                        bg=\"#fff\"\n                        value={mainAdress}\n                        onChange={(e) => {setMainAddress(e.target.value)}}\n                    />\n                </Item>\n                <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                    <Button\n                        bg='#e20880'\n                        color='#fff'\n                        flex=\"1\"\n                        radius=\"0px\"\n                        padding=\"20px 10px\"\n                        disabled={mainAdress.length !== 42}\n                        onClick={addDelegateFunction}\n                    >\n                        { loading && <Loader\n                            type=\"Oval\"\n                            color=\"#FFF\"\n                            height={16}\n                            width={16}\n                            />\n                        }\n                        <StyledInput\n                            cursor=\"hand\"\n                            textTransform=\"uppercase\"\n                            color=\"#fff\" weight=\"400\"\n                            size=\"0.8em\" spacing=\"0.2em\"\n                            value={loading ? loading : \"Add Delegate\"}\n                        />\n                    </Button>\n                </Item>\n            </AliasModal>\n        </Overlay>\n    )\n}\n\nconst StyledInput = styled(Input)`\n    width: 100%;\n    text-align: center;\n    caret-color: transparent;\n`\n\nconst CustomInput = styled(Input)`\n    box-sizing: border-box;\n    width: 100%;\n    margin: 20px 0px;\n`;\n\nconst Overlay = styled.div`\n    top: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0,0,0,0.85);\n    height: 100%;\n    width: 100%;\n    z-index: 1000;\n    position: fixed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    overflow-y: scroll;\n`;\n\nconst AliasModal = styled.div`\n    padding: 20px 30px;\n    background: white;\n`;","import React, {useRef, useState} from 'react';\nimport { useClickAway } from 'react-use';\nimport styled from 'styled-components';\nimport Loader from 'react-loader-spinner';\n\nimport {Item, H2, H3, Span, Button, Input} from 'components/SharedStyling';\n\n\n\nexport default function RemoveDelegateModal({\n    onClose,onSuccess, removeDelegate\n}) {\n\n    const modalRef = useRef(null);\n    const [mainAdress, setMainAddress] = useState('');\n    const [loading, setLoading] = useState('');\n\n    // Form signer and contract connection\n    useClickAway(modalRef, onClose);\n\n    const addDelegateFunction = () => {\n        setLoading('loading')\n        removeDelegate(mainAdress)\n        .then(async (tx) => {\n            console.log(tx);\n            setLoading(\"Transaction Sent!\");\n\n            setTimeout(() => {\n                onSuccess();\n                onClose();\n            }, 2000);\n\n        })\n        .catch((err) => {\n            console.log({\n                err\n            })\n            setLoading('There was an error');\n            setTimeout(() => {\n                setLoading('')\n            }, 2000)\n        })\n    };\n    \n\n    return (\n        <Overlay>\n            <AliasModal ref={modalRef}>\n                <Item align=\"flex-start\">\n                    <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n                    <Span weight=\"200\">Remove </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Delegate</Span>\n                    </H2>\n                    <H3>Remove an account who can send notifications on your behalf.</H3>\n                </Item>\n                <Item align=\"flex-start\">\n                    <CustomInput\n                        required\n                        placeholder=\"Enter the ethereum address\"\n                        radius=\"4px\"\n                        padding=\"12px\"\n                        border=\"1px solid #674c9f\"\n                        bg=\"#fff\"\n                        value={mainAdress}\n                        onChange={(e) => {setMainAddress(e.target.value)}}\n                    />\n                </Item>\n                <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                    <Button\n                        bg='#e20880'\n                        color='#fff'\n                        flex=\"1\"\n                        radius=\"0px\"\n                        padding=\"20px 10px\"\n                        disabled={mainAdress.length !== 42}\n                        onClick={addDelegateFunction}\n                    >\n                        { loading && <Loader\n                            type=\"Oval\"\n                            color=\"#FFF\"\n                            height={16}\n                            width={16}\n                            />\n                        }\n                        <StyledInput\n                            cursor=\"hand\"\n                            textTransform=\"uppercase\"\n                            color=\"#fff\" weight=\"400\"\n                            size=\"0.8em\" spacing=\"0.2em\"\n                            value={loading ? loading : \"Remove Delegate\"}\n                        />\n                    </Button>\n                </Item>\n            </AliasModal>\n        </Overlay>\n    )\n}\n\nconst StyledInput = styled(Input)`\n    width: 100%;\n    text-align: center;\n    caret-color: transparent;\n`\n\nconst CustomInput = styled(Input)`\n    box-sizing: border-box;\n    width: 100%;\n    margin: 20px 0px;\n`;\n\nconst Overlay = styled.div`\n    top: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0,0,0,0.85);\n    height: 100%;\n    width: 100%;\n    z-index: 1000;\n    position: fixed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    overflow-y: scroll;\n`;\n\nconst AliasModal = styled.div`\n    padding: 20px 30px;\n    background: white;\n`;","import React, { useRef, useState } from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport styled from \"styled-components\";\nimport Loader from \"react-loader-spinner\";\nimport { useClickAway } from \"react-use\";\nimport {\n  Section,\n  Content,\n  Item,\n  H3,\n  Span,\n  Button,\n} from \"components/SharedStyling\";\n\nconst MIN_STAKE_FEES = 50;\n\nexport default function ActivateChannelModal({\n  activateChannel,\n  loading,\n  setChannelStakeFees,\n  channelStakeFees,\n  onClose,\n}) {\n  const popupRef = React.useRef(null);\n  useClickAway(popupRef, onClose); //close the popoup when we click away\n  return (\n    <PopupOverlay>\n      <PopupSlider ref={popupRef}>\n        <Section>\n          <Content padding=\"50px 0px 0px 0px\">\n            <Item align=\"flex-start\" margin=\"0px 20px\">\n              <H3 color=\"#e20880\">Set your staking fees in DAI</H3>\n            </Item>\n\n            <Item\n              margin=\"-10px 20px 20px 20px\"\n              padding=\"20px 20px 10px 20px\"\n              bg=\"#f1f1f1\"\n            >\n              <Slider\n                defaultValue={MIN_STAKE_FEES}\n                onChangeCommitted={(_, value) =>\n                  setChannelStakeFees(Number(value))\n                }\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                step={MIN_STAKE_FEES}\n                marks\n                min={MIN_STAKE_FEES}\n                max={25000}\n              />\n              <Span\n                weight=\"400\"\n                size=\"1.0em\"\n                textTransform=\"uppercase\"\n                spacing=\"0.2em\"\n              >\n                Amount Staked: {channelStakeFees} DAI\n              </Span>\n            </Item>\n\n            <Item self=\"stretch\" align=\"stretch\" margin=\"20px 0px 0px 0px\">\n              <Button\n                bg=\"#e20880\"\n                color=\"#fff\"\n                flex=\"1\"\n                radius=\"0px\"\n                padding=\"20px 10px\"\n                onClick={activateChannel}\n              >\n                {loading ? (\n                  <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n                ) : (\n                  <Span\n                    color=\"#fff\"\n                    weight=\"400\"\n                    textTransform=\"uppercase\"\n                    spacing=\"0.1em\"\n                  >\n                    Reactivate Channel\n                  </Span>\n                )}\n              </Button>\n            </Item>\n          </Content>\n        </Section>\n      </PopupSlider>\n    </PopupOverlay>\n  );\n}\n\nconst PopupOverlay = styled.div`\n  background: rgba(0, 0, 0, 0.5);\n  height: 100vh;\n  width: 100vw;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst PopupSlider = styled.div`\n  height: 200px;\n  width: 70vw;\n  background: white;\n`;\n","/**\n * This file helps us to maintain the state of the logged in user user(if they have an account)\n * as well as the privilidges the logged in user has\n */\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    channelDetails: null,\n    canVerify: false,\n    delegatees: []\n};\n\nexport const contractSlice = createSlice({\n    name: \"admin\",\n    initialState,\n    reducers: {\n        setUserChannelDetails: (state, action) => {\n            state.channelDetails = action.payload;\n        },\n        setCanVerify: (state, action) => {\n            state.canVerify = action.payload;\n        },\n        setDelegatees: (state, action) => {\n            state.delegatees = action.payload;\n        }\n    }\n});\n\nexport const {\n    setUserChannelDetails,\n    setCanVerify,\n    setDelegatees\n} = contractSlice.actions;\n\nexport default contractSlice.reducer;","import React from \"react\";\nimport { Section, Content, Item } from \"components/SharedStyling\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled, { css } from \"styled-components\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { toast as toaster } from \"react-toastify\";\nimport { addresses, abis } from \"@project/contracts\";\nimport { postReq } from \"api\";\n\nimport { ALLOWED_CORE_NETWORK } from \"pages/Home\";\nimport AddDelegateModal from \"./AddDelegateModal\";\nimport RemoveDelegateModal from \"./RemoveDelegateModal\";\nimport ActivateChannelModal from \"./ActivateChannelModal\";\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\nimport { setUserChannelDetails } from \"redux/slices/adminSlice\";\n\nimport \"react-dropdown/style.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nimport Loader from \"react-loader-spinner\";\nconst ethers = require(\"ethers\");\n\nconst MIN_STAKE_FEES = 50;\n\n// Create Header\nfunction ChannelSettings() {\n  const dispatch = useDispatch();\n  const { account, library, chainId } = useWeb3React();\n  const { epnsWriteProvider, epnsCommWriteProvider } = useSelector(\n    (state: any) => state.contracts\n  );\n  const { channelDetails } = useSelector((state: any) => state.admin);\n  const {\n    CHANNNEL_DEACTIVATED_STATE,\n    CHANNEL_BLOCKED_STATE,\n    CHANNEL_ACTIVE_STATE,\n  } = useSelector((state: any) => state.channels);\n\n  const { channelState } = channelDetails;\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\n\n  const [loading, setLoading] = React.useState(false);\n  const [\n    showActivateChannelPopup,\n    setShowActivateChannelPopup,\n  ] = React.useState(false);\n  const [channelStakeFees, setChannelStakeFees] = React.useState(\n    MIN_STAKE_FEES\n  );\n  const [poolContrib, setPoolContrib] = React.useState(0);\n  const [addDelegateLoading, setAddDelegateLoading] = React.useState(false);\n  const [addModalOpen, setAddModalOpen] = React.useState(false);\n  const [removeDelegateLoading, setRemoveDelegateLoading] = React.useState(\n    false\n  );\n  const [removeModalOpen, setRemoveModalOpen] = React.useState(false);\n\n  // toaster customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader type=\"Oval\" color={color} height={30} width={30} />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  );\n\n  // Toastify\n  let notificationToast = () =>\n    toaster.dark(<LoaderToast msg=\"Preparing Notification\" color=\"#fff\" />, {\n      position: \"bottom-right\",\n      autoClose: false,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n  const isChannelDeactivated = channelState === CHANNNEL_DEACTIVATED_STATE;\n  const isChannelBlocked = channelState === CHANNEL_BLOCKED_STATE;\n  const channelInactive = isChannelBlocked || isChannelDeactivated;\n\n  React.useEffect(() => {\n    // To set channel info from a channel details\n    // setChannelState(channelDetails.channelState);\n    setPoolContrib(\n      +EPNSCoreHelper.formatBigNumberToMetric(\n        channelDetails.poolContribution,\n        true\n      )\n    );\n  }, [account]);\n\n  const toggleChannelActivationState = () => {\n    if (isChannelBlocked) return;\n    if (isChannelDeactivated) {\n      setShowActivateChannelPopup(true);\n    } else {\n      deactivateChannel();\n    }\n  };\n\n  /**\n   * Function to activate a channel that has been deactivated\n   */\n  const activateChannel = async () => {\n    // First Approve DAI\n    setLoading(true);\n    var signer = library.getSigner(account);\n    let daiContract = new ethers.Contract(addresses.dai, abis.erc20, signer);\n    const fees = ethers.utils.parseUnits(channelStakeFees.toString(), 18);\n    var sendTransactionPromise = daiContract.approve(addresses.epnscore, fees);\n    const tx = await sendTransactionPromise;\n\n    console.log(tx);\n    console.log(\"waiting for tx to finish\");\n\n    await library.waitForTransaction(tx.hash);\n    await epnsWriteProvider\n      .reactivateChannel(fees)\n      .then(async (tx: any) => {\n        console.log(tx);\n        console.log(\"Transaction Sent!\");\n\n        toaster.update(notificationToast(), {\n          render: \"Reactivating Channel\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n\n        await tx.wait(1);\n        toaster.update(notificationToast(), {\n          render: \"Channel Reactivated\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n        dispatch(\n          setUserChannelDetails({\n            ...channelDetails,\n            channelState: CHANNEL_ACTIVE_STATE,\n          })\n        );\n      })\n      .catch((err: any) => {\n        console.log(\"!!!Error reactivateChannel() --> %o\", err);\n        toaster.update(notificationToast(), {\n          render: \"Transacion Failed: \" + err.error?.message || err.message,\n          type: toaster.TYPE.ERROR,\n          autoClose: 5000,\n        });\n      })\n      .finally(() => {\n        setLoading(false);\n        setShowActivateChannelPopup(false);\n      });\n  };\n\n  /**\n   * Function to deactivate a channel that has been deactivated\n   */\n  const deactivateChannel = async () => {\n    setLoading(true);\n    if (!poolContrib) return;\n\n    const amountToBeConverted = parseInt(\"\" + poolContrib) - 10;\n    console.log(\"Amount To be converted==>\", amountToBeConverted);\n\n    const { data: response } = await postReq(\"/channels/get_dai_to_push\", {\n      value: amountToBeConverted,\n    });\n\n    const pushValue = response.response.data.quote.PUSH.price;\n    const amountsOut = pushValue * Math.pow(10, 18);\n\n    await epnsWriteProvider\n      // .deactivateChannel(amountsOut.toString().replace(/0+$/, \"\")) //use this to remove trailing zeros 1232323200000000 -> 12323232\n      .deactivateChannel(Math.floor(pushValue)) \n      .then(async (tx: any) => {\n        console.log(tx);\n        console.log(\"Transaction Sent!\");\n\n        toaster.update(notificationToast(), {\n          render: \"Transaction sending\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n\n        await tx.wait(1);\n        console.log(\"Transaction Mined!\");\n        dispatch(\n          setUserChannelDetails({\n            ...channelDetails,\n            channelState: CHANNNEL_DEACTIVATED_STATE,\n          })\n        );\n      })\n      .catch((err: any) => {\n        console.log(\"!!!Error deactivateChannel() --> %o\", err);\n        console.log({\n          err,\n        });\n        toaster.update(notificationToast(), {\n          render: \"Transacion Failed: \" + err.error?.message || err,\n          type: toaster.TYPE.ERROR,\n          autoClose: 5000,\n        });\n      })\n      .finally(() => {\n        // post op\n        setLoading(false);\n      });\n  };\n\n  const addDelegate = async (walletAddress: string) => {\n    setAddDelegateLoading(true);\n    return epnsCommWriteProvider.addDelegate(walletAddress).finally(() => {\n      setAddDelegateLoading(false);\n    });\n  };\n\n  const removeDelegate = (walletAddress: string) => {\n    setRemoveDelegateLoading(true);\n    return epnsCommWriteProvider.removeDelegate(walletAddress).finally(() => {\n      setRemoveDelegateLoading(false);\n    });\n  };\n\n  if (!onCoreNetwork) {\n    //temporarily deactivate the deactivate button if not on core network\n    return <></>;\n  }\n\n  return (\n    <div>\n      <DropdownWrapper>\n        <DeactivateButton\n          isChannelDeactivated={isChannelDeactivated}\n          onClick={toggleChannelActivationState}\n        >\n          <ActionTitle>\n            {loading ? (\n              \"Loading ...\"\n            ) : isChannelBlocked ? (\n              \"Channel Blocked\"\n            ) : isChannelDeactivated ? (\n              \"Activate Channel\"\n            ) : (\n              \"Deactivate Channel\"\n            )}\n          </ActionTitle>\n        </DeactivateButton>\n        <ActiveChannelWrapper>\n          <ChannelActionButton\n            disabled={channelInactive}\n            onClick={() => !channelInactive && setAddModalOpen(true)}\n          >\n            <ActionTitle>\n              {addDelegateLoading ? (\n                <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n              ) : (\n                \"Add Delegate\"\n              )}\n            </ActionTitle>\n          </ChannelActionButton>\n\n          <ChannelActionButton\n            disabled={channelInactive}\n            onClick={() => !channelInactive && setRemoveModalOpen(true)}\n          >\n            <ActionTitle>\n              {removeDelegateLoading ? (\n                <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n              ) : (\n                \"Remove Delegate\"\n              )}\n            </ActionTitle>\n          </ChannelActionButton>\n        </ActiveChannelWrapper>\n      </DropdownWrapper>\n      {/* modal to display the activate channel popup */}\n      {showActivateChannelPopup && (\n        <ActivateChannelModal\n          onClose={() => {\n            if (showActivateChannelPopup) {\n              setShowActivateChannelPopup(false);\n            }\n          }}\n          activateChannel={activateChannel}\n          loading={loading}\n          setChannelStakeFees={setChannelStakeFees}\n          channelStakeFees={channelStakeFees}\n        />\n      )}\n      {/* modal to add a delegate */}\n      {addModalOpen && (\n        <AddDelegateModal\n          onClose={() => setAddModalOpen(false)}\n          onSuccess={() => {\n            toaster.update(notificationToast(), {\n              render: \"Delegate Added\",\n              type: toaster.TYPE.INFO,\n              autoClose: 5000,\n            });\n          }}\n          addDelegate={addDelegate}\n        />\n      )}\n      {/* modal to remove a delegate */}\n      {removeModalOpen && (\n        <RemoveDelegateModal\n          onClose={() => {\n            setRemoveModalOpen(false);\n          }}\n          onSuccess={() => {\n            toaster.update(notificationToast(), {\n              render: \"Delegate Removed\",\n              type: toaster.TYPE.INFO,\n              autoClose: 5000,\n            });\n          }}\n          removeDelegate={removeDelegate}\n        />\n      )}\n    </div>\n  );\n}\n\n// css styles\nconst DropdownWrapper = styled.div`\n  position: absolute;\n  right: 20px;\n  display: flex;\n  flex-direction: column-reverse;\n  width: 220px;\n  height: 230px;\n  padding: 20px;\n  padding-top: 30px;\n\n  background: #ffffff;\n  border: 1px solid #a9a9a9;\n  box-sizing: border-box;\n  box-shadow: 0px 4px 30px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  justify-content: space-between;\n`;\n\nconst ActiveChannelWrapper = styled.div`\n  flex-direction: column;\n  gap: 20px;\n  display: ${(props) => (props.inactive ? \"none\" : \"flex\")};\n`;\n\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`;\n\nconst ActionTitle = styled.span`\n  ${(props: any) =>\n    props.hideit &&\n    css`\n      visibility: hidden;\n    `};\n`;\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`;\n\nconst DeactivateButton = styled.div`\n  text-decoration: underline;\n  color: ${(props) => (props.isChannelDeactivated ? \"#674C9F\" : \"#e20880\")};\n  text-align: center;\n  font-size: 16px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst ChannelActionButton = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  background-color: #674c9f;\n  &:hover {\n    opacity: ${(props) => (props.disabled ? 0.5 : 0.9)};\n    cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\n    pointer: hand;\n  }\n  &:active {\n    opacity: ${(props) => (props.disabled ? 0.5 : 0.75)};\n    cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\n    pointer: hand;\n  }\n  opacity: ${(props) => (props.disabled ? 0.5 : 1)};\n`;\n\nconst Settings = styled.img`\n  width: 40px;\n  height: 40px;\n  margin-left: auto;\n  margin-right: 30px;\n`;\n\n// Export Default\nexport default ChannelSettings;\n","import React from \"react\";\nimport { useClickAway } from \"react-use\";\nimport styled from \"styled-components\";\nimport ChannelSettingsDropdown from \"./ChannelSettingsDropdown\";\n\nexport default function ChannelSettings() {\n  const [active, setActive] = React.useState(false);\n  const modalRef = React.useRef(null);\n  const toggleActive = () => {\n    setActive((a) => !a);\n  };\n\n  useClickAway(modalRef, () => active && setActive(false));\n\n  return (\n    <SettingsWrapper ref={modalRef}>\n      <Settings\n        active={active}\n        onClick={toggleActive}\n        src=\"/Settings.svg\"\n        alt=\"\"\n      ></Settings>\n      {active && <ChannelSettingsDropdown />}\n    </SettingsWrapper>\n  );\n}\n\nconst SettingsWrapper = styled.div`\n  position: absolute;\n  top: 30px;\n  right: 30px;\n`;\n\nconst Settings = styled.img`\n  width: 40px;\n  height: 40px;\n  margin-left: auto;\n  margin-right: 30px;\n  cursor: pointer;\n  transition: 400ms;\n  transform: ${(props) => (props.active ? \"rotateZ(35deg)\" : \"none\")};\n`;\n","import React from \"react\";\nimport moment from \"moment\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\nimport { ALLOWED_CORE_NETWORK } from \"pages/Home\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { postReq } from \"api\";\nconst DATE_FORMAT = \"DD/MM/YYYY\";\nexport default function ChannelDetails() {\n  const { channelDetails, canVerify } = useSelector((state) => state.admin);\n  const { CHANNEL_ACTIVE_STATE, CHANNNEL_DEACTIVATED_STATE } = useSelector(\n    (state) => state.channels\n  );\n  const [verifyingChannel, setVerifyingChannel] = React.useState([]);\n  const [creationDate, setCreationDate] = React.useState(\"\");\n  const [ethAliasAccount, setEthAliasAccount] = React.useState(null);\n  const [aliasVerified, setAliasVerified] = React.useState(null); // null means error, false means unverified and true means verified\n  const { channelState } = channelDetails;\n  const channelIsActive = channelState === CHANNEL_ACTIVE_STATE;\n  const channelIsDeactivated = channelState === CHANNNEL_DEACTIVATED_STATE;\n  const { account, library, chainId } = useWeb3React();\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\n\n  React.useEffect(() => {\n    if (!channelDetails || !canVerify) return;\n    (async function() {\n      let channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(\n        channelDetails.verifiedBy\n      );\n      setVerifyingChannel(channelJson);\n    })();\n  }, [channelDetails, canVerify]);\n\n  React.useEffect(() => {\n    if (!channelDetails) return;\n    (async function() {\n      const bn = channelDetails.channelStartBlock.toString();\n      const block = await library.getBlock(+bn);\n      const date = moment(block?.timestamp * 1000);//convert from millisecs\n      setCreationDate(block ? date.format(DATE_FORMAT) : \"\");\n    })();\n  }, [channelDetails]);\n\n  React.useEffect(() => {\n    if (!onCoreNetwork) return;\n    (async function() {\n      await postReq(\"/channels/get_alias_details\", {\n        channel : account,\n        op: \"read\",\n      }).then(async ({ data }) => {\n        const aliasAccount = data;\n        console.log(aliasAccount);\n        if (aliasAccount.aliasAddress) {\n          setEthAliasAccount(aliasAccount.aliasAddress);\n            await postReq(\"/channels/get_alias_verification_status\", {\n              aliasAddress: account,\n              op: \"read\",\n            }).then(({ data }) => {\n              // if it returns undefined then we need to let them know to verify their channel\n              if (!data) {\n                setAliasVerified(false);\n                return;\n              }\n              const { status } = data;\n              setAliasVerified(status || false);\n              return data;\n            });\n        }\n      });\n    })();\n  }, [account , chainId]);\n\n  return (\n    <ChannelDetailsWrapper>\n      <SectionTop>\n        <ImageSection src={channelDetails.icon}></ImageSection>\n\n        <Details>\n          <ChannelName>\n            {channelDetails.name}\n            {canVerify && <VerifyImage src=\"/verify.png\"></VerifyImage>}\n          </ChannelName>\n          <ChanneStateText active={channelIsActive}>\n            {channelIsActive\n              ? \"ACTIVE\"\n              : channelIsDeactivated\n              ? \"DEACTIVATED\"\n              : \"BLOCKED\"}\n          </ChanneStateText>\n          <Subscribers>\n            <img src=\"/people.svg\"></img>\n            <SubscribersCount>\n              {channelDetails.subscribers.length}\n            </SubscribersCount>\n          </Subscribers>\n        </Details>\n      </SectionTop>\n\n      <SectionDes>{channelDetails.info}</SectionDes>\n        {aliasVerified === false && <span style={{ fontSize : \"16px\" , fontWeight : 500, color : \"red\"}}>Please Verify Alias on Polygon</span>}\n      <SectionDate>\n        {canVerify && (\n          <Verified>\n            <span>verified by:</span>\n\n            <VerifyingIcon src={verifyingChannel.icon}></VerifyingIcon>\n            <VerifyingName>{verifyingChannel.name}</VerifyingName>\n          </Verified>\n        )}\n\n        <Date>\n          <span>created on:</span>\n          <span style={{ marginLeft: \"10px\" }}>{creationDate}</span>\n        </Date>\n      </SectionDate>\n\n      <hr />\n    </ChannelDetailsWrapper>\n  );\n}\n\nconst ChannelDetailsWrapper = styled.div`\n  padding: 30px;\n  padding-bottom: 0;\n`;\n\nconst SectionTop = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 30px;\n`;\n\nconst ImageSection = styled.img`\n  width: 120px;\n  height: 120px;\n  border-radius: 50%;\n  margin-right: 20px;\n`;\nconst VerifyImage = styled.img`\n  width: 20px;\n  height: 25px;\n  margin-top: auto;\n  margin-bottom: auto;\n  margin-left: 8px;\n`;\n\nconst VerifyingIcon = styled.img`\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  margin-left: 6px;\n  margin-right: 5px;\n`;\n\nconst VerifyingName = styled.div``;\n\nconst Subscribers = styled.div`\n  height: fit-content;\n  display: flex;\n  align-items: center;\n`;\n\nconst ActiveIcon = styled.span`\n  width: 8px;\n  height: 8px;\n  background: #57c255;\n  border-radius: 50%;\n`;\n\nconst ChanneStateText = styled.span`\n  color: #57c255;\n  font-family: Source Sans Pro;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 18px;\n  line-height: 23px;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  color: ${(props) => (props.active ? \"#57c255\" : \"red\")};\n  margin-bottom: 8px;\n  display: flex;\n  align-items: center;\n  ${(props) =>\n    props.active &&\n    `\n        &::after {\n            width:8px;\n            height: 8px;\n            background: #57c255;\n            border-radius: 50%;\n            content: \"\";\n            display: inline-flex;\n            align-items: center;\n            margin-left: 6px;\n        }\n    `}\n`;\n\nconst SubscribersCount = styled.span`\n  margin-left: 5px;\n  padding-left: 8px;\n  padding-right: 8px;\n  height: 16px;\n  background: #35c5f3;\n  border-radius: 10px;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 17px;\n  display: inline-block;\n  color: #ffffff;\n`;\n\nconst Details = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst SectionLine = styled.div`\n  margin-left: 30px;\n  margin-right: 30px;\n`;\n\nconst Date = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 240px;\n  color: #674c9f;\n`;\n\nconst Verified = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  & > span {\n    color: #ec008c;\n    fontsize: 1em;\n    fontweight: bolder;\n  }\n`;\n\nconst ChannelName = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-family: Source Sans Pro;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 30px;\n  line-height: 38px;\n  margin-right: 8px;\n  text-transform: capitalize;\n  color: #e20880;\n`;\n\nconst SectionDate = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 25px;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  margin-bottom: 30px;\n`;\n\nconst SectionDes = styled.div`\n  font-family: Source Sans Pro;\n  font-style: normal;\n  font-weight: 300;\n  font-size: 24px;\n  line-height: 30px;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  color: #000000;\n  margin-bottom: 40px;\n`;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Section, Content } from \"components/SharedStyling\";\n\nimport SendNotifications from \"components/SendNotifications\";\nimport ChannelSettings from \"components/ChannelSettings\";\nimport ChannelDetails from \"components/ChannelDetails\";\nimport CreateChannel from \"components/CreateChannel\";\nimport { useSelector } from \"react-redux\";\n\n// CREATE CHANNEL OWNER DASHBOARD\nfunction ChannelOwnerDashboard() {\n  const { channelDetails, delegatees } = useSelector((state) => state.admin);\n  return (\n    <>\n      <Section>\n        <ModifiedContent>\n          {/* display the create channel page if there are no details */}\n          {!channelDetails ? <CreateChannel /> : \"\"}\n          {/* display the create channel page if there are no details */}\n          {/* display the channel settings */}\n          {channelDetails ? <ChannelSettings /> : \"\"}\n          {/* display the channel settings */}\n          {/* display the details about the profile of the channel */}\n          {channelDetails ? <ChannelDetails /> : \"\"}\n          {/* display the details about the profile of the channel */}\n          {/* display the notifications settings */}\n          {channelDetails || delegatees?.length ? <SendNotifications /> : \"\"}\n          {/* display the notifications settings */}\n        </ModifiedContent>\n      </Section>\n    </>\n  );\n}\n\n// css styles\nconst ModifiedContent = styled(Content)`\n  padding: 0;\n  position: relative;\n`;\n\n// Export Default\nexport default ChannelOwnerDashboard;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content} from 'components/SharedStyling';\n\nimport CreateChannel from 'components/CreateChannel';\n\n// CREATE CHANNEL OWNER DASHBOARD\nfunction ChannelCreationDashboard() {\n  React.useEffect(() => {\n\n  });\n\n  // RRENDER\n  return (\n    <>\n      <Section>\n        <Content padding=\"0px\">\n          <CreateChannel />\n        </Content>\n      </Section>\n    </>\n  );\n}\n\n// css styles\n\n\n// Export Default\nexport default ChannelCreationDashboard;\n","import EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\n\nimport { addresses, abis } from \"@project/contracts\";\n\n// STATIC SINGLETON\nexport const UserEvents = {\n    SUBSCRIBED: \"Subscribed\",\n    UNSUBSCRIBED: \"Unsubscribed\",\n    PUBLIC_KEY_BROADCASTED: \"PublicKeyBroadcasted\",\n    CREATED_CHANNEL: \"CreatedChannel\",\n    DEACTIVATE_CHANNEL: \"DeactivateChannel\",\n}\n\nexport default class UsersDataStore {\n    static instance = UsersDataStore.instance || new UsersDataStore();\n\n    state = {\n      usersCount: -1,\n      userMeta: null,\n      ownerMeta: null,\n\n      callbacks: [],\n\n      account: null,\n      epnsReadProvider: null,\n      epnsCommReadProvider: null\n    }\n\n    // init\n    init = (account, epnsReadProvider, epnsCommReadProvider) => {\n      // set account\n      this.state.account = account;\n\n      // First attach listeners then overwrite the old one if any\n      this.resetUsersListeners();\n      this.state.epnsReadProvider = epnsReadProvider;\n      this.state.epnsCommReadProvider = epnsCommReadProvider;\n      this.initUsersListenersAsync();\n\n      // next get store user count & user meta\n      this.getOwnerMetaAsync();\n      this.getUsersCountAsync();\n      this.getUserMetaAsync();\n    }\n\n    // RESET LISTENERS\n    resetUsersListeners = () => {\n      // only proceed if a read provider is attached\n      if (this.state.epnsReadProvider) {\n        this.state.epnsCommReadProvider.removeAllListeners(\"Subscribe\");\n        this.state.epnsCommReadProvider.removeAllListeners(\"Unsubscribe\");\n        this.state.epnsCommReadProvider.removeAllListeners(\"PublicKeyRegistered\");\n        this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\n        this.state.epnsReadProvider.removeAllListeners(\"DeactivateChannel\");\n      }\n\n      // reset user meta as well\n      this.state.userMeta = null;\n    }\n\n    // init LISTENERS\n    initUsersListenersAsync = async () => {\n      // Add Listeners\n      await this.listenForSubscribedAsync();\n      await this.listenForUnsubscribedAsync();\n\n      if (!this.state.userMeta || (this.state.userMeta && !this.state.userMeta.publicKeyRegistered)) {\n        await this.listenForPublicKeyBroadcastAsync();\n      }\n    }\n\n    // 1. Listen for Subscribe Async\n    listenForSubscribedAsync = async () => {\n      // TODO use the right contract comms\n      // const contract = this.state.epnsReadProvider;\n      // let filter = contract.filters.Subscribe(null, this.state.account);\n\n      // if (this.state.userMeta) {\n      //   this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.add(1);\n      // }\n\n      // contract.on(filter, async (channel, user) => {\n      //   // then perform callbacks\n      //   if (this.state.callbacks[UserEvents.SUBSCRIBED]) {\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.SUBSCRIBED])) {\n      //       if (callback) { callback(channel, user); }\n      //     }\n      //   }\n      // });\n    }\n\n    // 2. Listen for Unsubscribe Async\n    listenForUnsubscribedAsync = async () => {\n      // TODO Use the COMMUNICATOR CONTRACT\n      // const contract = this.state.epnsReadProvider;\n      // let filter = contract.filters.Unsubscribe(null, this.state.account);\n\n      // if (this.state.userMeta) {\n      //   this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.sub(1);\n      // }\n\n      // contract.on(filter, async (channel, user) => {\n      //   // then perform callbacks\n      //   if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\n      //       if (callback) { callback(channel, user); }\n      //     }\n      //   }\n      // });\n    }\n\n    // 3. Listen For Public Key Broadcast\n    listenForPublicKeyBroadcastAsync = async () => {\n        // TODO Use the COMMUNICATOR CONTRACT\n      // const contract = this.state.epnsReadProvider;\n      // let filter = contract.filters.PublicKeyRegistered(this.state.account, null);\n\n      // if (this.state.userMeta) {\n      //   this.state.userMeta.publicKeyRegistered = true;\n      // }\n\n      // contract.once(filter, async (channel, user) => {\n      //   // then perform callbacks\n      //   if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\n      //       if (callback) { callback(channel, user); }\n      //     }\n      //   }\n      // });\n    }\n\n    // FOR CALLBACKS\n    addCallbacks = (callbackType, callbackID, callback) => {\n      // first check if callback already exists\n      if (!this.state.callbacks[callbackType]) {\n        this.state.callbacks[callbackType] = {};\n      }\n\n      if (!this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = callback;\n      }\n    }\n\n    removeCallbacks = (callbackType, callbackID) => {\n      // first check if callback already exists\n      if (this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = null;\n      }\n    }\n\n    // GET OWNER META\n    getOwnerMetaAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise ((resolve, reject) => {\n        if (this.state.ownerMeta) {\n          if (enableLogs) console.log(\"getOwnerMetaAsync() [CACHED] --> %o\", this.state.ownerMeta);\n          resolve(this.state.ownerMeta);\n        }\n        else {\n          EPNSCoreHelper.getOwnerInfo(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.ownerMeta = response;\n\n              if (enableLogs) console.log(\"getOwnerMetaAsync() --> %o\", response);\n              resolve(this.state.ownerMeta);\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getOwnerMetaAsync() --> %o\", err);\n              reject(err);\n            });\n        }\n      });\n    }\n\n    // USERS COUNT\n    getUsersCountAsync = async () => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsCount == -1) {\n          // Count not set, get and set it first\n          const count = EPNSCoreHelper.getTotalNumberOfUsers(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.usersCount = response;\n              console.log(\"getUsersCountAsync() --> %o\", response);\n              resolve(this.state.usersCount)\n            })\n            .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\n        }\n        else {\n          resolve(this.state.usersCount);\n        }\n      });\n    }\n\n    incrementUsersCountAsync = async (incrementCount) => {\n      return new Promise ((resolve, reject) => {\n        this.getUsersCountAsync()\n          .then(response => {\n            this.state.usersCount = response + incrementCount;\n            console.log(\"incrementChannelsCountAsync() --> %d\", this.state.usersCount);\n            resolve(this.state.usersCount);\n          })\n          .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\n      });\n    }\n\n    // GET USER META\n    getUserMetaAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise ((resolve, reject) => {\n        if (this.state.userMeta) {\n          if (enableLogs) console.log(\"getUserMetaAsync() [CACHED] --> %o\", this.state.userMeta);\n          resolve(this.state.userMeta);\n        }\n        else {\n          EPNSCoreHelper.getUserInfo(this.state.account, this.state.epnsCommReadProvider)\n            .then(response => {\n              this.state.userMeta = response;\n\n              if (enableLogs) console.log(\"getUserMetaAsync() --> %o\", this.state.userMeta);\n              resolve(this.state.userMeta);\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getUserMetaAsync() --> %o\", err);\n              reject(err);\n          });\n        }\n      });\n    }\n\n}\n","/**\n * This file helps us maintain a global state of all contracts to be used across the application\n * This is used to prevent duplication of logic and instantiating contracts multiple times\n * This is also used to prevent passing props everywhere and making the code ugly\n */\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  ZERO_ADDRESS: \"0x0000000000000000000000000000000000000000\",\n  epnsReadProvider: null, // the core contract reader\n  epnsWriteProvider: null, // the core contract with signer\n  epnsCommReadProvider: null, // the communicator contract reader\n  epnsCommWriteProvider: null, // the communicator write contract with signer\n  pushAdminAddress: null, // the address of the push admin\n};\n\nexport const contractSlice = createSlice({\n  name: \"contracts\",\n  initialState,\n  reducers: {\n    setCoreReadProvider: (state, action) => {\n      state.epnsReadProvider = action.payload;\n    },\n    setCoreWriteProvider: (state, action) => {\n      state.epnsWriteProvider = action.payload;\n    },\n    setCommunicatorReadProvider: (state, action) => {\n      state.epnsCommReadProvider = action.payload;\n    },\n    setCommunicatorWriteProvider: (state, action) => {\n      state.epnsCommWriteProvider = action.payload;\n    },\n    setPushAdmin: (state, action) => {\n      state.pushAdminAddress = action.payload;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  setCoreReadProvider,\n  setCoreWriteProvider,\n  setCommunicatorReadProvider,\n  setCommunicatorWriteProvider,\n  setPushAdmin\n} = contractSlice.actions;\n\nexport default contractSlice.reducer;\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport { ethers } from \"ethers\";\nimport styled, { css } from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\nimport hex2ascii from \"hex2ascii\";\nimport { addresses, abis, envConfig } from \"@project/contracts\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport config from \"config\";\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\nimport NotificationToast from \"components/NotificationToast\";\nimport AliasVerificationodal from \"components/AliasVerificationModal\";\nimport Info from \"segments/Info\";\nimport SpamBox from \"segments/spam\";\nimport Feedbox from \"segments/Feedbox\";\nimport ViewChannels from \"segments/ViewChannels\";\nimport ChannelOwnerDashboard from \"segments/ChannelOwnerDashboard\";\nimport ChannelCreationDashboard from \"segments/ChannelCreationDashboard\";\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\nimport UsersDataStore from \"singletons/UsersDataStore\";\nimport { postReq } from \"api\";\nimport {\n  setCoreReadProvider,\n  setCoreWriteProvider,\n  setCommunicatorReadProvider,\n  setCommunicatorWriteProvider,\n  setPushAdmin,\n} from \"redux/slices/contractSlice\";\nimport {\n  setUserChannelDetails,\n  setCanVerify,\n  setDelegatees,\n} from \"redux/slices/adminSlice\";\nimport { addNewNotification, toggleToggler, resetState } from \"redux/slices/notificationSlice\";\n\nexport const ALLOWED_CORE_NETWORK = envConfig.coreContractChain; //chainId of network which we have deployed the core contract on\nconst CHANNEL_TAB = 1; //Default to 1 which is the channel tab\n\n// Create Header\nfunction Home() {\n  ReactGA.pageview(\"/home\");\n\n  const dispatch = useDispatch();\n  const { account, library, chainId } = useWeb3React();\n  const {\n    epnsReadProvider,\n    epnsWriteProvider,\n    epnsCommReadProvider,\n  } = useSelector((state) => state.contracts);\n\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\n  const INITIAL_OPEN_TAB = CHANNEL_TAB; //if they are not on a core network.redirect then to the notifications page\n\n  const [controlAt, setControlAt] = React.useState(0);\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [adminStatusLoaded, setAdminStatusLoaded] = React.useState(false);\n  const [aliasEthAccount, setAliasEthAccount] = React.useState(null);\n  const [aliasVerified, setAliasVerified] = React.useState(null); // null means error, false means unverified and true means verified\n  const [channelAdmin, setChannelAdmin] = React.useState(false);\n  const [channelJson, setChannelJson] = React.useState([]);\n\n  // toast related section\n  const [toast, showToast] = React.useState(null);\n  const clearToast = () => showToast(null);\n  const showNetworkToast = () => {\n    showToast({\n      notificationTitle: (\n        <span style={{ color: \"#e20880\" }}> Invalid Network </span>\n      ),\n      notificationBody:\n        \"Please connect to the Main network to access channels\",\n    });\n  };\n\n  //clear toast variable after it is shown\n  React.useEffect(() => {\n    if (toast) {\n      clearToast();\n    }\n  }, [toast]);\n  // toast related section\n\n  React.useEffect(() => {\n    dispatch(resetState());\n    setTimeout(() => dispatch(toggleToggler()), 300)\n  }, [account]);\n\n  /**\n   * Logic to get channel alias and alias verification status as well as create instances of core and comunicator contract\n   */\n  React.useEffect(() => {\n    (async function init() {\n      const coreProvider = onCoreNetwork\n        ? library\n        : ethers.getDefaultProvider(ALLOWED_CORE_NETWORK, {\n            etherscan: config.etherscanToken,\n          });\n      // if we are not on the core network then check for if this account is an alias for another channel\n      if (!onCoreNetwork) {\n        // get the eth address of the alias address, in order to properly render information about the channel\n        const aliasEth = await postReq(\"/channels/get_eth_address\", {\n          aliasAddress: account,\n          op: \"read\",\n        }).then(({ data }) => {\n          console.log({ data });\n          const ethAccount = data;\n          if (ethAccount) {\n            setAliasEthAccount(ethAccount.ethAddress);\n          }\n          return data;\n        });\n        if (aliasEth) {\n          // if an alias exists, check if its verified.\n          await postReq(\"/channels/get_alias_verification_status\", {\n            aliasAddress: account,\n            op: \"read\",\n          }).then(({ data }) => {\n            // if it returns undefined then we need to let them know to verify their channel\n            if (!data) {\n              setAliasVerified(false);\n              return;\n            }\n            const { status } = data;\n            setAliasVerified(status || false);\n            return data;\n          });\n        }\n      }\n      // if we are not on the core network then fetch if there is an alias address from the api\n      // inititalise the read contract for the core network\n      const coreContractInstance = new ethers.Contract(\n        addresses.epnscore,\n        abis.epnscore,\n        coreProvider\n      );\n      // initialise the read contract for the communicator function\n      const commAddress = onCoreNetwork\n        ? addresses.epnsEthComm\n        : addresses.epnsPolyComm;\n      const commContractInstance = new ethers.Contract(\n        commAddress,\n        abis.epnsComm,\n        library\n      );\n      dispatch(setCommunicatorReadProvider(commContractInstance));\n      dispatch(setCoreReadProvider(coreContractInstance));\n      // initialise the read contract for the communicator function\n      if (!!(library && account)) {\n        let signer = library.getSigner(account);\n        const coreSignerInstance = new ethers.Contract(\n          addresses.epnscore,\n          abis.epnscore,\n          signer\n        );\n        const communicatorSignerInstance = new ethers.Contract(\n          commAddress,\n          abis.epnsComm,\n          signer\n        );\n        dispatch(setCoreWriteProvider(coreSignerInstance));\n        dispatch(setCommunicatorWriteProvider(communicatorSignerInstance));\n      }\n    })();\n  }, [account, chainId]);\n\n  /**\n   * When we instantiate the contract instances, fetch basic information about the user\n   * Corresponding channel owned.\n   */\n  React.useEffect(() => {\n    if (!epnsReadProvider || !epnsCommReadProvider) return;\n    // Reset when account refreshes\n    setChannelAdmin(false);\n    dispatch(setUserChannelDetails(null));\n    setAdminStatusLoaded(false);\n    userClickedAt(INITIAL_OPEN_TAB);\n    setChannelJson([]);\n    // save push admin to global state\n    epnsReadProvider.pushChannelAdmin().then((response) => {\n      dispatch(setPushAdmin(response));\n    });\n\n    // EPNS Read Provider Set\n    if (epnsReadProvider != null && epnsCommReadProvider != null) {\n      // Instantiate Data Stores\n      UsersDataStore.instance.init(\n        account,\n        epnsReadProvider,\n        epnsCommReadProvider\n      );\n      ChannelsDataStore.instance.init(\n        account,\n        epnsReadProvider,\n        epnsCommReadProvider\n      );\n      checkUserForChannelOwnership();\n      fetchDelegators();\n    }\n  }, [epnsReadProvider, epnsCommReadProvider]);\n\n  // handle user action at control center\n  const userClickedAt = (controlIndex) => {\n    setControlAt(controlIndex);\n  };\n\n  // fetch all the channels who have delegated to this account\n  const fetchDelegators = () => {\n    postReq(\"/channels/delegatee/get_channels\", {\n      delegateAddress: account,\n      op: \"read\",\n    })\n      .then(async ({ data: delegators }) => {\n        // if there are actual delegators\n        // fetch basic information abouot the channels and store it to state\n        if (delegators && delegators.channelOwners) {\n          const channelInformationPromise = [\n            ...new Set([account, ...delegators.channelOwners])//make the accounts unique\n          ].map((channelAddress) =>\n            ChannelsDataStore.instance\n              .getChannelJsonAsync(channelAddress)\n              .then((res) => ({ ...res, address: channelAddress }))\n              .catch(() => false)\n          );\n          const channelInformation = await Promise.all(\n            channelInformationPromise\n          );\n          dispatch(setDelegatees(channelInformation.filter(Boolean)));\n          // fetch the json information about this delegatee channel and add to global state\n        } else {\n          dispatch(setDelegatees([]));\n        }\n      })\n      .catch(async (err) => {\n        console.log({ err });\n      });\n  };\n\n  // Check if a user is a channel or not\n  const checkUserForChannelOwnership = async () => {\n    // Check if account is admin or not and handle accordingly\n    const ownerAccount = !onCoreNetwork ? aliasEthAccount : account;\n    EPNSCoreHelper.getChannelJsonFromUserAddress(ownerAccount, epnsReadProvider)\n      .then(async (response) => {\n        // if channel admin, then get if the channel is verified or not, then also fetch more details about the channel\n        const verificationStatus = await epnsReadProvider.getChannelVerfication(\n          ownerAccount\n        );\n        const channelJson = await epnsReadProvider.channels(ownerAccount);\n        const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(\n          ownerAccount\n        );\n        dispatch(\n          setUserChannelDetails({\n            ...response,\n            ...channelJson,\n            subscribers: channelSubscribers,\n          })\n        );\n        dispatch(setCanVerify(Boolean(verificationStatus)));\n        setChannelJson(response);\n        setChannelAdmin(true);\n        setAdminStatusLoaded(true);\n      })\n      .catch((err) => {\n        console.log(\n          \"There was an error [checkUserForChannelOwnership]:\",\n          err.message\n        );\n        setChannelAdmin(false);\n        setAdminStatusLoaded(true);\n      })\n      .finally(() => {\n        setAdminStatusLoaded(true);\n      });\n  };\n\n  // Render\n  return (\n    <Container>\n      <Controls>\n        <ControlButton\n          index={0}\n          active={controlAt == 0 ? 1 : 0}\n          border=\"#e20880\"\n          onClick={() => {\n            userClickedAt(0);\n          }}\n        >\n          <ControlImage\n            src=\"./svg/feedbox.svg\"\n            active={controlAt == 0 ? 1 : 0}\n          />\n          <ControlText active={controlAt == 0 ? 1 : 0}>Inbox</ControlText>\n        </ControlButton>\n\n        <ControlButton\n          index={1}\n          active={controlAt == 1 ? 1 : 0}\n          border=\"#35c5f3\"\n          onClick={() => {\n            userClickedAt(1);\n          }}\n        >\n          <ControlImage\n            src=\"./svg/channel.svg\"\n            active={controlAt == 1 ? 1 : 0}\n          />\n          <ControlText active={controlAt == 1 ? 1 : 0}>Channels</ControlText>\n        </ControlButton>\n\n        <ControlButton\n          index={2}\n          active={controlAt == 2 ? 1 : 0}\n          border=\"#674c9f\"\n          disabled={!adminStatusLoaded}\n          onClick={() => {\n            if (adminStatusLoaded) {\n              // if youre not on kovan and you dont have a channel, you cannot create except on kovan, so throw error\n              if (!channelAdmin && !onCoreNetwork) {\n                return showNetworkToast();\n              }\n              if (channelAdmin && !aliasVerified && !onCoreNetwork) {\n                return setModalOpen(true);\n              }\n              userClickedAt(2);\n            }\n          }}\n        >\n          {!adminStatusLoaded && (\n            <Loader type=\"Oval\" color=\"#674c9f\" height={32} width={32} />\n          )}\n          {channelAdmin &&\n            adminStatusLoaded &&\n            (onCoreNetwork ? true : aliasVerified) && (\n              <ControlChannelContainer>\n                <ControlChannelImage\n                  src={`${channelJson.icon}`}\n                  active={controlAt == 2 ? 1 : 0}\n                />\n                <ControlChannelText active={controlAt == 2 ? 1 : 0}>\n                  {channelJson.name}\n                </ControlChannelText>\n              </ControlChannelContainer>\n            )}\n          {channelAdmin &&\n            adminStatusLoaded &&\n            aliasVerified === false &&\n            !onCoreNetwork && (\n              <ControlChannelContainer>\n                <ControlChannelImage\n                  src={`${channelJson.icon}`}\n                  active={controlAt == 2 ? 1 : 0}\n                />\n                <ControlChannelText active={controlAt == 2 ? 1 : 0}>\n                  Verify channel alias\n                </ControlChannelText>\n              </ControlChannelContainer>\n            )}\n          {channelAdmin &&\n            adminStatusLoaded &&\n            aliasVerified === null &&\n            !onCoreNetwork && (\n              <ControlChannelContainer>\n                <ControlChannelImage\n                  src={`${channelJson.icon}`}\n                  active={controlAt == 2 ? 1 : 0}\n                />\n                <ControlChannelText active={controlAt == 2 ? 1 : 0}>\n                  Contact the admin\n                </ControlChannelText>\n              </ControlChannelContainer>\n            )}\n          {!channelAdmin && adminStatusLoaded && (\n            <>\n              <ControlImage\n                src=\"./svg/channeladmin.svg\"\n                active={controlAt == 2 ? 1 : 0}\n              />\n              <ControlText active={controlAt == 2 ? 1 : 0}>\n                Create Your Channel\n              </ControlText>\n            </>\n          )}\n        </ControlButton>\n\n        <ControlButton\n          index={3}\n          active={controlAt == 3 ? 1 : 0}\n          border=\"#e20880\"\n          onClick={() => {\n            userClickedAt(3);\n          }}\n        >\n          <ControlImage src=\"./svg/share.svg\" active={controlAt == 3 ? 1 : 0} />\n          <ControlText active={controlAt == 3 ? 1 : 0}>\n            Receive Notifs\n          </ControlText>\n        </ControlButton>\n      </Controls>\n      <Interface>\n        {controlAt == 0 && <Feedbox />}\n        {controlAt == 1 && <ViewChannels />}\n        {controlAt == 2 && adminStatusLoaded && <ChannelOwnerDashboard />}\n        {controlAt == 3 && <Info />}\n        {toast && (\n          <NotificationToast notification={toast} clearToast={clearToast} />\n        )}\n        {modalOpen && (\n          <AliasVerificationodal\n            onClose={(val) => setModalOpen(val)}\n            onSuccess={() => setAliasVerified(true)}\n            verificationStatus={aliasVerified}\n            aliasEthAccount={aliasEthAccount}\n          />\n        )}\n      </Interface>\n    </Container>\n  );\n}\n\n// css style\nconst Container = styled.div`\n  flex: 1;\n  display: block;\n  flex-direction: column;\n  min-height: calc(100vh - 100px);\n`;\n\nconst Controls = styled.div`\n  flex: 0;\n  display: flex;\n  flex-direction: row;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst ControlButton = styled.div`\n  flex: 1 1 21%;\n  height: 120px;\n  min-width: 200px;\n  background: #fff;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225, 225, 225);\n\n  border-bottom: 10px solid rgb(180, 180, 180);\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-bottom: 10px solid\n    ${(props) => (props.active ? props.border : \"rgb(180,180,180)\")};\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`;\n\nconst ControlImage = styled.img`\n  height: 30%;\n  margin-right: 15px;\n  filter: ${(props) => (props.active ? \"brightness(1)\" : \"brightness(0)\")};\n  opacity: ${(props) => (props.active ? \"1\" : \"0.25\")};\n\n  transition: transform 0.2s ease-out;\n  ${(props) =>\n    props.active &&\n    css`\n      transform: scale(3.5) translate(-20px, 0px);\n      opacity: 0.4;\n    `};\n`;\n\nconst ControlText = styled.label`\n  font-size: 16px;\n  font-weight: 200;\n  opacity: ${(props) => (props.active ? \"1\" : \"0.75\")};\n\n  transition: transform 0.2s ease-out;\n  ${(props) =>\n    props.active &&\n    css`\n      transform: scale(1.3) translate(-10px, 0px);\n    `};\n`;\n\nconst ControlChannelContainer = styled.div`\n  margin: 0px 20px;\n  flex-direction: column;\n  align-items: center;\n  display: flex;\n`;\n\nconst ControlChannelImage = styled.img`\n  width: 20%;\n  margin-bottom: 10px;\n  transition: transform 0.2s ease-out;\n  ${(props) =>\n    props.active &&\n    css`\n      transform: scale(3.5) translate(-40px, 5px);\n      opacity: 0.2;\n      z-index: 1;\n    `};\n`;\n\nconst ControlChannelText = styled.label`\n  font-size: 16px;\n  font-weight: 300;\n  opacity: ${(props) => (props.active ? \"1\" : \"0.75\")};\n  transition: transform 0.2s ease-out;\n  background: -webkit-linear-gradient(#db268a, #34c6f3);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  z-index: 2;\n  ${(props) =>\n    props.active &&\n    css`\n      transform: scale(1.1) translate(0px, -20px);\n    `};\n`;\n\nconst Interface = styled.div`\n  flex: 1;\n  display: flex;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 20px;\n  border: 1px solid rgb(225, 225, 225);\n\n  margin: 15px;\n  overflow: hidden;\n`;\n\n// Export Default\nexport default Home;\n","// Usage:\n//   create component file (e.g. BlockiesIdenticon.js) using uncommented code below\n//   npm install blockies-identicon\n//   in the file you want to use the component (e.g. BlockiesIdenticon.js):\n//   import Blockies from \"blockies/react-component\";\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\nimport React from 'react';\nimport blockies from \"./blockies\";\n\nexport default class BlockiesIdenticon extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  getOpts () {\n    return {\n      seed: this.props.opts.seed || \"foo\",\n      color: this.props.opts.color || \"#dfe\",\n      bgcolor: this.props.opts.bgcolor || \"#a71\",\n      size: this.props.opts.size || 15,\n      scale: this.props.opts.scale || 3,\n      spotcolor: this.props.opts.spotcolor || \"#000\"\n    };\n  }\n  componentDidMount() {\n    this.draw();\n  }\n  componentDidUpdate(prevProps) {\n    // Check for prop change\n    if (this.props.seed !== prevProps.seed) {\n      this.draw();\n    }\n  }\n  draw() {\n    blockies.render({\n      seed: this.props.opts.seed,\n      size: this.props.opts.size,\n      scale: this.props.opts.scale\n    }, this.canvas);\n  }\n  render() {\n    return React.createElement(\"canvas\", {ref: canvas => this.canvas = canvas});\n  }\n}\n","import React from \"react\";\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\nimport styled, { css } from 'styled-components';\n\nimport Loader from 'react-loader-spinner'\nimport Blockies from \"components/BlockiesIdenticon\";\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\n// Create Header\nfunction Profile() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [address, setAddress] = React.useState('');\n  const [ens, setENS] = React.useState('');\n  const [ensFetched, setENSFetched] = React.useState(false);\n\n  React.useEffect(() => {\n    if (account && account != '') {\n      // Check if the address is the same\n      if (address !== account) {\n        setENS('');\n        setENSFetched(false);\n\n        // get ens\n        library\n          .lookupAddress(account).then(function(name) {\n            setENS(name);\n            setENSFetched(true);\n            setAddress(account);\n          })\n          .catch(() => {\n            setENSFetched(true);\n            setAddress(account);\n          })\n      }\n\n    }\n  }, [account]);\n\n  // to create blockies\n\n  return (\n    <>\n    {account && account !== '' && !error &&\n      <Container>\n        <Blocky>\n          <BlockyInner>\n             <Blockies seed={account.toLowerCase()} opts={{seed: account.toLowerCase(), size: 7, scale: 7}}/>\n          </BlockyInner>\n        </Blocky>\n        <Wallet>\n        {!ensFetched &&\n          <Loader\n      \t     type=\"Oval\"\n      \t     color=\"#FFF\"\n      \t     height={16}\n      \t     width={16}\n      \t  />\n        }\n        {ensFetched && ens &&\n          <>{ens}</>\n        }\n        {ensFetched && !ens &&\n          <>{account.substring(0, 6)}.....{account.substring(account.length - 6)}</>\n        }\n        </Wallet>\n      </Container>\n    }\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  margin: 0;\n  padding: 0;\n  background: none;\n  border: 0;\n  outline: 0;\n  justify-content: flex-start;\n  flex: 1,\n  flex-direction: row;\n  align-items: center;\n  display: flex;\n`\n\nconst Blocky = styled.div`\n  position: relative;\n  width: 50px;\n  height: 50px;\n  border-radius: 100%;\n  overflow: hidden;\n  transform: scale(0.85);\n  outline-width: 2px;\n  outline-color: rgba(225,225,225,1);\n`\n\nconst BlockyInner = styled.div`\n`\n\nconst Wallet = styled.span`\n  margin: 0px 10px;\n  padding: 8px 15px;\n  height: 16px;\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  font-weight: bold;\n  font-size: 14px;\n  color: #fff;\n  border-radius: 15px;\n  background: rgb(226,8,128);\n  background: linear-gradient(107deg, rgba(226,8,128,1) 30%, rgba(103,76,159,1) 70%, rgba(53,197,243,1) 100%);\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\n// Export Default\nexport default Profile;\n","import React from \"react\";\nimport styled, { css, keyframes } from 'styled-components';\nimport { AnimateOnChange } from 'react-animation';\n\n// Create Header\nfunction Bell({ badgeCount, bellPressedCB, width, height }) {\n  const [badge, setBadge] = React.useState(0);\n  const [ring, setRing] = React.useState(false);\n\n  React.useEffect(() => {\n    // Set new badge count and ring the bell\n    setBadge(badgeCount);\n\n    if (badge > 0) {\n      setResetRinger();\n    }\n  }, [badgeCount]);\n\n  const setResetRinger = () => {\n    setRing(true);\n\n    setTimeout(() => {\n        setRing(false)\n    }, 500);\n  }\n\n  return (\n    <Container\n      onClick={() => {\n        if (bellPressedCB) {bellPressedCB();}\n      }}\n      width={width}\n      height={height}\n    >\n      <BellImage ring={ring} src=\"./bell.png\" className=\"tadaaa\" ringme={ring} width={width} height={height} />\n      <BellImageAbs src=\"./bellball.png\" width={width} height={height} />\n      <BellImageAbs src=\"./ring.png\" width={width} height={height} />\n      {badge != 0 &&\n        <AnimateOnChange\n          animationIn=\"fadeIn\"\n          animationOut=\"fadeOut\"\n          durationOut={200}\n        >\n          <Badge>{badge}</Badge>\n        </AnimateOnChange>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  border: 0;\n  outline: 0;\n  background: transparent;\n  border: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 10px;\n  position: relative;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst tadaaa = keyframes`\n  0% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n\n  10%, 20% {\n    -webkit-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n  }\n\n  30%, 50%, 70%, 90% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n  }\n\n  40%, 60%, 80% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n  }\n\n  100% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n`;\n\nconst BellImage = styled.img`\n  position: absolute;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n\n  transition: transform .2s ease-out;\n  ${ props => props.ringme && css`\n    animation: ${tadaaa} 1s ease-out;\n  `};\n\n\n`\n\nconst BellImageAbs = styled(BellImage)`\n  left: 0,\n`\n\nconst Badge = styled.span`\n  position: absolute;\n  font-size: 10px;\n  color: #fff;\n  padding: 2px 4px;\n  border-radius: 100%;\n  background: rgba(208.0, 44.0, 30.0, 1.0);\n  top: 0px;\n  left: 5px;\n  font-weight: bold;\n`\n\n// Export Default\nexport default Bell;\n","import React from \"react\";\n\nimport styled, { css } from \"styled-components\";\nimport {Section, Item, ItemH, Button} from 'components/SharedStyling';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { Web3Provider } from 'ethers/providers'\n\nimport Profile from 'components/Profile';\nimport Bell from 'components/Bell';\n\n\n// Create Header\nfunction Header() {\n  const context = useWeb3React<Web3Provider>()\n\n  const { active, error } = useWeb3React();\n  const { deactivate } = context\n\n  const [showLoginControls, setShowLoginControls] = React.useState(false);\n\n  function getErrorMessage(error: Error) {\n    if (error instanceof NoEthereumProviderError) {\n      return 'Web3 not enabled, install MetaMask on desktop or visit from a dApp browser on mobile'\n    } else if (error instanceof UnsupportedChainIdError) {\n      return \"Unsupported Network, please connect to the Main or Polygon network\"\n    } else if (\n      error instanceof UserRejectedRequestErrorInjected\n    ) {\n      return 'Please authorize this website to access the dApp'\n    } else {\n      console.error(error)\n      return 'An unknown error occurred. Check the console for more details'\n    }\n  }\n\n  const bellPressed = () => {\n    setShowLoginControls(!showLoginControls);\n  }\n\n  const disconnect = () => {\n    setShowLoginControls(false);\n    deactivate();\n  }\n\n  return (\n    <HeaderContainer\n      direction=\"row\"\n      padding=\"10px 15px\"\n    >\n      <ItemH\n        justify=\"flex-start\"\n        flex=\"0\"\n      >\n        {active && !error &&\n          <Profile />\n        }\n        {!active &&\n          <Logo src=\"epns.png\" />\n        }\n      </ItemH>\n\n      <ItemH\n        justify=\"flex-end\"\n      >\n        {active && !error &&\n          <Bell\n            badgeCount={0}\n            bellPressedCB={bellPressed}\n            width={32}\n            height={32}\n          />\n        }\n\n        {showLoginControls &&\n          <Item\n            position=\"absolute\"\n          >\n            <Button\n              bg=\"#000\"\n              size=\"12px\"\n              spacing=\"0.2em\"\n              textTransform=\"uppercase\"\n              weight=\"600\"\n              radius=\"20px\"\n              onClick={() => disconnect()}\n            >\n              Disconnect\n            </Button>\n          </Item>\n        }\n\n        <ItemH\n          justify=\"flex-end\"\n          flex=\"initial\"\n        >\n          {!!error &&\n            <PrimaryTheme>{getErrorMessage(error)}</PrimaryTheme>\n          }\n          {!active && !error &&\n            <ThirdTheme>Please connect to a Web3 Network</ThirdTheme>\n          }\n          <Connection phase={active ? 'active' : error ? 'error' : 'waiting'} />\n        </ItemH>\n      </ItemH>\n    </HeaderContainer>\n  );\n}\n\n// CSS Styles\nconst HeaderContainer = styled(Section)`\n  @media (max-width: 1440px) {\n    background: rgb(255,255,255);\n  }\n`\n\nconst Logo = styled.img`\n  height: 40px;\n`\n\nconst Notice = styled.span`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n`\n\nconst PrimaryTheme = styled(Notice)`\n  background: #e20880;\n`\n\nconst ThirdTheme = styled(Notice)`\n  background: #674c9f;\n`\n\nconst Connection = styled.span`\n  height: 10px;\n  width: 10px;\n  border-radius: 100%;\n  flex-shrink: 0;\n\n  ${props => props.phase === 'active' && css`\n    background: #77DD77;\n  `};\n\n  ${props => props.phase === 'waiting' && css`\n    background: #FFAE42;\n  `};\n\n  ${props => props.phase === 'error' && css`\n    background: #DC143C;\n  `};\n`\n\n// Export Default\nexport default Header;\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Web3Provider } from \"ethers/providers\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { AbstractConnector } from \"@web3-react/abstract-connector\";\nimport { useEagerConnect, useInactiveListener } from \"hooks\";\nimport { envConfig } from \"@project/contracts\";\nimport { injected, walletconnect, portis, ledger } from \"connectors\";\nimport Home from \"pages/Home\";\nimport Header from \"segments/Header\";\nimport styled from \"styled-components\";\nimport { Item, ItemH, Span, H2, B, A,C } from \"components/SharedStyling\";\nimport UnderProgressModal from './components/UnderProgressModal';\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport TimerComponent from './segments/TimerComponent';\nimport countdown from './config/countdown';\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\n// define the different type of connectors which we use\nconst web3Connectors = {\n  Injected: {\n    obj: injected,\n    logo: \"./svg/login/metamask.svg\",\n    title: \"MetaMask\",\n  },\n  WalletConnect: {\n    obj: walletconnect,\n    logo: \"./svg/login/walletconnect.svg\",\n    title: \"Wallet Connect\",\n  },\n  // Trezor: {obj: trezor, logo: './svg/login/trezor.svg', title: 'Trezor'},\n  // Ledger: { obj: ledger, logo: \"./svg/login/ledger.svg\", title: \"Ledger\" },\n  Portis: { obj: portis, logo: \"./svg/login/portis.svg\", title: \"Portis\" },\n};\n\nexport default function App() {\n  const { connector, activate, active, error } = useWeb3React<Web3Provider>();\n  const [activatingConnector, setActivatingConnector] = React.useState<\n    AbstractConnector\n  >();\n  const [currentTime,setcurrentTime]=React.useState(0);\n  \n\n  React.useEffect(()=>{\n    const now = Date.now()/ 1000;\n    setcurrentTime(now)\n  },[])\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined);\n    }\n  }, [activatingConnector, connector]);\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect();\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager || !!activatingConnector);\n  // Initialize GA\n  ReactGA.initialize(envConfig.googleAnalyticsId);\n  ReactGA.pageview(\"/login\");\n  \n  // Production \n  console.log = function(){}\n  return (\n    <>\n    \n      <HeaderContainer>\n        <Header/>\n      </HeaderContainer>\n\n      <ParentContainer>\n        \n        {active && !error && (\n          <HomeContainer>\n\n            <Home />\n          </HomeContainer>\n        )}\n\n        {!active && (\n          <Item>\n            {/* <UnderProgressModal/> */}\n\n            <ProviderLogo\n              src=\"./epnshomelogo.png\"\n              srcSet={\"./epnshomelogo@2x.png 2x, ./epnshomelogo@2x.png 3x\"}\n            />\n            <Item\n              bg=\"#fafafa\"\n              border=\"1px solid #ddd\"\n              padding=\"15px\"\n              radius=\"12px\"\n            >\n              <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n                <Span bg=\"#e20880\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">\n                  Connect\n                </Span>\n                <Span weight=\"200\"> Your Wallet</Span>\n              </H2>\n\n              <ItemH maxWidth=\"800px\" align=\"stretch\">\n                {Object.keys(web3Connectors).map((name) => {\n                  const currentConnector = web3Connectors[name].obj;\n                  const connected = currentConnector === connector;\n                  const disabled =\n                    !triedEager ||\n                    !!activatingConnector ||\n                    connected ||\n                    !!error;\n                  const image = web3Connectors[name].logo;\n                  const title = web3Connectors[name].title;\n\n                  return (\n                    <ProviderButton\n                      disabled={disabled}\n                      key={name}\n                      onClick={() => {\n                        setActivatingConnector(currentConnector);\n                        activate(currentConnector);\n                      }}\n                      border=\"#35c5f3\"\n                    >\n                      <ProviderImage src={image} />\n\n                      <Span\n                        spacing=\"0.1em\"\n                        textTransform=\"uppercase\"\n                        size=\"12px\"\n                        weight=\"600\"\n                        padding=\"10px\"\n                      >\n                        {title}\n                      </Span>\n                    </ProviderButton>\n                  );\n                })}\n              </ItemH>\n            </Item>\n\n            <Span margin=\"10px\" size=\"14px\">\n              By unlocking your wallet, <B>You agree</B> to our{\" \"}\n              <A href=\"https://epns.io/tos\" target=\"_blank\">\n                Terms of Service\n              </A>{\" \"}\n              and our{\" \"}\n              <A href=\"https://epns.io/privacy\" target=\"_blank\">\n                Privacy Policy\n              </A>\n              .\n            </Span>\n            <Item\n              bg=\"#fafafa\"\n              border=\"1px solid #ddd\"\n              padding=\"30px 15px\"\n              radius=\"12px\"\n              width=\"50rem\"\n            >\n              <StyledItem>\n              <span> Note: </span> The EPNS protocol has been under development for 1+ year,  and completed a <C href=\"https://epns.io/EPNS-Protocol-Audit2021.pdf\" target=\"_blank\"> ChainSafe audit </C> in October 2021. However, the mainnet is still a new product milestone.  Always DYOR, and anticipate bugs and UI improvements.  Learn how to report any bugs in our  <C href=\"https://discord.com/invite/YVPB99F9W5\" target=\"_blank\">Discord.</C>\n              </StyledItem>\n            </Item>\n          </Item>\n        )}\n      </ParentContainer>\n\n      <ToastContainer\n        position=\"bottom-right\"\n        autoClose={false}\n        newestOnTop\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n      />\n    </>\n  );\n}\n\n// CSS STYLES\nconst StyledItem = styled(Item)`\n  font-size: 14px;\n  letter-spacing: 0.4px;\n  display: block;\n  span{\n    color: #e20880;\n  }\n`;\nconst HeaderContainer = styled.header`\n  left: 0;\n  right: 0;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  z-index: 999;\n`;\n\nconst ParentContainer = styled.div`\n  flex-wrap: wrap;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 80px 20px 50px 20px;\n  flex: 1;\n`;\n\nconst HomeContainer = styled.div`\n  display: flex;\n  flex: 1;\n  align-self: center;\n  width: 100%;\n  max-width: 1100px;\n`;\n\nconst ProviderLogo = styled.img`\n  width: 15vw;\n  align-self: center;\n  display: flex;\n  margin: 10px 20px 20px 20px;\n  min-width: 200px;\n`;\n\nconst ProviderButton = styled.button`\n  flex: 1 1 0;\n  min-width: 280px;\n  background: #fff;\n  outline: 0;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225, 225, 225);\n\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    border: 1px solid ${(props) => props.border};\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    border: 1px solid ${(props) => props.border};\n  }\n`;\n\nconst ProviderImage = styled.img`\n  width: 32px;\n  max-height: 32px;\n  padding: 10px;\n`;\n\nconst ProviderLabel = styled.span`\n  font-size: 12px;\n  margin: 5px;\n`;\n\nconst StyledContainer = styled(ToastContainer).attrs({\n  // custom props\n})`\n  .Toastify__toast-container {\n  }\n  .Toastify__toast {\n  }\n  .Toastify__toast--error {\n  }\n  .Toastify__toast--warning {\n  }\n  .Toastify__toast--success {\n  }\n  .Toastify__toast-body {\n    font-size: 12px;\n  }\n  .Toastify__progress-bar {\n  }\n`;\n","import {configureStore, combineReducers, getDefaultMiddleware} from '@reduxjs/toolkit';\nimport contractReducer from './slices/contractSlice';\nimport channelReducer from './slices/channelSlice';\nimport adminReducer from './slices/adminSlice';\nimport notificationReducer from './slices/notificationSlice';\nimport spamReducer from './slices/spamSlice';\n\nconst rootReducer = combineReducers({\n\tcontracts: contractReducer,\n    channels: channelReducer,\n    admin: adminReducer,\n\tnotifications: notificationReducer,\n\tspam: spamReducer\n});\n\nconst store = configureStore({\n\treducer: rootReducer,\n\tmiddleware: getDefaultMiddleware({\n\t\tserializableCheck: false,\n\t\timmutableCheck: false\n\t})\n});\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ethers } from \"ethers\";\nimport { Provider } from \"react-redux\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport * as dotenv from \"dotenv\";\n\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\n\n// enable environmental variables across the entire application\ndotenv.config();\n// You should replace this uri with your own and put it into a .env file\nconst client = new ApolloClient({\n  uri: \"https://api.thegraph.com/subgraphs/name/epnsproject/epnsstaging\",\n  cache: new InMemoryCache(),\n});\n\n/**\n * A utility function used to get the provider\n */\nfunction getLibrary(provider) {\n  const gottenProvider = new ethers.providers.Web3Provider(provider, \"any\");\n  // adding this is important to deal with changing networks\n  gottenProvider.on(\"network\", (_, oldNetwork) => {\n    if (oldNetwork) {\n      // when network has been changed, refresh the page\n      window.location.reload();\n    }\n  });\n  return gottenProvider;\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ApolloProvider client={client}>\n      <Web3ReactProvider getLibrary={getLibrary}>\n        <App />\n      </Web3ReactProvider>\n    </ApolloProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// environmental configurations for the dapp for different environments\nconst config = {\n    apiUrl: \"https://backend-prod.epns.io/apis\", //the right backend URL to be used\n    allowedNetworks: [\n        1, //for eth\n        137 //for polygon\n    ],\n    coreContractChain: 1, //the chain id of the network which the core contract relies on\n    coreRPC: \"https://mainnet.infura.io/v3/4ff53a5254144d988a8318210b56f47a\",\n    googleAnalyticsId: \"UA-165415629-1\"\n};\n\nexport default config;","// This address points to a dummy ERC20 contract deployed on Ethereum Mainnet,\n// Goerli, Kovan, Rinkeby and Ropsten. Replace it with your smart contracts.\nconst addresses = {\n  ceaErc20: \"0xc1C0472c0C80bCcDC7F5D01A376Bd97a734B8815\",\n  epnscore: \"0x66329Fdd4042928BfCAB60b179e1538D56eeeeeE\",\n  epnsEthComm: \"0xb3971BCef2D791bc4027BbfedFb47319A4AAaaAa\", // the ropsten core contract\n  epnsPolyComm: \"0xb3971BCef2D791bc4027BbfedFb47319A4AAaaAa\", // the ploygon comm contract\n  dai: \"0x6B175474E89094C44Da98b954EedeAC495271d0F\", //address for dai\n  aDai: \"0xcB1Fe6F440c49E9290c3eb7f158534c2dC374201\",\n  staking: \"0xd9218bb2a7Ff0131555A9b6F179fF5103a27a286\",\n  yieldFarmPUSH: \"0xFe0bcF750d4042480943CC8bA818CA3482DDf691\",\n  yieldFarmLP: \"0xE65fE4a8BCEB8A71D6A8D06dF2D91a9637081c61\",\n  epnsToken: \"0x38c4A4C7fa26eA48E34C45a9F6bDb5DA3f599c55\",\n  epnsLPToken: \"0x69E12FfD1170d851c096FfEC6A8eF27D26D96c0f\",\n  rockstar: \"0xCD1B6C8DDB9A735AA5961Ab4aa5B513fba23A3a3\", //ropsten address\n  batchMintNFT: \"0x9A20272669BBAa6254358ba4BB0520fFc813691C\", //ropsten address\n  NFTRewards: \"0x1f4CA0b2B0541b942A440A3f6673883eEacb2cb3\", //ropsten address\n  distributor: \"0x4Cd9Fe2E0acb9BC28fA51106b99825bd7a02309e\", //ropsten address\n};\n\nexport default addresses;\n","import erc20Abi from \"./abis/erc20\";\nimport ownableAbi from \"./abis/ownable\";\nimport epnscoreAbi from \"./abis/epnscore\";\nimport daiAbi from \"./abis/dai\";\nimport epnsTokenAbi from \"./abis/EPNS.json\";\nimport stakingAbi from \"./abis/Staking.json\";\nimport yieldFarmingAbi from \"./abis/YieldFarm.json\";\nimport rockstarAbi from \"./abis/Rockstar.json\";\nimport ec721Abi from \"./abis/ERC721.json\";\nimport NFTRewards from \"./abis/NFTRewards.json\";\nimport epnsCommAbi from \"./abis/epnsCommunicator.json\";\nimport MerkleDistributorAbi from \"./abis/MerkleDistributor.json\";\n\nexport const abis = {\n  erc20: erc20Abi,\n  ownable: ownableAbi,\n  epnscore: epnscoreAbi,\n  epnsPolyComm: epnsCommAbi,\n  epnsComm: epnsCommAbi,\n  dai: daiAbi,\n  epnsToken: epnsTokenAbi,\n  staking: stakingAbi,\n  yieldFarming: yieldFarmingAbi,\n  rockstar: rockstarAbi,\n  erc721: ec721Abi,\n  NFTRewards: NFTRewards,\n  distributor: MerkleDistributorAbi,\n};\n\nexport { default as envConfig } from \"./config\";\nexport { default as addresses } from \"./addresses\";\n","import React from \"react\";\nimport Select from \"react-select\";\nimport styled, { css } from \"styled-components\";\nimport {\n  Section,\n  Content,\n  Item,\n  ItemH,\n  ItemBreak,\n  H1,\n  H2,\n  H3,\n  Image,\n  P,\n  Span,\n  Anchor,\n  Button,\n  Showoff,\n  FormSubmision,\n  Input,\n  TextField,\n} from \"components/SharedStyling\";\n\nimport { FiLink } from \"react-icons/fi\";\n\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport Dropzone from \"react-dropzone-uploader\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Slider from \"@material-ui/core/Slider\";\n\nimport Loader from \"react-loader-spinner\";\n\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\n\nimport { addresses, abis } from \"@project/contracts\";\nconst ethers = require(\"ethers\");\n\nconst ipfs = require(\"ipfs-api\")();\n\nconst minStakeFees = 50;\nconst ALIAS_CHAINS = [{ value: \"POLYGON_TEST_MUMBAI:80001\", label: \"Polygon\" }];\n\n// Create Header\nfunction CreateChannel() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [processing, setProcessing] = React.useState(0);\n  const [processingInfo, setProcessingInfo] = React.useState(\"\");\n\n  const [uploadDone, setUploadDone] = React.useState(false);\n  const [stakeFeesChoosen, setStakeFeesChoosen] = React.useState(false);\n  const [channelInfoDone, setChannelInfoDone] = React.useState(false);\n\n  const [chainDetails, setChainDetails] = React.useState(\"\");\n  const [channelName, setChannelName] = React.useState(\"\");\n  const [channelAlias, setChannelAlias] = React.useState(\"\");\n  const [channelInfo, setChannelInfo] = React.useState(\"\");\n  const [channelURL, setChannelURL] = React.useState(\"\");\n  const [channelFile, setChannelFile] = React.useState(undefined);\n  const [channelStakeFees, setChannelStakeFees] = React.useState(minStakeFees);\n\n  const [stepFlow, setStepFlow] = React.useState(1);\n\n  React.useEffect(() => {});\n\n  // called every time a file's `status` changes\n  const handleChangeStatus = ({ meta, file }, status) => {\n    console.log(status, meta, file);\n  };\n\n  const onDropHandler = (files) => {\n    //   var file = files[0]\n    //   const reader = new FileReader();\n    //   reader.onload = (event) => {\n    //     console.log(event.target.result);\n    //   };\n    //   reader.readAsDataURL(file);\n    // setChannelFile(file);\n    // console.log(\"Drop Handler\");\n    // console.log(file);\n  };\n\n  // receives array of files that are done uploading when submit button is clicked\n  const handleLogoSubmit = (files, allFiles) => {\n    // console.log(files.map(f => f.meta))\n    allFiles.forEach((f) => {\n      var file = f.file;\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n      // console.log(f.file);\n\n      reader.onloadend = function(e) {\n        // console.log(reader.result);\n        const response = handleLogoSizeLimitation(reader.result);\n        if (response.success) {\n          setStepFlow(2);\n          setProcessing(0);\n          setUploadDone(true);\n          setChannelFile(reader.result);\n        } else {\n          setProcessing(3);\n          setProcessingInfo(response.info);\n        }\n      };\n    });\n  };\n\n  const handleLogoSizeLimitation = (base64) => {\n    // Setup Error on higher size of 128px\n    var sizeOf = require(\"image-size\");\n    var base64Data = base64.split(\";base64,\").pop();\n    var img = Buffer.from(base64Data, \"base64\");\n    var dimensions = sizeOf(img);\n\n    // Only proceed if image is equal to or less than 128\n    if (dimensions.width > 128 || dimensions.height > 128) {\n      console.log(\"Image size check failed... returning\");\n      return {\n        success: 0,\n        info: \"Image size check failed, Image should be 128X128PX\",\n      };\n    }\n\n    // only proceed if png or jpg\n    // This is brilliant: https://stackoverflow.com/questions/27886677/javascript-get-extension-from-base64-image\n    // char(0) => '/' : jpg\n    // char(0) => 'i' : png\n    let fileext;\n    console.log(base64Data.charAt(0));\n    if (base64Data.charAt(0) == \"/\") {\n      return {\n        success: 1,\n        info: \"Image checks passed\",\n      };\n    } else if (base64Data.charAt(0) == \"i\") {\n      return {\n        success: 1,\n        info: \"Image checks passed\",\n      };\n    } else {\n      return {\n        success: 0,\n        info: \"Image extension should be jpg or png\",\n      };\n    }\n  };\n\n  const handleCreateChannel = async (e) => {\n    // Check everything in order\n    // skip this for now\n    e.preventDefault();\n\n    if (\n      isEmpty(channelName) ||\n      isEmpty(channelInfo) ||\n      isEmpty(channelURL) ||\n      isEmpty(channelFile) ||\n      channelAlias\n        ? isEmpty(chainDetails)\n        : chainDetails\n        ? isEmpty(channelAlias)\n        : false\n    ) {\n      setProcessing(3);\n      setProcessingInfo(\"Channel Fields are Empty! Please retry!\");\n\n      return false;\n    }\n\n    // Check complete, start logic\n    setChannelInfoDone(true);\n    setProcessing(1);\n\n    console.log({\n      chainDetails,\n      channelAlias,\n    });\n    var chainDetailsSplit = chainDetails.split(\":\");\n    var blockchain = chainDetailsSplit[0];\n    var chain_id = chainDetailsSplit[1];\n    var address = channelAlias;\n\n    const input = JSON.stringify({\n      name: channelName,\n      info: channelInfo,\n      url: channelURL,\n      icon: channelFile,\n      blockchain: blockchain,\n      chain_id: chain_id,\n      address: address,\n    });\n\n    const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\n\n    setProcessingInfo(\"Uploading Payload...\");\n    const storagePointer = await ipfs.add(input);\n    console.log(\"IPFS storagePointer:\", storagePointer);\n    setProcessingInfo(\"Payload Uploaded, Approval to transfer DAI...\");\n    //console.log(await ipfs.cat(storagePointer));\n\n    // Send Transaction\n    // First Approve DAI\n    var signer = library.getSigner(account);\n\n    let daiContract = new ethers.Contract(addresses.dai, abis.erc20, signer);\n\n    // Pick between 50 DAI AND 25K DAI\n    const fees = ethers.utils.parseUnits(channelStakeFees.toString(), 18);\n\n    var sendTransactionPromise = daiContract.approve(addresses.epnscore, fees);\n    const tx = await sendTransactionPromise;\n\n    console.log(tx);\n    console.log(\"waiting for tx to finish\");\n    setProcessingInfo(\"Waiting for Approval TX to finish...\");\n\n    await library.waitForTransaction(tx.hash);\n\n    let contract = new ethers.Contract(\n      addresses.epnscore,\n      abis.epnscore,\n      signer\n    );\n\n    const channelType = 2; // Open Channel\n    const identity = \"1+\" + storagePointer; // IPFS Storage Type and HASH\n    const identityBytes = ethers.utils.toUtf8Bytes(identity);\n\n    var anotherSendTxPromise = contract.createChannelWithFees(\n      channelType,\n      identityBytes,\n      fees,\n      {\n        gasLimit: 1000000\n      }\n    );\n\n    setProcessingInfo(\"Creating Channel TX in progress\");\n    anotherSendTxPromise\n      .then(async function(tx) {\n        console.log(tx);\n        console.log(\"Check: \" + account);\n        try {\n          await tx.wait(1);\n          setProcessing(3);\n          setProcessingInfo(\"Channel Created! Reloading...\");\n          setTimeout(() => {\n          window.location.reload();\n        }, 2000);\n        } catch (err) {\n          setProcessingInfo(\n            `There was an error creating your channel, Please refer to the guide -> \"https://www.notion.so/epns/How-to-EPNS-853afe64839b4cdd8c63209342a783d0\"`\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error --> %o\", err);\n        console.log({ err });\n        setProcessing(3);\n        setProcessingInfo(\n          `There was an error creating your channel, Please refer to the guide -> \"https://www.notion.so/epns/How-to-EPNS-853afe64839b4cdd8c63209342a783d0\"`\n        );\n      });\n  };\n\n  const isEmpty = (field) => {\n    if (field.trim().length == 0) {\n      return true;\n    }\n\n    return false;\n  };\n\n  //mind Dai\n  const mintDai = async () => {\n    try {\n      var signer = library.getSigner(account);\n      let daiContract = new ethers.Contract(addresses.dai, abis.dai, signer);\n      console.log({\n        daiContract,\n      });\n      console.log(1);\n      let daiAmount = 1000;\n      const amount = ethers.utils.parseUnits(daiAmount.toString(), 18);\n      console.log(2);\n      var mintTransactionPromise = daiContract.mint(amount);\n      console.log(3);\n      const tx = await mintTransactionPromise;\n      console.log(tx);\n      await library.waitForTransaction(tx.hash);\n      console.log(4);\n      setProcessingInfo(\"1000 Dai minted successfully!\");\n      console.log(\"Transaction Completed\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <>\n      <Section>\n        <Content padding=\"10px 20px 20px\">\n          <Item align=\"flex-start\">\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">\n                Create\n              </Span>\n              <Span weight=\"200\"> Your Channel!</Span>\n            </H2>\n            <H3>\n              <b>Ethereum Push Notification Service</b> (EPNS) makes it\n              extremely easy to open and maintain a genuine channel of\n              communication with your users.\n            </H3>\n          </Item>\n        </Content>\n      </Section>\n\n      <Section>\n        <Content padding=\"0px 20px 20px\">\n          <ItemH justify=\"space-between\">\n            <Step\n              bg=\"#fff\"\n              activeBG=\"#e20880\"\n              type={stepFlow >= 1 ? \"active\" : \"inactive\"}\n            />\n            <Step\n              bg=\"#fff\"\n              activeBG=\"#e20880\"\n              type={stepFlow >= 2 ? \"active\" : \"inactive\"}\n            />\n            <Step\n              bg=\"#fff\"\n              activeBG=\"#e20880\"\n              type={stepFlow >= 3 ? \"active\" : \"inactive\"}\n            />\n            <Line />\n          </ItemH>\n        </Content>\n      </Section>\n\n      {/* Image Upload Section */}\n      {!uploadDone && (\n        <Section>\n          <Content padding=\"50px 20px 20px\">\n            <Item align=\"flex-start\">\n              <H3 color=\"#e20880\">\n                Upload Channel Logo to start the process. Make sure image is\n                128x128px.\n              </H3>\n            </Item>\n\n            <Item margin=\"-10px 0px 20px 0px\">\n              <Dropzone\n                onChangeStatus={handleChangeStatus}\n                onSubmit={handleLogoSubmit}\n                onDrop={onDropHandler}\n                maxFiles={1}\n                multiple={false}\n                accept=\"image/jpeg,image/png\"\n              />\n            </Item>\n            {chainId != 1 ? (\n              <Item align=\"flex-end\">\n                <Minter\n                  onClick={() => {\n                    mintDai();\n                  }}\n                >\n                  <Pool>\n                    <br></br>\n                    <PoolShare>Get Free DAI for Channel</PoolShare>\n                  </Pool>\n                </Minter>\n              </Item>\n            ) : (\n              <></>\n            )}\n          </Content>\n        </Section>\n      )}\n\n      {/* Stake Fees Section */}\n      {uploadDone && !stakeFeesChoosen && (\n        <Section>\n          <Content padding=\"50px 0px 0px 0px\">\n\n            <Item\n              margin=\"-10px 20px 20px 20px\"\n              padding=\"20px 20px 10px 20px\"\n              bg=\"#f1f1f1\"\n            >\n              <Span\n                weight=\"400\"\n                size=\"1.0em\"\n                textTransform=\"uppercase\"\n                spacing=\"0.2em\"\n              >\n                Amount to be Staked: {channelStakeFees} DAI\n              </Span>\n            </Item>\n\n            <Item self=\"stretch\" align=\"stretch\" margin=\"20px 0px 0px 0px\">\n              <Button\n                bg=\"#e20880\"\n                color=\"#fff\"\n                flex=\"1\"\n                radius=\"0px\"\n                padding=\"20px 10px\"\n                onClick={() => {\n                  setStakeFeesChoosen(true);\n                  setStepFlow(3);\n                }}\n              >\n                <Span\n                  color=\"#fff\"\n                  weight=\"400\"\n                  textTransform=\"uppercase\"\n                  spacing=\"0.1em\"\n                >\n                  Continue\n                </Span>\n              </Button>\n            </Item>\n          </Content>\n        </Section>\n      )}\n\n      {/* Channel Entry */}\n      {uploadDone && stakeFeesChoosen && !channelInfoDone && (\n        <Section>\n          <Content padding=\"50px 0px 0px 0px\">\n            <Item align=\"flex-start\" margin=\"0px 20px\">\n              <H3 color=\"#e20880\">Setup your Channel Info</H3>\n            </Item>\n\n            <FormSubmision\n              flex=\"1\"\n              direction=\"column\"\n              margin=\"0px\"\n              justify=\"center\"\n              size=\"1.1rem\"\n              onSubmit={handleCreateChannel}\n            >\n              <Item\n                margin=\"-10px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n              >\n                <Input\n                  required\n                  placeholder=\"Your Channel Name\"\n                  maxlength=\"40\"\n                  padding=\"12px\"\n                  border=\"1px solid #000\"\n                  weight=\"400\"\n                  size=\"1.2em\"\n                  bg=\"#fff\"\n                  value={channelName}\n                  onChange={(e) => {\n                    setChannelName(e.target.value);\n                  }}\n                />\n                {channelName.trim().length == 0 && (\n                  <Span\n                    padding=\"4px 10px\"\n                    right=\"0px\"\n                    top=\"0px\"\n                    pos=\"absolute\"\n                    color=\"#fff\"\n                    bg=\"#000\"\n                    size=\"0.7rem\"\n                    z=\"1\"\n                  >\n                    Name of Channel\n                  </Span>\n                )}\n              </Item>\n\n              <Item\n                margin=\"15px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n                style={{ position: \"relative\" }}\n              >\n                <Select\n                  className=\"basic-single\"\n                  classNamePrefix=\"select\"\n                  placeholder=\"Alias network\"\n                  name=\"color\"\n                  options={ALIAS_CHAINS}\n                  theme={(theme) => ({\n                    ...theme,\n                    borderRadius: 0,\n                    colors: {\n                      ...theme.colors,\n                      primary25: \"#e20880\",\n                      primary: \"#e20880\",\n                    },\n                  })}\n                  onChange={(selectedOption) => {\n                    setChainDetails(selectedOption.value);\n                  }}\n                />\n                <Input\n                  placeholder=\"Your Channel's Alias address\"\n                  maxlength=\"40\"\n                  padding=\"12px\"\n                  style={{ paddingLeft: \"22%\" }}\n                  border=\"1px solid #000\"\n                  weight=\"400\"\n                  size=\"1rem\"\n                  bg=\"#fff\"\n                  value={channelAlias}\n                  onChange={(e) => {\n                    setChannelAlias(e.target.value);\n                  }}\n                />\n              </Item>\n              <Item\n                margin=\"15px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n              >\n                <TextField\n                  required\n                  placeholder=\"Your Channel's Short Description (200 Characters)\"\n                  rows=\"4\"\n                  maxlength=\"200\"\n                  radius=\"4px\"\n                  padding=\"12px\"\n                  weight=\"400\"\n                  border=\"1px solid #000\"\n                  bg=\"#fff\"\n                  value={channelInfo}\n                  onChange={(e) => {\n                    setChannelInfo(e.target.value);\n                  }}\n                  autocomplete=\"off\"\n                />\n              </Item>\n\n              <ItemH\n                margin=\"15px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"center\"\n              >\n                <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                  <FiLink size={24} color=\"#000\" />\n                </Item>\n                <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                  <Input\n                    required\n                    placeholder=\"Call to Action Link\"\n                    padding=\"12px\"\n                    border=\"1px solid #000\"\n                    radius=\"4px\"\n                    weight=\"400\"\n                    bg=\"#f1f1f1\"\n                    value={channelURL}\n                    onChange={(e) => {\n                      setChannelURL(e.target.value);\n                    }}\n                  />\n                  {channelURL.trim().length == 0 && (\n                    <Span\n                      padding=\"4px 10px\"\n                      right=\"0px\"\n                      top=\"0px\"\n                      pos=\"absolute\"\n                      color=\"#fff\"\n                      bg=\"#000\"\n                      size=\"0.7rem\"\n                      z=\"1\"\n                    >\n                      Channel's Website URL\n                    </Span>\n                  )}\n                </Item>\n              </ItemH>\n\n              <Item\n                margin=\"15px 0px 0px 0px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n              >\n                <Button\n                  bg=\"#e20880\"\n                  color=\"#fff\"\n                  flex=\"1\"\n                  radius=\"0px\"\n                  padding=\"20px 10px\"\n                  disabled={processing == 1 ? true : false}\n                >\n                  {processing == 1 && (\n                    <Loader type=\"Oval\" color=\"#fff\" height={24} width={24} />\n                  )}\n                  {processing != 1 && (\n                    <Input\n                      cursor=\"hand\"\n                      textTransform=\"uppercase\"\n                      color=\"#fff\"\n                      weight=\"400\"\n                      size=\"0.8em\"\n                      spacing=\"0.2em\"\n                      type=\"submit\"\n                      value=\"Setup Channel\"\n                    />\n                  )}\n                </Button>\n              </Item>\n            </FormSubmision>\n          </Content>\n        </Section>\n      )}\n\n      {/* Channel Setup Progress */}\n      {(processing == 1 || processing == 3) && (\n        <Section>\n          <Content padding=\"0px 0px 0px 0px\">\n            {processing == 1 && (\n              <Item margin=\"20px 0px 10px 0px\">\n                <Loader type=\"Oval\" color=\"#000\" height={24} width={24} />\n              </Item>\n            )}\n\n            <Item\n              color=\"#fff\"\n              bg={processing == 1 ? \"#e1087f\" : \"#000\"}\n              padding=\"10px 15px\"\n              margin=\"15px 0px\"\n            >\n              <Span\n                color=\"#fff\"\n                textTransform=\"uppercase\"\n                spacing=\"0.1em\"\n                weight=\"400\"\n                size=\"1em\"\n              >\n                {processingInfo}\n              </Span>\n            </Item>\n          </Content>\n        </Section>\n      )}\n    </>\n  );\n}\n\n// css styles\nconst Step = styled.div`\n  height: 12px;\n  width: 12px;\n  background: ${(props) => props.bg || \"#fff\"};\n  border: 4px solid ${(props) => props.activeBG || \"#000\"};\n  border-radius: 100%;\n\n  ${({ type }) =>\n    type == \"active\" &&\n    css`\n      background: ${(props) => props.activeBG || \"#ddd\"};\n      border: 4px solid #00000022;\n    `};\n`;\n\nconst Line = styled.div`\n  position: absolute;\n  height: 5px;\n  background: #f1f1f1;\n  right: 0;\n  left: 0;\n  margin: 0px 10px;\n  z-index: -1;\n`;\n\nconst Channel = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst Notice = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled.h1`\n  color: #674c9f;\n  font-size: 30px;\n  font-weight: 300;\n  margin-top: 0px;\n  margin-bottom: 30px;\n`;\n\nconst Info = styled.label`\n  padding-bottom: 20px;\n  font-size: 14px;\n  color: #000;\n`;\n\nconst Info2 = styled(Info)``;\nconst Name = styled(Input)`\n  border-bottom: 1px solid #e20880;\n  font-size: 24px;\n`;\n\nconst ShortInfo = styled.textarea`\n  outline: 0;\n  border: 0;\n  border-bottom: 1px solid #35c5f3;\n  margin: 10px;\n  font-size: 18px;\n  min-height: 80px;\n  color: #111;\n`;\n\nconst Url = styled(Input)`\n  border-bottom: 1px solid #674c9f;\n  font-size: 1=8px;\n`;\n\nconst Text = styled.span``;\n\nconst Continue = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n  background: ${(props) => props.theme || \"#674c9f\"};\n  margin: 30px 0px 0px 0px;\n  border-radius: 8px;\n  padding: 16px;\n  font-size: 16px;\n  font-weight: 400;\n`;\nconst Minter = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 13px;\n`;\n\nconst ChannelMetaBox = styled.label`\n  margin: 0px 5px;\n  color: #fff;\n  font-weight: 600;\n  padding: 10px 20px;\n  border-radius: 10px;\n  font-size: 15px;\n  // font-size: 11px;\n`;\nconst Pool = styled.div`\n  margin: 0px 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst PoolShare = styled(ChannelMetaBox)`\n  background: #e20880;\n  // background: #674c9f;\n`;\n\n// Export Default\nexport default CreateChannel;\n","(function() {\n\t// The random number is a js implementation of the Xorshift PRNG\n\tvar randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\n\n\tfunction seedrand(seed) {\n\t\tfor (var i = 0; i < randseed.length; i++) {\n\t\t\trandseed[i] = 0;\n\t\t}\n\t\tfor (var i = 0; i < seed.length; i++) {\n\t\t\trandseed[i%4] = ((randseed[i%4] << 5) - randseed[i%4]) + seed.charCodeAt(i);\n\t\t}\n\t}\n\n\tfunction rand() {\n\t\t// based on Java's String.hashCode(), expanded to 4 32bit values\n\t\tvar t = randseed[0] ^ (randseed[0] << 11);\n\n\t\trandseed[0] = randseed[1];\n\t\trandseed[1] = randseed[2];\n\t\trandseed[2] = randseed[3];\n\t\trandseed[3] = (randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8));\n\n\t\treturn (randseed[3]>>>0) / ((1 << 31)>>>0);\n\t}\n\n\tfunction createColor() {\n\t\t//saturation is the whole color spectrum\n\t\tvar h = Math.floor(rand() * 360);\n\t\t//saturation goes from 40 to 100, it avoids greyish colors\n\t\tvar s = ((rand() * 60) + 40) + '%';\n\t\t//lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\n\t\tvar l = ((rand()+rand()+rand()+rand()) * 25) + '%';\n\n\t\tvar color = 'hsl(' + h + ',' + s + ',' + l + ')';\n\t\treturn color;\n\t}\n\n\tfunction createImageData(size) {\n\t\tvar width = size; // Only support square icons for now\n\t\tvar height = size;\n\n\t\tvar dataWidth = Math.ceil(width / 2);\n\t\tvar mirrorWidth = width - dataWidth;\n\n\t\tvar data = [];\n\t\tfor(var y = 0; y < height; y++) {\n\t\t\tvar row = [];\n\t\t\tfor(var x = 0; x < dataWidth; x++) {\n\t\t\t\t// this makes foreground and background color to have a 43% (1/2.3) probability\n\t\t\t\t// spot color has 13% chance\n\t\t\t\trow[x] = Math.floor(rand()*2.3);\n\t\t\t}\n\t\t\tvar r = row.slice(0, mirrorWidth);\n\t\t\tr.reverse();\n\t\t\trow = row.concat(r);\n\n\t\t\tfor(var i = 0; i < row.length; i++) {\n\t\t\t\tdata.push(row[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tfunction buildOpts(opts) {\n\t\tvar newOpts = {};\n\n\t\tnewOpts.seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);\n\n\t\tseedrand(newOpts.seed);\n\n\t\tnewOpts.size = opts.size || 8;\n\t\tnewOpts.scale = opts.scale || 4;\n\t\tnewOpts.color = opts.color || createColor();\n\t\tnewOpts.bgcolor = opts.bgcolor || createColor();\n\t\tnewOpts.spotcolor = opts.spotcolor || createColor();\n\n\t\treturn newOpts;\n\t}\n\n\tfunction renderIcon(opts, canvas) {\n\t\topts = buildOpts(opts || {});\n\t\tvar imageData = createImageData(opts.size);\n\t\tvar width = Math.sqrt(imageData.length);\n\n\t\tcanvas.width = canvas.height = opts.size * opts.scale;\n\n\t\tvar cc = canvas.getContext('2d');\n\t\tcc.fillStyle = opts.bgcolor;\n\t\tcc.fillRect(0, 0, canvas.width, canvas.height);\n\t\tcc.fillStyle = opts.color;\n\n\t\tfor(var i = 0; i < imageData.length; i++) {\n\n\t\t\t// if data is 0, leave the background\n\t\t\tif(imageData[i]) {\n\t\t\t\tvar row = Math.floor(i / width);\n\t\t\t\tvar col = i % width;\n\n\t\t\t\t// if data is 2, choose spot color, if 1 choose foreground\n\t\t\t\tcc.fillStyle = (imageData[i] == 1) ? opts.color : opts.spotcolor;\n\n\t\t\t\tcc.fillRect(col * opts.scale, row * opts.scale, opts.scale, opts.scale);\n\t\t\t}\n\t\t}\n\t\treturn canvas;\n\t}\n\n\tfunction createIcon(opts) {\n\t\tvar canvas = document.createElement('canvas');\n\n\t\trenderIcon(opts, canvas);\n\n\t\treturn canvas;\n\t}\n\n\tvar api = {\n\t\tcreate: createIcon,\n\t\trender: renderIcon\n\t};\n\n\tif (typeof module !== \"undefined\") {\n\t\tmodule.exports = api;\n\t}\n\tif (typeof window !== \"undefined\") {\n\t\t window.blockies = api;\n\t}\n\n})();\n","import styled, { css } from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  align-self: stretch;\n  justify-content: center;\n  align-items: ${props => props.align || 'initial'};\n  flex-direction: ${props => props.direction || 'column'};\n  background: ${props => props.theme || 'transparent'};\n  background: ${props => props.gradient || 'undefined'};\n  margin: ${props => props.margin || '0px'};\n  padding: ${props => props.padding || '0px'};\n  overflow: ${props => props.overflow || 'initial'};\n  flex: 1;\n  position: relative;\n`\n\nexport const SectionFS = styled(Section)`\n  min-height: 100vh;\n`\n\nexport const SectionFSHero = styled(Section)`\n  min-height: 100vh;\n  background: rgb(31,23,47);\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\n`\n\nexport const SectionHero = styled(Section)`\n  background: rgb(31,23,47);\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\n`\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: ${props => props.padding || \"40px 0px\"};\n  background: ${props => props.theme || 'transparent'};\n  background: ${props => props.gradient || 'undefined'};\n  position: relative;\n`\n\nexport const ItemBreak = styled.div`\n  flex-basis: 100%;\n`\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: ${props => props.wrap || 'wrap'};\n  position: ${props => props.position || 'relative'};\n  justify-content: center;\n  background: ${props => props.bg || 'transparent'};\n  flex: ${props => props.flex || '1'};\n  flex-direction: ${props => props.direction || 'column'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  padding: ${props => props.padding || \"0px\"};\n  margin: ${props => props.margin || '0px'};\n  min-width: ${props => props.minWidth || 'auto'};\n  max-width: ${props => props.maxWidth || 'initial'};\n  font-size: ${props => props.size || \"inherit\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n  filter: ${props => props.filter || \"none\"};\n\n  width: ${props => props.width || \"auto\" };\n  height: ${props => props.height || \"auto\" };\n\n  border: ${props => props.border || \"none\"};\n\n  border-radius: ${props => props.radius || \"0px\"};\n  overflow: ${props => props.overflow || \"initial\"};\n\n  &:hover & {\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\n  }\n\n  @media (max-width: 768px) {\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\n    text-align: ${props => (props.tabletTextAlign ? props.tabletTextAlign : (props.textAlign ? props.textAlign : \"inherit\")) || \"inherit\"};\n  }\n\n  ${ItemBreak} {\n    width: 0;\n  }\n`\n\nexport const ItemH = styled(Item)`\n  flex-direction: row;\n  flex: ${props => props.flex || '1'};\n\n  ${ItemBreak} {\n    width: auto;\n    height: 0;\n  }\n`\n\nexport const WaveOuter = styled.div`\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: ${props => props.bottom || '-70px'};\n  top: ${props => props.top || 'auto'};\n  transform: ${props => props.transform || 'initial'};\n`;\n\nexport const WaveInner = styled.div`\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  transform: ${props => props.transform || 'initial'};\n`;\n\nexport const Arc = styled.div`\n  position: absolute;\n\toverflow: hidden;\n\twidth: 100%;\n\theight: 300px;\n\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n\n  &:after {\n    content: '';\n    position: absolute;\n  \twidth: 300%;\n  \theight: 300%;\n  \ttop: -25%;\n  \tleft: -100%;\n\n\n    ${ props => props.arcRGB && css`\n      \tbackground: radial-gradient(ellipse at center, ${props.arcRGB}00 0%, ${props.arcRGB}00 50%, ${props.arcRGB}ff 50%, ${props.arcRGB}ff 100%);\n    `};\n  }\n`\n\nexport const H1 = styled.h1`\n  @media (max-width: 480px) {\n    font-size: 2.1rem;\n  }\n`\n\nexport const H2 = styled.h2`\n  color: ${props => props.color || '#000'};\n  font-weight: ${props => props.weight || 600};\n  font-size: ${props => props.size || \"2rem\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n`\n\nexport const H3 = styled.h3`\n  color: ${props => props.color || 'rgb(0 0 0 / 0.5)'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"1rem\"};\n  text-transform: ${props => props.textTransform || \"uppercase\"};\n  margin: ${props => props.margin || \"-15px 0px 20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"0.1em\"};\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n  max-width: ${props => props.maxWidth || 'initial'};\n`\n\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n  display: flex;\n`\n\nexport const P = styled.p`\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n\n  color: ${props => props.color || '#000'};\n  background: ${props => props.bg || 'transparent'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  text-align: ${props => props.textAlign || \"initial\"};\n`\n\nexport const Para = styled(P)`\n  font-weight: ${props => props.weight || 300};\n  letter-spacing: ${props => props.spacing || \"0.02em\"};\n  font-size: ${props => props.size || \"1.1em\"};\n  color: ${props => props.color || \"#000000ee\"};\n`\n\nexport const Span = styled.span`\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n\n  color: ${props => props.color || '#000'};\n  background: ${props => props.bg || 'transparent'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  text-align: ${props => props.textAlign || \"initial\"};\n\n  position: ${props => props.pos || 'initial'};\n  right: ${props => props.right || 'auto'};\n  left: ${props => props.left || 'auto'};\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n\n  z-index: ${props => props.z || 'auto'};\n`\n\nexport const B = styled.span`\n  color: ${props => props.color || '#000'};\n  font-weight: ${props => props.weight || 'bold'};\n`\n\nexport const UL = styled.ul`\n\n`\n\nexport const LI = styled.li`\n  margin: 10px 0px;\n`\n\nexport const Anchor = styled.a`\n  display: flex;\n  flex-direction: ${props => props.direction || 'row'};\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0\"};\n  padding: ${props => props.padding || \"10px 15px\"};\n  letter-spacing: ${props => props.spacing || \"0.2em\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  width: ${props => props.width || \"initial\" };\n\n  position: relative;\n  text-decoration: none;\n  overflow: ${props => props.overflow || \"hidden\"};\n  z-index: 3;\n\n  filter: ${props => props.filter || \"none\"};\n\n  cursor: pointer;\n  pointer: hand;\n\n  &:hover & {\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\n    display: none;\n    z-index: -1;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hoverBG || \"#000\"};\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &:hover:before {\n    display: block;\n  }\n\n  &:hover:after {\n    opacity: 0.08;\n  }\n  &:active:after {\n    opacity: 0.15;\n  }\n`\n\nexport const A = styled(Anchor)`\n  display: inline;\n  color: #e1087f;\n  background: transparent;\n  padding: 0px;\n  letter-spacing: inherit;\n  text-transform: initial;\n`\n\nexport const C = styled(Anchor)`\n  display: inline;\n  color: #4292e4;\n  background: transparent;\n  padding: 0px;\n  letter-spacing: inherit;\n  text-transform: initial;\n`\n\nexport const Button = styled.button`\n  display: flex;\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"tranparent\"};\n  margin: ${props => props.margin || \"0\"};\n  padding: ${props => props.padding || \"10px 15px\"};\n  letter-spacing: ${props => props.spacing || \"initial\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  text-transform: ${props => props.textTransform || \"initial\"};\n\n  position: relative;\n  text-decoration: none;\n  overflow: ${props => props.overflow || \"hidden\"};\n  z-index: 3;\n\n  cursor: pointer;\n  pointer: hand;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\n    display: none;\n    z-index: -1;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hoverBG || \"#000\"};\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &:hover:before {\n    display: block;\n  }\n\n  &:hover:after {\n    opacity: 0.08;\n  }\n  &:active:after {\n    opacity: 0.15;\n  }\n\n  & > div {\n    display: flex;\n  }\n`\n\nexport const Showoff = styled.div`\n  position: absolute;\n  right: ${props => props.right || 'auto'};\n  left: ${props => props.left || 'auto'};\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n  transform: ${props => props.transform || 'initial'};\n  opacity: ${props => props.opacity || 'initial'};\n\n  @media (max-width: 768px) {\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\n\n    right: ${props => (props.tabletRight ? props.tabletRight : (props.right ? props.right : \"auto\")) || \"auto\"};\n    left: ${props => (props.tabletLeft ? props.tabletLeft : (props.left ? props.left : \"auto\")) || \"auto\"};\n    top: ${props => (props.tabletTop ? props.tabletTop : (props.top ? props.top : \"auto\")) || \"auto\"};\n    bottom: ${props => (props.tabletBottom ? props.tabletBottom : (props.bottom ? props.bottom : \"auto\")) || \"auto\"};\n\n    transform: ${props => (props.tabletTransform ? props.tabletTransform : (props.transform ? props.transform : \"auto\")) || \"auto\"};\n\n    opacity: ${props => (props.tabletOpacity ? props.tabletOpacity : (props.opacity ? props.opacity : \"auto\")) || \"initial\"};\n  }\n`\n\nexport const FormSubmision = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  position: relative;\n`\n\nexport const Input = styled.input`\n  display: ${props => props.display || 'flex'};\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#000\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  outline: ${props => props.outline || \"none\"};\n  overflow: ${props => props.overflow || \"hidden\"};\n  position: relative;\n\n  cursor: ${props => props.cursor || \"initial\"};\n  pointer: ${props => props.hand || \"initial\"};\n\n  &:focus + span {\n    opacity: 0;\n\n    -webkit-transition: all 0.2s ease-in-out;\n    -moz-transition: all 0.2s ease-in-out;\n    -o-transition: all 0.2s ease-in-out;\n    transition: all 0.2s ease-in-out;\n  }\n`\n\nexport const TextField = styled.textarea`\n  display: flex;\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#000\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  outline: ${props => props.outline || \"none\"};\n  overflow: ${props => props.overflow || \"hidden\"};\n  position: relative;\n  resize: vertical;\n\n  &:focus + span {\n    opacity: 0;\n\n    -webkit-transition: all 0.2s ease-in-out;\n    -moz-transition: all 0.2s ease-in-out;\n    -o-transition: all 0.2s ease-in-out;\n    transition: all 0.2s ease-in-out;\n  }\n`\n"],"sourceRoot":""}
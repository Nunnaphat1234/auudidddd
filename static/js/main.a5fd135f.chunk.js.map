{"version":3,"sources":["helpers/CryptoHelper.js","connectors.ts","hooks.ts","helpers/EPNSCoreHelper.js","assets/Device.js","components/ViewNotificationItem.js","components/NotificationToast.js","segments/Feedbox.tsx","components/DisplayNotice.js","singletons/ChannelsDataStore.js","singletons/UsersDataStore.js","components/ViewChannelItem.js","components/Faucets.js","segments/ViewChannels.tsx","components/ViewInfoItem.js","segments/Info.tsx","components/SendNotifications.tsx","segments/ChannelOwnerDashboard.js","segments/ChannelCreationDashboard.js","pages/Home.js","components/BlockiesIdenticon.js","components/Profile.tsx","components/Bell.js","segments/Header.tsx","App.tsx","serviceWorker.js","index.js","../../contracts/src/addresses.js","../../contracts/src/index.js","components/CreateChannel.js","components/blockies.js","components/SharedStyling.js"],"names":["CryptoJS","require","CryptoHelper","encryptWithAES","message","key","AES","encrypt","toString","decryptWithAES","decrypt","enc","Utf8","encryptWithECIES","publicKey","a","compressedKey","EthCrypto","compress","this","encryptWithPublicKey","encryptedSecret","decryptWithECIES","privateKey","decryptWithPrivateKey","pubKeyUint8Array","Uint8Array","from","Buffer","convertedKeyAsUint8Array","publicKeyConvert","convertedPublicKeyHex","pubKey","then","encryptedBuffers","cipher","iv","ephemPublicKey","ciphertext","mac","input","keyConvert","concat","buf","encrypted","length","keyConvertBuffer","uncompressedKey","twoStripped","substring","encryptedBuffer","decryptedBuffer","encryptionDecryptionPublicToPrivateTest","startTime","Date","console","log","publicKeyByPrivateKey","msg","encryptionTime","getTime","decryptMsg","decryptionTime","outputMsgPayload","secret","subject","calltoaction","imageurl","pkey","secretEncrypted","asubE","amsgE","actaE","aimgE","makeid","result","toISOString","characters","charactersLength","i","charAt","Math","floor","random","config","RPC_URLS","process","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","3","bridge","qrcode","pollingInterval","ledger","LedgerConnector","chainId","url","portis","TrezorConnector","manifestEmail","manifestAppUrl","PortisConnector","dAppId","networks","EPNSCoreHelper","getOwnerInfo","contract","Promise","resolve","reject","governance","response","catch","err","getUserInfo","user","users","mappings","addr","getChannelAddressFromID","channelID","mapAddressChannels","getChannelInfo","channel","channels","getChannelEvent","startBlock","updateBlock","filter","filters","AddChannel","block","UpdateChannel","queryFilter","filteredResponse","forEach","item","args","ethers","utils","toUtf8String","identity","getJsonFileFromIdentity","ids","split","fetch","json","getChannelJsonFromChannelAddress","channelStartBlock","toNumber","channelUpdateBlock","getChannelJsonFromUserAddress","getTotalNumberOfChannels","channelsCount","getChannelsMetaLatestToOldest","atIndex","numChannels","channelsInfo","channelArrays","assignedChannelID","push","promises","map","all","getTotalNumberOfUsers","usersCount","getPublicKey","address","getSubscribedStatus","memberExists","getTotalSubscribedChannels","subscribedCount","getFairShareOfUserAtBlock","userActivated","calcAllChannelsRatio","getPoolFunds","poolFunds","formatBigNumberToMetric","bignumber","convertToCurrency","div","metricFormatter","e","num","digits","si","value","symbol","toFixed","replace","size","Device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","Container","styled","SkeletonWrapper","props","atW","atH","borderRadius","marginBottom","marginRight","ChannelTitle","ChannelTitleLink","ChannelDesc","ChannelDescLabel","label","ChannelMeta","ChannelMetaBox","Pool","PoolShare","ViewNotificationItem","notificationObject","useWeb3React","account","library","React","useState","notification","setNotification","loading","setLoading","useEffect","notifications","id","color","width","height","notificationTitle","notificationBody","moment","unix","indexTimestamp","local","format","Toaster","NotificationToast","clearToast","LoaderToast","toast","dark","onClick","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Items","ContainerInfo","Feedbox","epnsReadProvider","setNotifications","showToast","page","setPage","paginatedNotifications","setPaginatedNotifications","notificationsVisited","GET_NOTIFICATIONS","gql","useQuery","error","data","subscribe","prev","slice","newNotification","onReceive","fn","event","cb","eventChannelAddress","eventUserAddress","identityHex","userAddress","hex2ascii","notificationId","toLocaleLowerCase","ipfsId","ipfsNotification","channelAddress","now","title","body","type","isSubscribed","on","off","bind","onScroll","currentTarget","scrollTop","clientHeight","scrollHeight","Object","keys","index","Notice","span","theme","css","DisplayNotice","animationIn","animationOut","durationOut","ChannelEvents","ChannelsDataStore","state","channelsMeta","channelsJson","callbacks","init","resetChannelsListeners","initChannelsListenersAsync","getChannelsCountAsync","removeAllListeners","listenForAddChannelAnyAsync","listenForAddChannelSelfAsync","listenForUpdateChannelAnyAsync","listenForUpdateChannelSelfAsync","listenForSubscribeAnyAsync","listenForSubscribeSelfAsync","listenForUnsubscribeAnyAsync","listenForUnsubscribeSelfAsync","ipfs","incrementChannelsCountAsync","entries","callback","Subscribe","count","memberCount","bigNumberify","Unsubscribe","addCallbacks","callbackType","callbackID","removeCallbacks","incrementCount","getChannelsMetaAsync","channelsDummy","getChannelMetaAsync","sort","b","getChannelMetaViaAddressAsync","getChannelJsonAsync","instance","UserEvents","UsersDataStore","userMeta","ownerMeta","resetUsersListeners","initUsersListenersAsync","getOwnerMetaAsync","getUsersCountAsync","getUserMetaAsync","listenForSubscribedAsync","listenForUnsubscribedAsync","publicKeyRegistered","listenForPublicKeyBroadcastAsync","add","sub","PublicKeyRegistered","once","incrementUsersCountAsync","ChannelLogo","ChannelLogoOuter","ChannelLogoInner","ChannelLogoImg","img","ChannelInfo","Subscribers","SubscribersCount","LineBreak","ChannelActions","ChannelActionButton","button","disabled","ActionTitle","hideit","ActionLoader","SkeletonButton","SubscribeButton","UnsubscribeButton","OwnerButton","ToasterMsg","ViewChannelItem","channelObject","isOwner","epnsWriteProvide","channelJson","setChannelJson","subscribed","setSubscribed","txInProgress","setTxInProgress","fetchChannelJson","registerCallbacks","subs","subscribeAction","getSigner","signMessage","signature","recoverPublicKey","arrayify","hashMessage","formattedPubKey","withPublicKey","subscribeWithPublicKey","tx","txToast","waitForTransaction","hash","update","render","TYPE","SUCCESS","name","ERROR","unsubscribeAction","unsubscribe","src","icon","href","target","rel","info","poolContribution","Faucets","margin","self","bg","radius","padding","border","overflow","align","pos","top","right","weight","direction","spacing","textAlign","textTransform","ViewChannels","controlAt","setChannels","setUser","owner","setOwner","fetchChannels","ownerAddr","channellized","AppLink","AppLinkText","ViewInfoItem","dotenv","InfoBox","Info","NFTypes","DropdownStyledParent","DropdownStyled","Dropdown","SendNotifications","active","nfProcessing","setNFProcessing","nfRecipient","setNFRecipient","nfType","setNFType","nfSub","setNFSub","nfSubEnabled","setNFSubEnabled","nfMsg","setNFMsg","nfCTA","setNFCTA","nfCTAEnabled","setNFCTAEnabled","nfMedia","setNFMedia","nfMediaEnabled","setNFMediaEnabled","nfInfo","setNFInfo","handleSendMessage","preventDefault","notificationToast","signer","Contract","addresses","epnscore","abis","nsub","nmsg","asub","amsg","acta","aimg","k","publickey","storagePointer","isEmpty","JSON","stringify","at","identityBytes","toUtf8Bytes","anotherSendTxPromise","sendNotification","INFO","wait","field","trim","flex","justify","onSubmit","minWidth","options","onChange","option","placeholder","display","Switch","checked","required","z","borderBottom","rows","autocomplete","cursor","ChannelOwnerDashboard","ChannelCreationDashboard","CreateChannel","Controls","ControlButton","ControlImage","ControlText","ControlChannelContainer","ControlChannelImage","ControlChannelText","Interface","Home","setBadgeCount","bellPressed","ReactGA","pageview","setEpnsReadProvider","epnsWriteProvider","setEpnsWriteProvider","setControlAt","adminStatusLoaded","setAdminStatusLoaded","channelAdmin","setChannelAdmin","contractInstance","signerInstance","userClickedAt","checkUserForChannelRights","controlIndex","listenerForChannelRights","BlockiesIdenticon","seed","opts","bgcolor","scale","spotcolor","draw","prevProps","blockies","canvas","createElement","ref","Component","Blocky","BlockyInner","Wallet","Profile","setAddress","ens","setENS","ensFetched","setENSFetched","lookupAddress","toLowerCase","tadaaa","keyframes","BellImage","ringme","BellImageAbs","Badge","Bell","badgeCount","bellPressedCB","badge","setBadge","ring","setRing","setResetRinger","setTimeout","className","HeaderContainer","Section","Logo","PrimaryTheme","ThirdTheme","Connection","phase","Header","context","deactivate","showLoginControls","setShowLoginControls","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","getErrorMessage","web3Connectors","Injected","obj","logo","WalletConnect","Ledger","Portis","getLibrary","provider","connector","providers","Web3Provider","App","activate","setBellPressed","initialize","activatingConnector","setActivatingConnector","triedEager","tried","setTried","isAuthorized","useEagerConnect","suppress","ethereum","window","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","ParentContainer","HomeContainer","ProviderLogo","srcSet","maxWidth","currentConnector","image","ProviderButton","ProviderImage","newestOnTop","rtl","pauseOnFocusLoss","header","ToastContainer","attrs","Boolean","location","hostname","match","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","ceaErc20","dai","aDai","erc20","erc20Abi","ownable","ownableAbi","epnscoreAbi","daiAbi","Step","activeBG","Line","h1","Minter","Input","textarea","processing","setProcessing","processingInfo","setProcessingInfo","uploadDone","setUploadDone","stakeFeesChoosen","setStakeFeesChoosen","channelInfoDone","setChannelInfoDone","channelName","setChannelName","channelInfo","setChannelInfo","channelURL","setChannelURL","channelFile","setChannelFile","channelStakeFees","setChannelStakeFees","stepFlow","setStepFlow","handleLogoSizeLimitation","base64","sizeOf","base64Data","pop","dimensions","success","handleCreateChannel","daiContract","fees","parseUnits","sendTransactionPromise","approve","createChannelWithFees","mintDai","amount","mintTransactionPromise","mint","onChangeStatus","status","meta","file","files","allFiles","f","reader","FileReader","readAsDataURL","onloadend","onDrop","maxFiles","multiple","accept","defaultValue","onChangeCommitted","aria-labelledby","valueLabelDisplay","step","marks","min","max","maxlength","randseed","Array","rand","t","createColor","buildOpts","newOpts","pow","charCodeAt","seedrand","renderIcon","imageData","dataWidth","ceil","mirrorWidth","y","row","x","r","reverse","createImageData","sqrt","cc","getContext","fillStyle","fillRect","col","api","create","module","exports","section","gradient","Content","ItemBreak","Item","wrap","filterHover","hover","tabletAlign","tabletTextAlign","ItemH","H2","bottom","transform","arcRGB","h2","family","H3","h3","P","p","Span","left","B","Anchor","ul","li","hoverBG","A","Button","FormSubmision","opacity","tabletRight","tabletLeft","tabletTop","tabletBottom","tabletTransform","tabletOpacity","form","outline","hand","TextField"],"mappings":"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","file":"static/js/main.a5fd135f.chunk.js","sourcesContent":["import EthCrypto from 'eth-crypto';\nimport {encrypt, decrypt} from 'eccrypto';\nimport { publicKeyConvert, publicKeyVerify } from 'secp256k1-v4';\n\nvar CryptoJS = require(\"crypto-js\");\n\nconst CryptoHelper = {\n  // To Encrypt with AES\n  encryptWithAES: function(message, key) {\n    return CryptoJS.AES.encrypt(message, key).toString();\n  },\n  // To Decrypt with AES\n  decryptWithAES: function(message, key) {\n    let bytes  = CryptoJS.AES.decrypt(message, key);\n    return bytes.toString(CryptoJS.enc.Utf8);\n  },\n  // To Form Encryted Secret, no more than 15 characters supported\n  encryptWithECIES: async function(message, publicKey) {\n    const compressedKey = EthCrypto.publicKey.compress(publicKey);\n\n    const encryptedSecret = await this.encryptWithPublicKey(message, compressedKey);\n\n    // Not using it since sqlite2 has some error with this\n    // const compressedEncryptedSecret = EthCrypto.hex.compress(encryptedSecret);\n\n    return encryptedSecret;\n  },\n  // To Form Decrypted Secret, no more than 15 characters supported\n  decryptWithECIES: async function(message, privateKey) {\n    // Message is always compressed, not using because sqlite2 has some error with this\n    //const uncompressedMessage = EthCrypto.hex.decompress(message).substr(2); // to remove 0x\n\n    return await this.decryptWithPrivateKey(message, privateKey);\n  },\n  // Encryption with public key\n  encryptWithPublicKey: async function(message, publicKey) {\n    // Convert compressed public key, starts with 03 or 04\n    const pubKeyUint8Array = Uint8Array.from(\n      new Buffer(publicKey, 'hex')\n    );\n    //console.log(\"[ENCRYPTION] Public Key Uint8Array: \" + pubKeyUint8Array);\n\n    const convertedKeyAsUint8Array = publicKeyConvert(pubKeyUint8Array, false);\n    //console.log(\"[ENCRYPTION] Public Key Converted: \" + convertedKeyAsUint8Array);\n\n    const convertedPublicKeyHex = new Buffer(convertedKeyAsUint8Array);\n    //console.log(\"[ENCRYPTION] Converted Public Key Buffer: \" + convertedPublicKeyHex);\n\n    const pubKey = new Buffer(convertedPublicKeyHex, 'hex');\n    //console.log(\"[ENCRYPTION] pubkey getting sentout for encrypt: \" + pubKey);\n\n    return encrypt(\n        pubKey,\n        Buffer(message)\n    ).then(encryptedBuffers => {\n      const cipher = {\n          iv: encryptedBuffers.iv.toString('hex'),\n          ephemPublicKey: encryptedBuffers.ephemPublicKey.toString('hex'),\n          ciphertext: encryptedBuffers.ciphertext.toString('hex'),\n          mac: encryptedBuffers.mac.toString('hex')\n      };\n      // use compressed key because it's smaller\n      // const compressedKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(cipher.ephemPublicKey), true)).toString('hex')\n      const input = Uint8Array.from(\n        new Buffer(cipher.ephemPublicKey, 'hex')\n      );\n      const keyConvert = publicKeyConvert(input, true)\n      // console.log(\"[ENCRYPTION] Coverted key: \" + keyConvert);\n\n      const keyConvertBuffer = new Buffer(keyConvert);\n      // console.log(\"[ENCRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\n      // console.log(keyConvertBuffer);\n\n      //console.log(keyConvert);\n      const compressedKey = keyConvertBuffer.toString('hex')\n      // console.log(\"[ENCRYPTION] Compressed key in buffer : \");\n      // console.log(compressedKey);\n\n      const ret = Buffer.concat([\n        new Buffer(cipher.iv, 'hex'), // 16bit\n        new Buffer(compressedKey, 'hex'), // 33bit\n        new Buffer(cipher.mac, 'hex'), // 32bit\n        new Buffer(cipher.ciphertext, 'hex') // var bit\n      ]).toString('hex')\n\n      return ret\n    });\n  },\n  // Decryption with public key\n  decryptWithPrivateKey: async function(message, privateKey) {\n    let encrypted = message;\n    const buf = new Buffer(encrypted, 'hex');\n    // console.log(\"[DECRYPTION] Buffer Passed: \" + buf);\n\n    encrypted = {\n      iv: buf.toString('hex', 0, 16),\n      ephemPublicKey: buf.toString('hex', 16, 49),\n      mac: buf.toString('hex', 49, 81),\n      ciphertext: buf.toString('hex', 81, buf.length)\n    };\n    // decompress publicKey\n    // encrypted.ephemPublicKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(encrypted.ephemPublicKey), true)).toString('hex')\n    const input = Uint8Array.from(new Buffer(encrypted.ephemPublicKey, 'hex'));\n    const keyConvert = publicKeyConvert(input, false)\n    // console.log(\"[DECRYPTION] Coverted key: \" + keyConvert);\n\n    const keyConvertBuffer = new Buffer(keyConvert);\n    // console.log(\"[DECRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\n    // console.log(keyConvertBuffer);\n\n    //console.log(keyConvert);\n    const uncompressedKey = keyConvertBuffer.toString('hex')\n    // console.log(\"[DECRYPTION] Uncompressed key in buffer : \");\n    // console.log(uncompressedKey);\n\n    encrypted.ephemPublicKey = uncompressedKey;\n    const twoStripped = privateKey.substring(2)\n\n    const encryptedBuffer = {\n      iv: new Buffer(encrypted.iv, 'hex'),\n      ephemPublicKey: new Buffer(encrypted.ephemPublicKey, 'hex'),\n      ciphertext: new Buffer(encrypted.ciphertext, 'hex'),\n      mac: new Buffer(encrypted.mac, 'hex')\n    };\n\n    return decrypt(\n      new Buffer(twoStripped, 'hex'),\n      encryptedBuffer\n    ).then(decryptedBuffer => decryptedBuffer.toString());\n  },\n  // Testing of Encryption and Decryption from Public to Private key\n  encryptionDecryptionPublicToPrivateTest: async function(privateKey) {\n    const startTime = new Date();\n    console.log(\"[ENCRYPTION / DECRYPTION TEST STARTED] - \" + startTime);\n\n    const publicKey = EthCrypto.publicKeyByPrivateKey(privateKey);\n    const compressedKey = EthCrypto.publicKey.compress(publicKey); // is String\n    //console.log(compressedKey);\n\n    // const bytesCompKey = Uint8Array.from(compressedKey);\n    //console.log(bytesCompKey);\n\n    const msgToEncrypt = \"PartialStringAS\";\n    const msg = await this.encryptWithPublicKey(msgToEncrypt, compressedKey);\n    console.log(\"Encryped Message With compressed public key:\" + msg);\n\n    const encryptionTime = new Date().getTime() - startTime.getTime();\n    console.log(\"[ENCRYPTION / DECRYPTION ENCRYPTION DONE] - \" + encryptionTime / 1000 + \" secs\");\n\n    // Decrypt this message\n    const decryptMsg = await this.decryptWithPrivateKey(msg, privateKey);\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTED MESSAGE] - '\" + decryptMsg + \"'\");\n\n    const decryptionTime = new Date().getTime() - startTime.getTime() - encryptionTime;\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTION DONE] - \" + decryptionTime / 1000 + \" secs\");\n  },\n  // To output messge payload if required\n  outputMsgPayload: async function(secret, subject, message, calltoaction, imageurl, pkey) {\n    // Output AES\n    console.log(\"[AES ENCRYTED FORMAT (\" + new Date() + \")\");\n    console.log(\"---------------------\");\n    console.log(\"secret --> \");\n    const secretEncrypted = await this.encryptWithECIES(secret, pkey);\n    const asubE = this.encryptWithAES(subject, secret);\n    const amsgE = this.encryptWithAES(message, secret);\n    const actaE = this.encryptWithAES(calltoaction, secret);\n    const aimgE = this.encryptWithAES(imageurl, secret);\n\n    console.log(secretEncrypted);\n    console.log(\"asub --> \");\n    console.log(asubE);\n    console.log(\"amsg --> \");\n    console.log(amsgE);\n    console.log(\"acta --> \");\n    console.log(actaE);\n    console.log(\"aimg --> \");\n    console.log(aimgE);\n    console.log(\"decrypted secret --> \");\n    console.log(await this.decryptWithECIES(secretEncrypted, pkey));\n    console.log(\"decrypted asub --> \");\n    console.log(this.decryptWithAES(asubE, secret));\n    console.log(\"decrypted amsg --> \");\n    console.log(this.decryptWithAES(amsgE, secret));\n    console.log(\"decrypted acta --> \");\n    console.log(this.decryptWithAES(actaE, secret));\n    console.log(\"decrypted aimg --> \");\n    console.log(this.decryptWithAES(aimgE, secret));\n  },\n  makeid: function (length) {\n     var result           = '[' + new Date().toISOString() + '] ';\n     var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n     var charactersLength = characters.length;\n     for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n     }\n     return result;\n  }\n};\n\nexport default CryptoHelper;\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { PortisConnector } from '@web3-react/portis-connector'\n// import { NetworkConnector } from '@web3-react/network-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\n// import { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { LedgerConnector } from '@web3-react/ledger-connector'\nimport { TrezorConnector } from '@web3-react/trezor-connector'\n// import { FrameConnector } from '@web3-react/frame-connector'\n// import { AuthereumConnector } from '@web3-react/authereum-connector'\n// import { FortmaticConnector } from '@web3-react/fortmatic-connector'\n// import { SquarelinkConnector } from '@web3-react/squarelink-connector'\n// import { TorusConnector } from '@web3-react/torus-connector'\n\nrequire('dotenv').config();\n\nconst POLLING_INTERVAL = 12000\nconst RPC_URLS: { [chainId: number]: string } = {\n  3: process.env.REACT_APP_RPC_URL_3 as string\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds: [3] })\n\n// export const network = new NetworkConnector({\n//   urls: { 3: RPC_URLS[3] },\n//   defaultChainId: 3,\n//   pollingInterval: POLLING_INTERVAL\n// })\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { 3: RPC_URLS[3] },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL\n})\n//\n// export const walletlink = new WalletLinkConnector({\n//   url: RPC_URLS[1],\n//   appName: 'web3-react example'\n// })\n//\nexport const ledger = new LedgerConnector({ chainId: 3, url: RPC_URLS[3], pollingInterval: POLLING_INTERVAL })\n\nexport const trezor = new TrezorConnector({\n  chainId: 3,\n  url: RPC_URLS[3],\n  pollingInterval: POLLING_INTERVAL,\n  manifestEmail: 'support@epns.io',\n  manifestAppUrl: 'https://app.epns.io'\n})\n\n//\n// export const frame = new FrameConnector({ supportedChainIds: [1] })\n//\n// export const authereum = new AuthereumConnector({ chainId: 42 })\n//\n// export const fortmatic = new FortmaticConnector({ apiKey: process.env.FORTMATIC_API_KEY as string, chainId: 4 })\n\nexport const portis = new PortisConnector({ dAppId: 'cfefa032-9afd-4833-bfb4-2b0cb7ec3413' as string, networks: [3, 100] })\n\n// export const squarelink = new SquarelinkConnector({\n//   clientId: process.env.SQUARELINK_CLIENT_ID as string,\n//   networks: [1, 100]\n// })\n\n// export const torus = new TorusConnector({ chainId: 1 })\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from './connectors'\n\nrequire('dotenv').config();\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}\n","import React from \"react\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { ethers } from \"ethers\";\nimport { parseEther, bigNumber } from 'ethers/utils'\n\n// FeedDB Helper Function\nconst EPNSCoreHelper = {\n  // To get owner info\n  getOwnerInfo: async (contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.governance()\n        .then(response => {\n          if (enableLogs) console.log(\"getOwnerInfo() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getOwnerInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To get user info\n  getUserInfo: async (user, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users(user)\n        .then(response => {\n          const mappings = { ...response };\n          mappings.addr = user;\n\n          if (enableLogs) console.log(\"getUserInfo() --> %o\", mappings);\n          resolve(mappings);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getUserInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel address from it's id\n  getChannelAddressFromID: async (channelID, contract) => {\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      contract.mapAddressChannels(channelID)\n        .then(response => {\n          console.log(\"getChannelAddressFromID() --> %o\", response.toString());\n          resolve(response.toString());\n        })\n        .catch(err => { console.log(\"!!!Error, getChannelAddressFromID() --> %o\", err); reject(err); });\n    })\n  },\n  // To retrieve a channel's Info from channel address\n  getChannelInfo: async (channel, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      contract.channels(channel)\n        .then(response => {\n          // Add an extra field for future info\n          const mappings = { ...response };\n          mappings.addr = channel;\n\n          if (enableLogs) console.log(\"getChannelInfo() --> %o\", mappings);\n          resolve(mappings);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel's AddChannel event\n  getChannelEvent: async (channel, startBlock, updateBlock, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n\n      // To get channel ipfs hash from channel info\n      let filter = contract.filters.AddChannel(channel);\n      let block = startBlock;\n      if (startBlock != updateBlock) {\n        filter = contract.filters.UpdateChannel(channel);\n        block = updateBlock;\n      }\n\n      contract.queryFilter(filter, block, block)\n        .then(response => {\n          let filteredResponse;\n\n          if (enableLogs) console.log(\"getChannelEvent() --> Finding: %s in | %o |\", channel, response );\n\n          response.forEach(function (item) {\n            if (item.args.channel.toString() == channel.toString()) {\n              if (enableLogs) console.log(\"getChannelEvent() --> Selected Channel %o: \", item);\n              filteredResponse = ethers.utils.toUtf8String(item.args.identity);\n            }\n          });\n\n          if (enableLogs) console.log(\"getChannelEvent() --> Filtered Channel: %o\", filteredResponse);\n          resolve(filteredResponse);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelEvent() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Retrive IPFS File from ipfshash\n  getJsonFileFromIdentity: async(identity) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Split Channel Identity, delimeter of identity is \"+\"\n      const ids = identity.split(\"+\"); // First segment is storage type, second is the pointer to it\n\n      if (ids[0] == 1) {\n        // IPFS HASH\n        // Form Gateway URL\n        const url = \"https://ipfs.io/ipfs/\" + ids[1];\n        fetch(url)\n          .then(response => response.json())\n          .then(response => {\n            if (enableLogs) console.log(\"getJsonFileFromIdentity() --> %o\", response);\n            resolve(response);\n          })\n          .catch(err => {\n            console.log(\"!!!Error, getJsonFileFromIdentity() --> %o\", err);\n            reject(err);\n          });\n      }\n\n    });\n  },\n  // Helper to get Channel from Channel's address\n  getChannelJsonFromChannelAddress: async (channel, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      EPNSCoreHelper.getChannelInfo(channel, contract)\n        .then(response => EPNSCoreHelper.getChannelEvent(channel, response.channelStartBlock.toNumber(), response.channelUpdateBlock.toNumber(), contract))\n        .then(response => EPNSCoreHelper.getJsonFileFromIdentity(response))\n        .then(response => {\n          if (enableLogs) console.log(\"getChannelJsonFromChannelAddress() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelJsonFromChannelAddress() --> %o\", err);\n          reject(err);\n        });\n    });\n  },\n  // Helper to get Channel from User's address\n  getChannelJsonFromUserAddress: async (user, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      EPNSCoreHelper.getUserInfo(user, contract)\n        .then(response => EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract))\n        .then(response => {\n          if (enableLogs) console.log(\"getChannelJsonFromUserAddress() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelJsonFromUserAddress() --> %o\", err);\n          reject(err);\n        });\n    });\n  },\n  // Get Total Number of Channels\n  getTotalNumberOfChannels: async (contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.channelsCount()\n        .then(response => {\n          if (enableLogs) console.log(\"getTotalNumberOfChannels() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getTotalNumberOfChannels() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Get channels address given number of channels, , atIndex: -1 is start from latest, numChannels: -1 is return all\n  getChannelsMetaLatestToOldest: async (atIndex, numChannels, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      EPNSCoreHelper.getTotalNumberOfChannels(contract)\n        .then(async (response) => {\n          let channelsInfo = [];\n          const channelsCount = response;\n\n          if (atIndex > channelsCount || atIndex == -1) {\n            atIndex = channelsCount - 1;\n          }\n\n          if (numChannels == -1) {\n            numChannels = channelsCount;\n          }\n\n          // Get channels\n          let channelArrays = [];\n\n          // prefil and then refil\n          let count = 0;\n          for (let i = numChannels - 1; i >= 0; i--) {\n            const assignedChannelID = atIndex - i;\n            channelArrays.push(assignedChannelID);\n          }\n\n          const promises = channelArrays.map(async (channelID) => {\n            await EPNSCoreHelper.getChannelAddressFromID(channelID, contract)\n              .then(response => EPNSCoreHelper.getChannelInfo(response, contract))\n              .then(response => {\n                if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(%d, %d) --> %o\", channelID, numChannels, channelsInfo);\n                channelsInfo = [response, ...channelsInfo];\n              })\n              .catch(err => console.log(\"Error in channel: %d | skipping...\", channelID))\n          });\n\n          // wait until all promises are resolved\n          await Promise.all(promises);\n\n          if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(Index: %d, Number: %d) --> %o\", atIndex, numChannels, channelsInfo);\n          resolve(channelsInfo);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelsMetaLatestToOldest() --> %o\", err);\n          reject(err);\n        })\n    });\n  },\n  // Get Total Number of Users\n  getTotalNumberOfUsers: async (contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.usersCount()\n        .then(response => {\n          console.log(\"getTotalNumberOfUsers() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => { console.log(\"!!!Error, getTotalNumberOfUsers() --> %o\", err); reject(err); });\n    })\n  },\n  // To retrieve public key of a user\n  getPublicKey: async (address, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel ipfs hash from channel info\n      let filteredResponse;\n      contract.queryFilter('PublicKeyRegistered')\n        .then(response => {\n\n          response.forEach(function (item) {\n            if (item.args[0] == address) {\n              filteredResponse = item;\n            }\n          });\n\n          if (enableLogs) console.log(\"Public Key Registry Response: \" + response);\n          if (enableLogs) console.log(\"Public Key Registry Filtered: \" + filteredResponse);\n\n          if (!filteredResponse || filteredResponse.length == 0) {\n            resolve(null)\n          }\n          else {\n            resolve(filteredResponse.args[1]);\n          }\n\n        })\n        .catch((err) => {\n          console.log(err);\n          reject(err);\n        });\n    })\n  },\n  // Get Total Subsbribed Channels\n  getSubscribedStatus: async (user, channel, contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.memberExists(user, channel)\n        .then(response => {\n          console.log(\"getSubscribedStatus() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => { console.log(\"!!!Error, getSubscribedStatus() --> %o\", err); reject(err); });\n    })\n  },\n  // Get Total Subsbribed Channels\n  getTotalSubscribedChannels: async (user, contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users[user].subscribedCount()\n        .then(response => {\n          console.log(\"getTotalSubscribedChannels() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => { console.log(\"!!!Error, getTotalSubscribedChannels() --> %o\", err); reject(err); });\n    })\n  },\n  // Get Fair Share\n  getFairShareOfUserAtBlock: async(user, block, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users(user)\n        .then((response) => {\n          if (response.userActivated) {\n            contract.calcAllChannelsRatio(user, block)\n              .then(response => {\n                if (enableLogs) console.log(\"calcAllChannelsRatio() --> %o\", response);\n                resolve(response);\n              })\n              .catch(err => {\n                console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\n                reject(err);\n              });\n          }\n          else {\n            if (enableLogs) console.log(\"!!!Warning, calcAllChannelsRatio() --> User not activated\");\n            reject(\"User not activated\");\n          }\n        })\n        .catch(err => {\n          console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Get Pool Funds\n  getPoolFunds: async(contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      contract.poolFunds()\n        .then(response => {\n          if (enableLogs) console.log(\"getPoolFunds() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getPoolFunds() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Helper Functions\n  // To format Big Number\n  formatBigNumberToMetric: (bignumber, convertToCurrency) => {\n    try {\n      if (convertToCurrency) {\n        bignumber = bignumber.div(100000000000000);\n        bignumber = bignumber.div(10000);\n      }\n      bignumber = bignumber.toNumber();\n      return EPNSCoreHelper.metricFormatter(bignumber, 2);\n    }\n    catch (e) {\n      console.log(e);\n      return \"---\";\n    }\n  },\n  // Metric Formatter, thanks: https://stackoverflow.com/questions/9461621/format-a-number-as-2-5k-if-a-thousand-or-more-otherwise-900\n  metricFormatter: (num, digits) => {\n    var si = [\n      { value: 1, symbol: \"\" },\n      { value: 1E3, symbol: \"k\" },\n      { value: 1E6, symbol: \"M\" },\n      { value: 1E9, symbol: \"G\" },\n      { value: 1E12, symbol: \"T\" },\n      { value: 1E15, symbol: \"P\" },\n      { value: 1E18, symbol: \"E\" }\n    ];\n    var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n    var i;\n    for (i = si.length - 1; i > 0; i--) {\n      if (num >= si[i].value) {\n        break;\n      }\n    }\n    return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\n  },\n\n}\n\nexport default EPNSCoreHelper;\n","const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px'\n}\n\nexport const Device = {\n  mobileS: `(max-width: ${size.mobileS})`,\n  mobileM: `(max-width: ${size.mobileM})`,\n  mobileL: `(max-width: ${size.mobileL})`,\n  tablet: `(max-width: ${size.tablet})`,\n  laptop: `(max-width: ${size.laptop})`,\n  laptopL: `(max-width: ${size.laptopL})`,\n  desktop: `(max-width: ${size.desktop})`,\n  desktopL: `(max-width: ${size.desktop})`\n};\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport { Device } from 'assets/Device';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport Loader from 'react-loader-spinner';\n\nimport Skeleton from '@yisheng90/react-loading';\n\nimport { useWeb3React } from '@web3-react/core';\nimport { ethers } from \"ethers\";\nimport { keccak256, arrayify, hashMessage, recoverPublicKey } from 'ethers/utils';\nimport moment from 'moment';\n\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\n\nfunction ViewNotificationItem({ notificationObject }) {\n  const { account, library } = useWeb3React();\n  const [ notification, setNotification ] = React.useState(null);\n  const [ subscribed, setSubscribed ] = React.useState(false);\n  const [ loading, setLoading ] = React.useState(true);\n\n  const [ txInProgress, setTxInProgress ] = React.useState(false);\n\n\n  React.useEffect(() => {\n    notifications();\n  }, [notificationObject]);\n\n  // to set notifications\n  const notifications = async () => {\n    setNotification(notificationObject)\n    setLoading(false);\n  }\n\n  // render\n  return (\n    <Container key={notificationObject.id}>\n        <ChannelTitle>\n          {loading &&\n            <Skeleton color=\"#eee\" width=\"50%\" height={24} />\n          }\n          {!loading &&\n            <ChannelTitleLink>{notification.notificationTitle}</ChannelTitleLink>\n          }\n        </ChannelTitle>\n        <ChannelDesc>\n          {loading &&\n            <>\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\n              </SkeletonWrapper>\n\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\n              </SkeletonWrapper>\n\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"40%\" height={5} />\n              </SkeletonWrapper>\n            </>\n          }\n          {!loading &&\n          \n            <ChannelDescLabel>{notification.notificationBody}</ChannelDescLabel>\n          }\n        </ChannelDesc>\n\n        <ChannelMeta>\n          {!loading &&\n            <>\n              <Pool>\n                <br></br>\n                <PoolShare>\n                  {moment\n                  .unix(notification.indexTimestamp)\n                  .local()\n                  .format('YYYY-MM-DD h:mm:ss a')}\n                </PoolShare>\n              </Pool>\n            </>\n          }\n        </ChannelMeta>\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-wrap: wrap;\n\n  background: #fff;\n  border-radius: 10px;\n  border: 1px solid rgb(237, 237, 237);\n\n  margin: 15px 0px;\n  justify-content: center;\n  padding: 10px;\n`\n\nconst SkeletonWrapper = styled.div`\n  overflow: hidden;\n  width: ${props => props.atW + '%' || '100%'};\n  height: ${props => props.atH}px;\n  border-radius: ${props => props.borderRadius || 10}px;\n  margin-bottom: ${props => props.marginBottom || 5}px;\n  margin-right: ${props => props.marginRight || 0}px;\n`\n\nconst ChannelTitle = styled.div`\n  margin-bottom: 5px;\n`\n\nconst ChannelTitleLink = styled.a`\n  text-decoration: none;\n  font-weight: 550;\n  color: #e20880;\n  font-size: 18px;\n`\n\nconst ChannelDesc = styled.div`\n  flex: 1;\n  display: flex;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.75);\n  font-weight: 400;\n  flex-direction: column;\n`\n\nconst ChannelDescLabel = styled.label`\n  flex: 1;\n  margin: 0px 5px;\n`\n\nconst ChannelMeta = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 13px;\n`\n\nconst ChannelMetaBox = styled.label`\n  margin: 0px 5px;\n  color: #fff;\n  font-weight: 600;\n  padding: 2px 8px;\n  border-radius: 10px;\n  font-size: 11px;\n`\n\nconst Pool = styled.div`\n  margin: 0px 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst PoolShare = styled(ChannelMetaBox)`\n  background: #674c9f;\n`\n\n\n// Export Default\nexport default ViewNotificationItem;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\n\nimport { useWeb3React } from '@web3-react/core'\nimport { addresses, abis } from \"@project/contracts\";\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\nimport { BigNumber, bigNumberify, formatEther } from 'ethers/utils'\nimport { toast } from 'react-toastify';\nimport moment from 'moment';\n\nfunction NotificationToast({ notification, clearToast }) {\n\n  // toast customize\n  const LoaderToast = ({color }) => (\n      <Toaster>\n      <div>{notification.notificationTitle}</div>\n      <div>{notification.notificationBody}</div>\n      </Toaster>\n  )\n \n  // Render\n  return (\n    <>{\n    toast.dark(<LoaderToast onClick={clearToast} color=\"#35c5f3\"/>, {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        })\n    }\n    </>\n  );\n}\n\nconst Toaster = styled.div`\n  align-items: center;\n  margin: 0px 10px;\n`\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`\n\n\n\n// Export Default\nexport default NotificationToast;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport Loader from 'react-loader-spinner'\n\nimport { useWeb3React } from '@web3-react/core'\nimport { addresses, abis } from \"@project/contracts\";\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\nimport { BigNumber, bigNumberify, formatEther } from 'ethers/utils'\nimport { useQuery, gql } from '@apollo/client';\n\nimport ViewNotificationItem from \"components/ViewNotificationItem\";\nimport NotificationToast from \"components/NotificationToast\";\nimport hex2ascii from 'hex2ascii'\n\n// Create Header\nfunction Feedbox({ epnsReadProvider }) {\n\n  const { account, library } = useWeb3React();\n\n  const [notifications, setNotifications] = React.useState([]);\n\n  const [toast, showToast] = React.useState(null);\n\n  const [page, setPage] = React.useState(0);\n  const [paginatedNotifications, setPaginatedNotifications] = React.useState([]);\n\n  const notificationsPerPage = 20;\n  const notificationsVisited = page * notificationsPerPage;\n\n  //define query\n  const GET_NOTIFICATIONS = gql`\n  {\n    notifications(where:{userAddress:\"${account}\"}, orderBy: indexBlock, orderDirection: desc)\n    {\n        id\n        userAddress\n        channelAddress\n        notificationTitle\n        notificationBody\n        dataType\n        dataSecret\n        dataASub\n        dataAMsg\n        dataACta\n        dataAImg\n        dataATime\n        indexTimestamp\n        indexBlock\n    }\n  }\n`;\n\n  //useQuery react hook exposed by Apollo fetches query results and stores in data\n  const { loading, error, data } = useQuery(GET_NOTIFICATIONS);\n\n  const clearToast = () => showToast(null);\n\n  //set notitifications\n  React.useEffect(() => {\n    if (!loading && !error && data && data.notifications) {\n      setNotifications(data.notifications);\n    }\n  }, [loading, error, data, epnsReadProvider]);\n\n  React.useEffect(() => {\n    if (epnsReadProvider) {\n      return subscribe()\n    }\n  }, [epnsReadProvider]);\n\n  //clear toast variable after it is shown\n  React.useEffect(() => {\n    if (toast) {\n      clearToast()\n    }\n  }, [toast]);\n\n  //update paginatedNotifications array when scrolled till the end\n  React.useEffect(() => {\n    if(notifications){\n      setPaginatedNotifications(prev => [...prev, ...notifications.slice(notificationsVisited, notificationsVisited + notificationsPerPage)])\n      console.log(\"🚀 ~ file: Feedbox.tsx ~ line 31 ~ Feedbox ~ paginatedNotifications\", paginatedNotifications)\n    }\n  }, [notifications, page]);\n\n  //function to handle infinity scroll\n  const handleScroll = (event) => {\n    const { scrollTop, clientHeight, scrollHeight } = event.currentTarget;\n    if (scrollHeight - scrollTop === clientHeight) {\n      setPage(prev => prev + 1);\n    }\n  };\n  \n  const subscribe = () => {\n    if (account) {\n      return newNotification(onReceive);\n    }\n  };\n\n  //handle new notification\n  const onReceive = async notification => {\n    showToast(notification);\n    setNotifications(notifications => [notification].concat(notifications));\n  };\n\n  //subscribe to SendNotification\n  const newNotification = (fn) => {\n    const event = 'SendNotification'\n\n    //callback function for listener\n    const cb = async (\n      eventChannelAddress: string,\n      eventUserAddress: string,\n      identityHex: string\n    ) => {\n      const userAddress = account\n      const identity = hex2ascii(identityHex)\n      const notificationId = identity\n        .concat('+')\n        .concat(eventChannelAddress)\n        .concat('+')\n        .concat(eventUserAddress)\n        .toLocaleLowerCase()\n      const ipfsId = identity.split('+')[1]\n\n      // Form Gateway URL\n      const url = \"https://ipfs.io/ipfs/\" + ipfsId;\n      fetch(url)\n        .then(result => result.json())\n        .then(result => {\n      const ipfsNotification = result\n      const notification = {\n        id: notificationId,\n        userAddress: eventUserAddress,\n        channelAddress: eventChannelAddress,\n        indexTimestamp: Date.now() / 1000, // todo\n        notificationTitle: ipfsNotification.notification.title,\n        notificationBody: ipfsNotification.notification.body,\n        ...ipfsNotification.data,\n      }\n      if (ipfsNotification.data.type === '1') {\n        const isSubscribed = \n        epnsReadProvider.memberExists(\n          userAddress,\n          eventChannelAddress\n        )\n        .then(isSubscribed => {\n          if (isSubscribed) {\n            fn(notification)\n          }\n        })\n      } else if (userAddress === eventUserAddress) {\n        fn(notification)\n      }\n      })\n      .catch(err => {\n        console.log(\"!!!Error, getting new notification data from ipfs --> %o\", err);\n      });\n    }\n    epnsReadProvider.on(event, cb)\n    return epnsReadProvider.off.bind(epnsReadProvider, event, cb)\n  }\n\n  // Render\n  return (\n    <>\n    <Container>\n    {loading &&\n        <ContainerInfo>\n          <Loader\n           type=\"Oval\"\n           color=\"#35c5f3\"\n           height={40}\n           width={40}\n          />\n        </ContainerInfo>\n      }\n      {!loading &&\n      <Items id=\"scrollstyle-secondary\" onScroll = {handleScroll}>\n          {Object.keys(paginatedNotifications).map(index => {  \n            return (\n            <ViewNotificationItem\n              key={paginatedNotifications[index].id}\n              notificationObject={paginatedNotifications[index]}\n            />)\n            })\n          }\n        </Items>\n      }\n    {\n     toast && \n     <NotificationToast\n       notification={toast}\n       clearToast = {clearToast}\n      />\n    }\n    </Container>\n    </>\n  );\n}\n\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`\n// css styles\nconst Container = styled.div`\ndisplay: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  max-height: 100vh;\n\n  // padding: 20px;\n  // font-size: 16px;\n  // display: flex;\n  // font-weight: 200;\n  // align-content: center;\n  // align-items: center;\n  // justify-content: center;\n  // width: 100%;\n  // min-height: 40vh;\n`\n\nconst ContainerInfo = styled.div`\n  padding: 20px;\n`\n\n// Export Default\nexport default Feedbox;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport { AnimateOnChange } from 'react-animation';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\n// Create Header\nfunction DisplayNotice({ title, theme }) {\n  React.useEffect(() => {\n\n  }, [title, theme]);\n\n  // to create blockies\n\n  return (\n    <Container>\n      <AnimateOnChange\n        animationIn=\"fadeIn\"\n        animationOut=\"fadeOut\"\n        durationOut={200}\n      >\n        <Notice theme={theme}>{title}</Notice>\n      </AnimateOnChange>\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n\n`\n\nconst Notice = styled.span`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n  font-weight: 400;\n\n  ${props => props.theme === 'primary' && css`\n    background: #e20880;\n  `};\n\n  ${props => props.theme === 'secondary' && css`\n    background: #35c5f3;\n  `};\n\n  ${props => props.theme === 'third' && css`\n    background: #674c9f;\n  `};\n`\n\n// Export Default\nexport default DisplayNotice;\n","import EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\nimport { bigNumber, bigNumberify } from 'ethers/utils'\n\nimport { addresses, abis } from \"@project/contracts\";\n\n// STATIC SINGLETON\nexport const ChannelEvents = {\n    ADD_CHANNEL_ANY: \"AddChannelAny\",\n    ADD_CHANNEL_SELF: \"AddChannelSelf\",\n    UPDATE_CHANNEL_ANY: \"UpdateChannelAny\",\n    UPDATE_CHANNEL_SELF: \"UpdateChannelSelf\",\n    SUBSCRIBER_ANY_CHANNEL: \"SubscriberAnyChannel\",\n    SUBSCRIBER_SELF_CHANNEL: \"SubscriberSelfChannel\",\n    UNSUBSCRIBER_ANY_CHANNEL: \"UnsubscriberAnyChannel\",\n    UNSUBSCRIBER_SELF_CHANNEL: \"UnsubscriberSelfChannel\",\n}\n\nexport default class ChannelsDataStore {\n    static instance = ChannelsDataStore.instance || new ChannelsDataStore();\n\n    state = {\n      channelsCount: -1,\n      channelsMeta: {},\n      channelsJson: {},\n\n      callbacks: [],\n\n      account: null,\n      epnsReadProvider: null,\n    }\n\n    // init\n    init = (account, epnsReadProvider) => {\n      // set account\n      this.state.account = account;\n\n      // First attach listeners then overwrite the old one if any\n      this.resetChannelsListeners();\n      this.state.epnsReadProvider = epnsReadProvider;\n      this.initChannelsListenersAsync();\n\n      // next get store channels count\n      this.getChannelsCountAsync();\n    }\n\n    // RESET LISTENERS\n    resetChannelsListeners = () => {\n      // only proceed if a read provider is attached\n      if (this.state.epnsReadProvider) {\n        this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\n        this.state.epnsReadProvider.removeAllListeners(\"UpdateChannel\");\n        this.state.epnsReadProvider.removeAllListeners(\"Subscribe\");\n        this.state.epnsReadProvider.removeAllListeners(\"Unsubscribe\");\n      }\n    }\n\n    // init LISTENERS\n    initChannelsListenersAsync = async () => {\n      // Add Listeners\n      await this.listenForAddChannelAnyAsync();\n      await this.listenForAddChannelSelfAsync();\n\n      await this.listenForUpdateChannelAnyAsync();\n      await this.listenForUpdateChannelSelfAsync();\n\n      await this.listenForSubscribeAnyAsync();\n      await this.listenForSubscribeSelfAsync();\n      await this.listenForUnsubscribeAnyAsync();\n      await this.listenForUnsubscribeSelfAsync();\n    }\n\n    // 1. Add Any Channel Listeners\n    listenForAddChannelAnyAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.AddChannel(null, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // Do own stuff\n        await this.incrementChannelsCountAsync(1);\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 2. Add Self Channel Listener\n    listenForAddChannelSelfAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.AddChannel(this.state.account, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // Do own stuff\n        // Nothing to do, just do callback\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 3. Update Any Channel Listener\n    listenForUpdateChannelAnyAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.UpdateChannel(null, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 4. Update Self Channel Listener\n    listenForUpdateChannelSelfAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.UpdateChannel(this.state.account, null);\n\n      contract.on(filter, async (channel, ipfs) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF])) {\n            if (callback) { callback(channel, ipfs); }\n          }\n        }\n      });\n    }\n\n    // 5. Subscriber Any\n    listenForSubscribeAnyAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Subscribe(null, null);\n\n      contract.on(filter, async (channel, user) => {\n        // Do own stuff\n        if (this.state.channelsMeta[channel]) {\n          const channelID = this.state.channelsMeta[channel];\n          let count = this.state.channelsMeta[channelID].memberCount.toNumber();\n          count = count + 1;\n          this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\n        }\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 6. Subscriber Self\n    listenForSubscribeSelfAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Subscribe(this.state.account, null);\n\n      contract.on(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 7. Unsubscribe Any\n    listenForUnsubscribeAnyAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Unsubscribe(null, null);\n\n      contract.on(filter, async (channel, user) => {\n        // Do own stuff\n        if (this.state.channelsMeta[channel]) {\n          const channelID = this.state.channelsMeta[channel];\n          let count = this.state.channelsMeta[channelID].memberCount.toNumber();\n          count = count - 1;\n          this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\n        }\n\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 8. Unsubscribe Self\n    listenForUnsubscribeSelfAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Unsubscribe(this.state.account, null);\n\n      contract.on(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // FOR CALLBACKS\n    addCallbacks = (callbackType, callbackID, callback) => {\n      // first check if callback already exists\n      if (!this.state.callbacks[callbackType]) {\n        this.state.callbacks[callbackType] = {};\n      }\n\n      if (!this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = callback;\n      }\n    }\n\n    removeCallbacks = (callbackType, callbackID) => {\n      // first check if callback already exists\n      if (this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = null;\n      }\n    }\n\n    // CHANNELS COUNT\n    getChannelsCountAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsCount == -1) {\n          // Count not set, get and set it first\n          const count = EPNSCoreHelper.getTotalNumberOfChannels(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.channelsCount = response;\n\n              if (enableLogs) console.log(\"getChannelsCountAsync() --> %o\", response);\n              resolve(this.state.channelsCount)\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getChannelsCountAsync() --> %o\", err);\n              reject(err);\n            });\n        }\n        else {\n          resolve(this.state.channelsCount);\n        }\n      });\n    }\n\n    incrementChannelsCountAsync = async (incrementCount) => {\n      return new Promise ((resolve, reject) => {\n        this.getChannelsCountAsync()\n          .then(response => {\n            this.state.channelsCount = response + incrementCount;\n            console.log(\"incrementChannelsCountAsync() --> %d\", this.state.channelsCount);\n            resolve(this.state.channelsCount)\n          })\n          .catch(err => { console.log(\"!!!Error, incrementChannelsCountAsync() --> %o\", err); reject(err); });\n      });\n\n    }\n\n    // CHANNELS META FUNCTIONS\n    // To get channels meta\n    getChannelsMetaAsync = async (atIndex, numChannels) => {\n      return new Promise (async (resolve, reject) => {\n        // get total number of channels\n        const channelsCount = await this.getChannelsCountAsync();\n\n        if (atIndex == -1) {\n          atIndex = channelsCount - 1;\n        }\n\n        if (numChannels == -1) {\n          numChannels = channelsCount;\n        }\n\n        // Get channels\n        let channelsMeta = [];\n        let channelsDummy = [];\n\n        // prefil and then refil\n        let count = 0;\n        for (let i = 0; i < numChannels; i++) {\n          const assignedChannelID = atIndex - i;\n          channelsDummy[count] = assignedChannelID;\n          count = count + 1;\n        }\n\n        const promises = channelsDummy.map(async (channelID) => {\n          // Match the cache\n          await this.getChannelMetaAsync(channelID)\n            .then(response => {\n              const mappings = { ...response };\n              mappings.id = channelID;\n\n              channelsMeta = [mappings, ...channelsMeta];\n            })\n            .catch(err => console.log(\"!!!Error (but skipping), getChannelMetaAsync() --> %o\", err))\n        });\n\n        // wait until all promises are resolved\n        await Promise.all(promises);\n\n        channelsMeta.sort((a, b) => {\n          if (a.id < b.id) return -1;\n          if (a.id > b.id) return 1;\n          return 0;\n        });\n\n        // return channels meta\n        console.log(\"getChannelsMetaAsync(From %d to %d) --> %o\", atIndex - numChannels + 1, atIndex, channelsMeta);\n        resolve(channelsMeta);\n      });\n    }\n\n    // To get a single channel meta via id\n    getChannelMetaAsync = async (channelID) => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsMeta[channelID]) {\n          console.log(\"getChannelMetaAsync() [CACHED] --> %o\", this.state.channelsMeta[channelID]);\n          resolve(this.state.channelsMeta[channelID]);\n        }\n        else {\n          let channelAddress;\n\n          await EPNSCoreHelper.getChannelAddressFromID(channelID, this.state.epnsReadProvider)\n            .then(async response => {\n              channelAddress = response;\n              await this.getChannelMetaViaAddressAsync(channelAddress)\n                .then(response => {\n                  // update the channel cache before resolving\n                  this.state.channelsMeta[channelID] = response;\n                  this.state.channelsMeta[channelAddress] = channelID;\n\n                  // resolve\n                  console.log(\"getChannelMetaAsync() [Address: %s] --> %o\", channelAddress, response);\n                  resolve(response);\n                })\n            })\n            .catch(err => { console.log(\"!!!Error, getChannelMetaAsync() --> %o\", err); reject(err); })\n        }\n      });\n    }\n\n    // To get a single channel meta via address\n    getChannelMetaViaAddressAsync = async (channelAddress) => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsMeta[channelAddress]) {\n          const channelID = this.state.channelsMeta[channelAddress];\n\n          console.log(\"getChannelMetaViaAddressAsync() [CACHED] --> %o\", this.state.channelsMeta[channelID]);\n          resolve(this.state.channelsMeta[channelID]);\n        }\n        else {\n          // Can't cache this :(, no way to know channel id\n          await EPNSCoreHelper.getChannelInfo(channelAddress, this.state.epnsReadProvider)\n            .then(response => {\n              // resolve\n              console.log(\"getChannelMetaViaAddressAsync() [Address: %s] --> %o\", channelAddress, response);\n              resolve(response);\n            })\n            .catch(err => { console.log(\"!!!Error, getChannelMetaViaAddressAsync() --> %o\", err); reject(err); })\n        }\n      });\n    }\n\n    // CHANNELS INFO FUNCTIONS\n    // To get a single channel meta via id\n    getChannelJsonAsync = async (channelAddress) => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsJson[channelAddress]) {\n          console.log(\"getChannelJsonAsync() [CACHED] --> %o\", this.state.channelsJson[channelAddress]);\n          resolve(this.state.channelsJson[channelAddress]);\n        }\n        else {\n          await EPNSCoreHelper.getChannelJsonFromChannelAddress(channelAddress, this.state.epnsReadProvider)\n            .then(response => {\n              // First set the cache\n              this.state.channelsJson[channelAddress] = response;\n\n              // resolve\n              console.log(\"getChannelJsonAsync() [Address: %s] --> %o\", channelAddress, response);\n              resolve(response);\n            })\n            .catch(err => { console.log(\"!!!Error, getChannelJsonAsync() --> %o\", err); reject(err); })\n        }\n      });\n    }\n\n}\n","import EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\nimport { bigNumber } from 'ethers/utils'\n\nimport { addresses, abis } from \"@project/contracts\";\n\n// STATIC SINGLETON\nexport const UserEvents = {\n    SUBSCRIBED: \"Subscribed\",\n    UNSUBSCRIBED: \"Unsubscribed\",\n    PUBLIC_KEY_BROADCASTED: \"PublicKeyBroadcasted\",\n    CREATED_CHANNEL: \"CreatedChannel\",\n    DEACTIVATE_CHANNEL: \"DeactivateChannel\",\n}\n\nexport default class UsersDataStore {\n    static instance = UsersDataStore.instance || new UsersDataStore();\n\n    state = {\n      usersCount: -1,\n      userMeta: null,\n      ownerMeta: null,\n\n      callbacks: [],\n\n      account: null,\n      epnsReadProvider: null,\n    }\n\n    // init\n    init = (account, epnsReadProvider) => {\n      // set account\n      this.state.account = account;\n\n      // First attach listeners then overwrite the old one if any\n      this.resetUsersListeners();\n      this.state.epnsReadProvider = epnsReadProvider;\n      this.initUsersListenersAsync();\n\n      // next get store user count & user meta\n      this.getOwnerMetaAsync();\n      this.getUsersCountAsync();\n      this.getUserMetaAsync();\n    }\n\n    // RESET LISTENERS\n    resetUsersListeners = () => {\n      // only proceed if a read provider is attached\n      if (this.state.epnsReadProvider) {\n        this.state.epnsReadProvider.removeAllListeners(\"Subscribe\");\n        this.state.epnsReadProvider.removeAllListeners(\"Unsubscribe\");\n        this.state.epnsReadProvider.removeAllListeners(\"PublicKeyRegistered\");\n        this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\n        this.state.epnsReadProvider.removeAllListeners(\"DeactivateChannel\");\n      }\n\n      // reset user meta as well\n      this.state.userMeta = null;\n    }\n\n    // init LISTENERS\n    initUsersListenersAsync = async () => {\n      // Add Listeners\n      await this.listenForSubscribedAsync();\n      await this.listenForUnsubscribedAsync();\n\n      if (!this.state.userMeta || (this.state.userMeta && !this.state.userMeta.publicKeyRegistered)) {\n        await this.listenForPublicKeyBroadcastAsync();\n      }\n    }\n\n    // 1. Listen for Subscribe Async\n    listenForSubscribedAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Subscribe(null, this.state.account);\n\n      if (this.state.userMeta) {\n        this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.add(1);\n      }\n\n      contract.on(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[UserEvents.SUBSCRIBED]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.SUBSCRIBED])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 2. Listen for Unsubscribe Async\n    listenForUnsubscribedAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.Unsubscribe(null, this.state.account);\n\n      if (this.state.userMeta) {\n        this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.sub(1);\n      }\n\n      contract.on(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // 3. Listen For Public Key Broadcast\n    listenForPublicKeyBroadcastAsync = async () => {\n      const contract = this.state.epnsReadProvider;\n      let filter = contract.filters.PublicKeyRegistered(this.state.account, null);\n\n      if (this.state.userMeta) {\n        this.state.userMeta.publicKeyRegistered = true;\n      }\n\n      contract.once(filter, async (channel, user) => {\n        // then perform callbacks\n        if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\n          for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\n            if (callback) { callback(channel, user); }\n          }\n        }\n      });\n    }\n\n    // FOR CALLBACKS\n    addCallbacks = (callbackType, callbackID, callback) => {\n      // first check if callback already exists\n      if (!this.state.callbacks[callbackType]) {\n        this.state.callbacks[callbackType] = {};\n      }\n\n      if (!this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = callback;\n      }\n    }\n\n    removeCallbacks = (callbackType, callbackID) => {\n      // first check if callback already exists\n      if (this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = null;\n      }\n    }\n\n    // GET OWNER META\n    getOwnerMetaAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise ((resolve, reject) => {\n        if (this.state.ownerMeta) {\n          if (enableLogs) console.log(\"getOwnerMetaAsync() [CACHED] --> %o\", this.state.ownerMeta);\n          resolve(this.state.ownerMeta);\n        }\n        else {\n          EPNSCoreHelper.getOwnerInfo(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.ownerMeta = response;\n\n              if (enableLogs) console.log(\"getOwnerMetaAsync() --> %o\", response);\n              resolve(this.state.ownerMeta);\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getOwnerMetaAsync() --> %o\", err);\n              reject(err);\n            });\n        }\n      });\n    }\n\n    // USERS COUNT\n    getUsersCountAsync = async () => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsCount == -1) {\n          // Count not set, get and set it first\n          const count = EPNSCoreHelper.getTotalNumberOfUsers(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.usersCount = response;\n              console.log(\"getUsersCountAsync() --> %o\", response);\n              resolve(this.state.usersCount)\n            })\n            .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\n        }\n        else {\n          resolve(this.state.usersCount);\n        }\n      });\n    }\n\n    incrementUsersCountAsync = async (incrementCount) => {\n      return new Promise ((resolve, reject) => {\n        this.getUsersCountAsync()\n          .then(response => {\n            this.state.usersCount = response + incrementCount;\n            console.log(\"incrementChannelsCountAsync() --> %d\", this.state.usersCount);\n            resolve(this.state.usersCount);\n          })\n          .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\n      });\n    }\n\n    // GET USER META\n    getUserMetaAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise ((resolve, reject) => {\n        if (this.state.userMeta) {\n          if (enableLogs) console.log(\"getUserMetaAsync() [CACHED] --> %o\", this.state.userMeta);\n          resolve(this.state.userMeta);\n        }\n        else {\n          EPNSCoreHelper.getUserInfo(this.state.account, this.state.epnsReadProvider)\n            .then(response => {\n              this.state.userMeta = response;\n\n              if (enableLogs) console.log(\"getUserMetaAsync() --> %o\", this.state.userMeta);\n              resolve(this.state.userMeta);\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getUserMetaAsync() --> %o\", err);\n              reject(err);\n          });\n        }\n      });\n    }\n\n}\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport { Device } from 'assets/Device';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport Loader from 'react-loader-spinner';\n\nimport Skeleton from '@yisheng90/react-loading';\nimport { IoMdPeople } from 'react-icons/io';\nimport { GiTwoCoins } from 'react-icons/gi';\n\nimport { useWeb3React } from '@web3-react/core';\nimport { ethers } from \"ethers\";\nimport { keccak256, arrayify, hashMessage, recoverPublicKey } from 'ethers/utils';\n\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport ChannelsDataStore, { ChannelEvents } from \"singletons/ChannelsDataStore\";\nimport UsersDataStore, { UserEvents } from \"singletons/UsersDataStore\";\n\n// Create Header\nfunction ViewChannelItem({ channelObject, isOwner, epnsReadProvider, epnsWriteProvide }) {\n  const { account, library } = useWeb3React();\n\n  const [ channelJson, setChannelJson ] = React.useState({});\n  const [ subscribed, setSubscribed ] = React.useState(false);\n  const [ loading, setLoading ] = React.useState(true);\n\n  const [ txInProgress, setTxInProgress ] = React.useState(false);\n\n\n  React.useEffect(() => {\n    fetchChannelJson();\n    registerCallbacks();\n  }, [account, channelObject]);\n\n  // to fetch channels\n  const fetchChannelJson = async () => {\n    const channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(channelObject.addr);\n    const subs = await EPNSCoreHelper.getSubscribedStatus(account, channelObject.addr, epnsReadProvider);\n    setSubscribed(subs);\n\n    setChannelJson(channelJson);\n    setLoading(false);\n  }\n\n  // to register callbacks\n  const registerCallbacks = () => {\n    UsersDataStore.instance.addCallbacks(\n      UserEvents.SUBSCRIBED,\n      \"FromViewChannelItem\",\n      () => {\n        setSubscribed(true);\n        channelObject.memberCount = channelObject.memberCount.add(1);\n      }\n    );\n\n    UsersDataStore.instance.addCallbacks(\n      UserEvents.UNSUBSCRIBED,\n      \"FromViewChannelItem\",\n      () => {\n        setSubscribed(false);\n        channelObject.memberCount = channelObject.memberCount.sub(1);\n      }\n    );\n\n    ChannelsDataStore.instance.addCallbacks(\n      ChannelEvents.SUBSCRIBER_ANY_CHANNEL,\n      \"FromViewChannelItem\",\n      (channel, user) => {\n        if (channel === channelObject.addr) {\n          channelObject.memberCount = channelObject.memberCount.add(1);\n        }\n      }\n    );\n\n    ChannelsDataStore.instance.addCallbacks(\n      ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL,\n      \"FromViewChannelItem\",\n      (channel, user) => {\n        if (channel === channelObject.addr) {\n          channelObject.memberCount = channelObject.memberCount.sub(1);\n        }\n      }\n    );\n  }\n\n  // to subscribe\n  const subscribe = async () => {\n    // Check if public key is broadcasted or not\n    const userMeta = await UsersDataStore.instance.getUserMetaAsync();\n    if (!userMeta.publicKeyRegistered) {\n      const msg = \"Sign to enable Secrets! (Encrypted Messages)\\n Read more: https://epns.io/secret-messages\";\n\n      // Sign a message and extract public key\n      library\n        .getSigner(account)\n        .signMessage(msg)\n        .then(async signature => {\n          const publicKey = recoverPublicKey(arrayify(hashMessage(msg)), signature);\n          const formattedPubKey = publicKey.slice(0, 2) + publicKey.slice(4);\n\n          subscribeAction(formattedPubKey);\n        })\n        .catch(error => {\n          // Show toast as well\n          toast.dark('Skipped for now... Encrypted messages will require this!', {\n            position: \"bottom-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n\n          subscribeAction(false);\n        })\n    }\n    else {\n      subscribeAction(false);\n    }\n  }\n\n  const subscribeAction = async (withPublicKey) => {\n    setTxInProgress(true);\n\n    let sendWithTxPromise;\n\n    if (withPublicKey) {\n      sendWithTxPromise = epnsWriteProvide.subscribeWithPublicKey(channelObject.addr, withPublicKey);\n    }\n    else {\n      sendWithTxPromise = epnsWriteProvide.subscribe(channelObject.addr);\n    }\n\n    sendWithTxPromise\n      .then(async tx => {\n\n        let txToast = toast.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n\n        try {\n          await library.waitForTransaction(tx.hash);\n\n          toast.update(txToast, {\n            render: \"Transaction Completed!\",\n            type: toast.TYPE.SUCCESS,\n            autoClose: 5000\n          });\n\n          setTxInProgress(false);\n        }\n        catch(e) {\n          toast.update(txToast, {\n            render: \"Transaction Failed! (\" + e.name + \")\",\n            type: toast.TYPE.ERROR,\n            autoClose: 5000\n          });\n\n          setTxInProgress(false);\n        }\n      })\n      .catch(err => {\n        toast.dark('Transaction Cancelled!', {\n          position: \"bottom-right\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n\n        setTxInProgress(false);\n      })\n  }\n\n  const unsubscribeAction = async () => {\n    setTxInProgress(true);\n\n    let sendWithTxPromise = epnsWriteProvide.unsubscribe(channelObject.addr);\n\n    sendWithTxPromise\n      .then(async tx => {\n\n        let txToast = toast.dark(<LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\"/>, {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n\n        try {\n          await library.waitForTransaction(tx.hash);\n\n          toast.update(txToast, {\n            render: \"Transaction Completed!\",\n            type: toast.TYPE.SUCCESS,\n            autoClose: 5000\n          });\n\n          setTxInProgress(false);\n        }\n        catch(e) {\n          toast.update(txToast, {\n            render: \"Transaction Failed! (\" + e.name + \")\",\n            type: toast.TYPE.ERROR,\n            autoClose: 5000\n          });\n\n          setTxInProgress(false);\n        }\n      })\n      .catch(err => {\n        toast.dark('Transaction Cancelled!', {\n          position: \"bottom-right\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n\n        setTxInProgress(false);\n      })\n  }\n\n  // toast customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader\n       type=\"Oval\"\n       color={color}\n       height={30}\n       width={30}\n      />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  )\n\n  // render\n  return (\n    <Container key={channelObject.addr}>\n      <ChannelLogo>\n        <ChannelLogoOuter>\n          <ChannelLogoInner>\n          {loading &&\n            <Skeleton color=\"#eee\" width=\"100%\" height=\"100%\" />\n          }\n          {!loading &&\n            <ChannelLogoImg src={`${channelJson.icon}`} />\n          }\n          </ChannelLogoInner>\n        </ChannelLogoOuter>\n      </ChannelLogo>\n\n      <ChannelInfo>\n        <ChannelTitle>\n          {loading &&\n            <Skeleton color=\"#eee\" width=\"50%\" height={24} />\n          }\n          {!loading &&\n            <ChannelTitleLink href={channelJson.url} target=\"_blank\" rel=\"nofollow\">{channelJson.name}</ChannelTitleLink>\n          }\n        </ChannelTitle>\n\n        <ChannelDesc>\n          {loading &&\n            <>\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\n              </SkeletonWrapper>\n\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\n              </SkeletonWrapper>\n\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"40%\" height={5} />\n              </SkeletonWrapper>\n            </>\n          }\n          {!loading &&\n            <ChannelDescLabel>{channelJson.info}</ChannelDescLabel>\n          }\n        </ChannelDesc>\n\n        <ChannelMeta>\n          {loading &&\n            <>\n              <SkeletonWrapper atH={10} atW={30} marginBottom=\"0\">\n                <Skeleton />\n              </SkeletonWrapper>\n            </>\n          }\n          {!loading &&\n            <>\n              <Subscribers>\n                <IoMdPeople size={20} color=\"#ccc\"/>\n                <SubscribersCount>\n                  {EPNSCoreHelper.formatBigNumberToMetric(channelObject.memberCount)}\n                </SubscribersCount>\n              </Subscribers>\n              <Pool>\n                <GiTwoCoins size={20} color=\"#ccc\"/>\n                <PoolShare>\n                  {EPNSCoreHelper.formatBigNumberToMetric(channelObject.poolContribution, true) + \" DAI\"}\n                </PoolShare>\n              </Pool>\n            </>\n          }\n        </ChannelMeta>\n      </ChannelInfo>\n      {!!account && !!library &&\n        <>\n          <LineBreak />\n          <ChannelActions>\n            {loading &&\n              <SkeletonButton>\n                <Skeleton />\n              </SkeletonButton>\n            }\n            {!loading && !subscribed &&\n              <SubscribeButton onClick={subscribe} disabled={txInProgress}>\n                {txInProgress &&\n                  <ActionLoader>\n                    <Loader\n                     type=\"Oval\"\n                     color=\"#FFF\"\n                     height={16}\n                     width={16}\n                    />\n                  </ActionLoader>\n                }\n                <ActionTitle hideit={txInProgress}>Subscribe</ActionTitle>\n              </SubscribeButton>\n            }\n            {!loading && subscribed &&\n              <>\n              {isOwner &&\n                <OwnerButton disabled>Owner</OwnerButton>\n              }\n              {!isOwner &&\n                <UnsubscribeButton onClick={unsubscribeAction} disabled={txInProgress}>\n                  {txInProgress &&\n                    <ActionLoader>\n                      <Loader\n                       type=\"Oval\"\n                       color=\"#FFF\"\n                       height={16}\n                       width={16}\n                      />\n                    </ActionLoader>\n                  }\n                  <ActionTitle hideit={txInProgress}>Unsubscribe</ActionTitle>\n                </UnsubscribeButton>\n              }\n              </>\n            }\n          </ChannelActions>\n        </>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-wrap: wrap;\n\n  background: #fff;\n  border-radius: 10px;\n  border: 1px solid rgb(237, 237, 237);\n\n  margin: 15px 0px;\n  justify-content: center;\n  padding: 10px;\n`\n\nconst SkeletonWrapper = styled.div`\n  overflow: hidden;\n  width: ${props => props.atW + '%' || '100%'};\n  height: ${props => props.atH}px;\n  border-radius: ${props => props.borderRadius || 10}px;\n  margin-bottom: ${props => props.marginBottom || 5}px;\n  margin-right: ${props => props.marginRight || 0}px;\n`\n\nconst ChannelLogo = styled.div`\n  max-width: 100px;\n  min-width: 32px;\n  flex: 1;\n  margin: 5px;\n  padding: 10px;\n  border: 2px solid #fafafa;\n  overflow: hidden;\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-self: flex-start;\n`\n\nconst ChannelLogoOuter = styled.div`\n  padding-top: 100%;\n  position: relative;\n`\n\nconst ChannelLogoInner = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  border-radius: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ChannelLogoImg = styled.img`\n  object-fit: contain;\n  width: 100%;\n  border-radius: 20px;\n  overflow: hidden;\n`\n\nconst ChannelInfo = styled.div`\n  flex: 1;\n  margin: 5px 10px;\n  min-width: 120px;\n  flex-grow: 4;\n  flex-direction: column;\n  display: flex;\n`\n\nconst ChannelTitle = styled.div`\n  margin-bottom: 5px;\n`\n\nconst ChannelTitleLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst ChannelDesc = styled.div`\n  flex: 1;\n  display: flex;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.75);\n  font-weight: 400;\n  flex-direction: column;\n`\n\nconst ChannelDescLabel = styled.label`\n  flex: 1;\n`\n\nconst ChannelMeta = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 13px;\n`\n\nconst ChannelMetaBox = styled.label`\n  margin: 0px 5px;\n  color: #fff;\n  font-weight: 600;\n  padding: 2px 8px;\n  border-radius: 10px;\n  font-size: 11px;\n`\n\nconst Subscribers = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst SubscribersCount = styled(ChannelMetaBox)`\n  background: #35c4f3;\n`\n\nconst Pool = styled.div`\n  margin: 0px 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst PoolShare = styled(ChannelMetaBox)`\n  background: #674c9f;\n`\n\nconst LineBreak = styled.div`\n  display: none;\n  flex-basis: 100%;\n  height: 0;\n\n  @media ${Device.tablet} {\n    display: block;\n  }\n`\n\nconst ChannelActions = styled.div`\n  margin: 5px;\n  flex-grow: 1;\n  max-width: 120px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ChannelActionButton = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n  ${ props => props.disabled && css`\n    &:hover {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n    &:active {\n      opacity: 1;\n      cursor: default;\n      pointer: default;\n    }\n  `}\n`\n\nconst ActionTitle = styled.span`\n  ${ props => props.hideit && css`\n    visibility: hidden;\n  `};\n`\n\nconst ActionLoader = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst SkeletonButton = styled.div`\n  border: 0;\n  outline: 0;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 10px;\n  border-radius: 5px;\n  flex: 1;\n`\n\nconst SubscribeButton = styled(ChannelActionButton)`\n  background: #e20880;\n`\n\nconst UnsubscribeButton = styled(ChannelActionButton)`\n  background: #674c9f;\n`\n\nconst OwnerButton = styled(ChannelActionButton)`\n  background: #35c5f3;\n`\n\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`\n\n// Export Default\nexport default ViewChannelItem;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content, Item, ItemH, Span, Anchor} from 'components/SharedStyling';\n\nimport { FaGasPump } from 'react-icons/fa';\n\n// Faucet URLs\nfunction Faucets() {\n  // render\n  return (\n    <Section margin=\"5px 0px 0px 0px\">\n      <Content>\n        <ItemH\n          self=\"flex-end\"\n          bg=\"#fff\"\n          radius=\"8px\"\n          padding=\"30px 10px 10px 10px\"\n          border=\"1px solid #ededed\"\n          overflow=\"hidden\"\n          align=\"stretch\"\n        >\n          <Span\n            pos=\"absolute\"\n            top=\"10px\"\n            right=\"0px\"\n            padding=\"5px 10px\"\n            bg=\"#e20880\"\n            color=\"#fff\"\n            size=\"12px\"\n            weight=\"600\"\n          >\n            Get Free Ropsten Ether\n          </Span>\n\n          <Item margin=\"5px\">\n            <Anchor\n              direction=\"column\"\n              href=\"https://faucet.metamask.com/\"\n              target=\"_blank\"\n              rel=\"nofollow\"\n            >\n              <FaGasPump size={30} color=\"#674c9f\"/>\n              <Span\n                bg=\"#000\"\n                color=\"#fff\"\n                size=\"10px\"\n                weight=\"600\"\n                spacing=\"0.1em\"\n                textAlign=\"center\"\n                padding=\"5px 10px\"\n                margin=\"10px 0px 0px 0px\"\n                textTransform=\"uppercase\"\n                radius=\"8px\"\n              >\n                Metamask Faucet\n              </Span>\n            </Anchor>\n          </Item>\n          <Item margin=\"5px\">\n            <Anchor\n              direction=\"column\"\n              href=\"https://faucet.ropsten.be/\"\n              target=\"_blank\"\n              rel=\"nofollow\"\n            >\n              <FaGasPump size={30} color=\"#674c9f\"/>\n              <Span\n                bg=\"#000\"\n                color=\"#fff\"\n                size=\"10px\"\n                weight=\"600\"\n                spacing=\"0.1em\"\n                textAlign=\"center\"\n                padding=\"5px 10px\"\n                margin=\"10px 0px 0px 0px\"\n                textTransform=\"uppercase\"\n                radius=\"8px\"\n              >\n                Faucet Ropsten\n              </Span>\n            </Anchor>\n          </Item>\n\n        </ItemH>\n      </Content>\n    </Section>\n  );\n}\n\n// Export Default\nexport default Faucets;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport Loader from 'react-loader-spinner'\n\nimport { useWeb3React } from '@web3-react/core'\nimport { addresses, abis } from \"@project/contracts\";\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\n\nimport DisplayNotice from \"components/DisplayNotice\";\nimport ViewChannelItem from \"components/ViewChannelItem\";\nimport Faucets from \"components/Faucets\";\n\nimport ChannelsDataStore, { ChannelEvents } from \"singletons/ChannelsDataStore\";\nimport UsersDataStore, { UserEvents } from \"singletons/UsersDataStore\";\n\n// Create Header\nfunction ViewChannels({ epnsReadProvider, epnsWriteProvide }) {\n  const { account, library } = useWeb3React();\n\n  const [controlAt, setControlAt] = React.useState(0);\n  const [loading, setLoading] = React.useState(true);\n  const [channels, setChannels] = React.useState([]);\n  const [user, setUser] = React.useState(null);\n  const [owner, setOwner] = React.useState(null);\n\n  React.useEffect(() => {\n    fetchChannels();\n  }, [account]);\n\n  // handle user action at control center\n  const userClickedAt = (controlIndex) => {\n    setControlAt(controlIndex);\n  }\n\n  //ROPSTEN ETHER FAUCET API IMPLEMENTATION\n  //not feasible at the moment\n\n  // const requestEther = () => {\n\n  //   fetch('https://faucet.ropsten.be/donate/0x276B820E8382f17ECB9FA77B0952ca4E67287601')\n  //   .then(async response => {\n  //     const data = await response.json();\n  //     console.log(\"🚀 ~ file: ViewChannels.tsx ~ line 40 ~ requestEther ~ data\", data)\n\n  //     // check for error response\n  //     if (!response.ok) {\n  //         // get error message from body or default to response statusText\n  //         const error = (data && data.message) || response.statusText;\n  //         console.log(error);\n  //     }\n  // })\n  // .catch(error => {\n  //     console.error('There was an error!', error);\n  // });\n  // }\n\n  // to fetch channels\n  const fetchChannels = async () => {\n    // get and set user and owner first\n    const userMeta = await UsersDataStore.instance.getUserMetaAsync();\n    setUser(userMeta);\n\n    const ownerAddr = await UsersDataStore.instance.getOwnerMetaAsync();\n    setOwner(ownerAddr);\n\n    // const channelsMeta = await EPNSCoreHelper.getChannelsMetaLatestToOldest(-1, -1, epnsReadProvider);\n    const channelsMeta = await ChannelsDataStore.instance.getChannelsMetaAsync(-1, -1);\n\n    // sort this again, this time with subscriber count\n    // channelsMeta.sort((a, b) => {\n    //   if (a.memberCount.toNumber() < b.memberCount.toNumber()) return -1;\n    //   if (a.memberCount.toNumber() > b.memberCount.toNumber()) return 1;\n    //   return 0;\n    // });\n\n    // Filter out channel\n\n    setChannels(channelsMeta);\n    setLoading(false);\n  }\n\n  return (\n    <>\n    <Container>\n      {loading &&\n        <ContainerInfo>\n          <Loader\n           type=\"Oval\"\n           color=\"#35c5f3\"\n           height={40}\n           width={40}\n          />\n        </ContainerInfo>\n      }\n\n      {!loading && controlAt == 0 && channels.length == 0 &&\n        <ContainerInfo>\n          <DisplayNotice\n            title=\"That's weird, No Channels in EPNS... world is ending... right?\"\n            theme=\"primary\"\n          />\n        </ContainerInfo>\n      }\n\n      {!loading && controlAt == 0 && channels.length != 0 &&\n        <Items id=\"scrollstyle-secondary\">\n          <Faucets/>\n\n          {Object.keys(channels).map(index => {\n            const isOwner = (\n              channels[index].addr === account ||\n              (account === owner && channels[index].addr === \"0x0000000000000000000000000000000000000000\")\n            );\n\n            if (channels[index].addr !== \"0x0000000000000000000000000000000000000000\") {\n              return (\n                <ViewChannelItem\n                  key={channels[index].addr}\n                  channelObject={channels[index]}\n                  isOwner={isOwner}\n                  epnsReadProvider={epnsReadProvider}\n                  epnsWriteProvide={epnsWriteProvide}\n                />\n              );\n            }\n            else if (channels[index].addr === \"0x0000000000000000000000000000000000000000\" && user.channellized) {\n              return (\n                <ViewChannelItem\n                  key={channels[index].addr}\n                  channelObject={channels[index]}\n                  isOwner={isOwner}\n                  epnsReadProvider={epnsReadProvider}\n                  epnsWriteProvide={epnsWriteProvide}\n                />\n              );\n            }\n            else {\n              return null;\n            }\n          })}\n        </Items>\n      }\n    </Container>\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n\n  max-height: 80vh;\n`\n\nconst ContainerInfo = styled.div`\n  padding: 20px;\n`\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`\n\n// Export Default\nexport default ViewChannels;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport Loader from 'react-loader-spinner';\n\nimport { useWeb3React } from '@web3-react/core';\n\n\n// Other Information URLs\nfunction ViewInfoItem() {\n  // render\n  return (\n    <>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <>\n          <AppLinkText>\n            <AppLink href={`${process.env.REACT_APP_IOS_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\n              Download EPNS App (iOS)\n            </AppLink>\n          </AppLinkText>\n           For iOS Users\n          </>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <>\n          <AppLinkText>\n            <AppLink href={`${process.env.REACT_APP_ANDROID_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\n              Download EPNS App (Android)\n            </AppLink>\n          </AppLinkText>\n           For Android Users\n          </>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <ChannelTitleLink href= \"#\" target=\"_blank\" rel=\"nofollow\">\n            Click here for our How to Guides\n          </ChannelTitleLink>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  flex: 1;\n  // display: flex;\n  // flex-wrap: wrap;\n\n  background: #fff;\n  border-radius: 10px;\n  border: 1px solid rgb(237, 237, 237);\n\n  margin: 15px 0px;\n  justify-content: center;\n  padding: 10px;\n`\n\nconst ChannelTitleLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\nconst AppLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\nconst AppLinkText = styled.div`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n`\nconst ChannelInfo = styled.div`\n  flex: 1;\n  margin: 5px 10px;\n  min-width: 120px;\n  flex-grow: 4;\n  flex-direction: column;\n  display: flex;\n`\n\nconst ChannelTitle = styled.div`\n  margin-bottom: 5px;\n`\n\n// Export Default\nexport default ViewInfoItem;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport Loader from 'react-loader-spinner'\n\nimport { useWeb3React } from '@web3-react/core'\n\nimport ViewInfoItem from \"components/ViewInfoItem\";\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\n// Other Information section\nfunction Info() {\n  const { account, library } = useWeb3React();\n\n  const [controlAt, setControlAt] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n\n  return (\n    <Container>\n      {loading &&\n        <ContainerInfo>\n          <Loader\n           type=\"Oval\"\n           color=\"#35c5f3\"\n           height={40}\n           width={40}\n          />\n        </ContainerInfo>\n      }\n\n      {!loading && controlAt == 0 && \n      <>\n        <InfoBox>\n          <ViewInfoItem/>\n        </InfoBox>\n      </>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n\n  max-height: 80vh;\n`\n\nconst ContainerInfo = styled.div`\n  padding: 20px;\n`\nconst InfoBox = styled.div`\n  padding: 10px 20px;\n  display: block;\n  align-self: stretch;\n  background: #fafafa;\n`\n\n\n// Export Default\nexport default Info;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content, Item, ItemH, ItemBreak, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\n\nimport { BsFillImageFill } from 'react-icons/bs';\nimport { FiLink } from 'react-icons/fi';\n\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport Loader from 'react-loader-spinner';\n\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\n\nimport { addresses, abis } from \"@project/contracts\";\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport CryptoHelper from 'helpers/CryptoHelper';\nconst ethers = require('ethers');\n\nconst ipfs = require('ipfs-api')();\n\n// Set Notification Form Type | 0 is reserved for protocol storage\nconst NFTypes = [\n  { value: \"1\", label: 'Broadcast (IPFS Payload)' },\n  { value: \"2\", label: 'Secret (IPFS Payload)' },\n  { value: \"3\", label: 'Targetted (IPFS Payload)' },\n];\n\n// Create Header\nfunction SendNotifications() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [nfProcessing, setNFProcessing] = React.useState(0);\n\n  const [nfRecipient, setNFRecipient] = React.useState('');\n  const [nfType, setNFType] = React.useState('');\n\n  const [nfSub, setNFSub] = React.useState('');\n  const [nfSubEnabled, setNFSubEnabled] = React.useState(false);\n\n  const [nfMsg, setNFMsg] = React.useState('');\n\n  const [nfCTA, setNFCTA] = React.useState('');\n  const [nfCTAEnabled, setNFCTAEnabled] = React.useState(false);\n\n  const [nfMedia, setNFMedia] = React.useState('');\n  const [nfMediaEnabled, setNFMediaEnabled] = React.useState(false);\n\n  const [nfInfo, setNFInfo] = React.useState('');\n\n  React.useEffect(() => {\n    if (nfType === \"1\") {\n      // This is broadcast, nfRecipient will be the same\n      setNFRecipient(account);\n    }\n    else {\n      setNFRecipient('');\n    }\n  }, [nfType]);\n\n  const handleSendMessage = async (e) => {\n    // Check everything in order\n    e.preventDefault();\n\n    // Set to processing\n    setNFProcessing(1);\n\n    // Toastify\n    let notificationToast = toast.dark(<LoaderToast msg=\"Preparing Notification\" color=\"#fff\"/>, {\n      position: \"bottom-right\",\n      autoClose: false,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n    // Form signer and contract connection\n    var signer = library.getSigner(account);\n    let contract = new ethers.Contract(addresses.epnscore, abis.epnscore, signer);\n\n    // For payload basic\n    let nsub = nfSub;\n    let nmsg = nfMsg;\n    let secretEncrypted;\n\n    let asub = nfSub;\n    let amsg = nfMsg;\n    let acta = nfCTA;\n    let aimg = nfMedia;\n\n    // Decide type and storage\n    switch (nfType) {\n      // Broadcast Notification\n      case \"1\":\n        break;\n\n      // Targetted Notification\n      case \"3\":\n        break;\n\n      // Secret Notification\n      case \"2\":\n        // Create secret\n        let secret = CryptoHelper.makeid(14);\n\n        // Encrypt payload and change sub and nfMsg in notification\n        nsub = \"You have a secret message!\";\n        nmsg = \"Open the app to see your secret message!\";\n\n        // get public key from EPNSCoreHelper\n        let k = await EPNSCoreHelper.getPublicKey(nfRecipient, contract);\n        if (k == null) {\n          // No public key, can't encrypt\n          setNFInfo(\"Public Key Registration is required for encryption!\");\n          setNFProcessing(2);\n\n          toast.update(notificationToast, {\n            render: \"Unable to encrypt for this user, no public key registered\",\n            type: toast.TYPE.ERROR,\n            autoClose: 5000\n          });\n\n          return;\n        }\n\n        let publickey = k.toString().substring(2);\n        //console.log(\"This is public Key: \" + publickey);\n\n        secretEncrypted = await CryptoHelper.encryptWithECIES(secret, publickey);\n        asub = CryptoHelper.encryptWithAES(nfSub, secret);\n        amsg = CryptoHelper.encryptWithAES(nfMsg, secret);\n        acta = CryptoHelper.encryptWithAES(nfCTA, secret);\n        aimg = CryptoHelper.encryptWithAES(nfMedia, secret);\n        break;\n\n      default:\n        break;\n    }\n\n    // Handle Storage\n    let storagePointer = '';\n\n    // IPFS PAYLOAD --> 1, 2, 3\n    if (nfType === \"1\" || nfType === \"2\" || nfType === \"3\") {\n      // Checks for optional fields\n      if (nfSubEnabled && isEmpty(nfSub)) {\n        setNFInfo(\"Enter Subject or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n\n        return;\n      }\n\n      if (nfMediaEnabled && isEmpty(nfMediaEnabled)) {\n        setNFInfo(\"Enter Media URL or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n        return;\n      }\n\n      if (nfCTAEnabled && isEmpty(nfCTA)) {\n        setNFInfo(\"Enter Call to Action Link or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n        return;\n      }\n\n      if (isEmpty(nfMsg)) {\n        setNFInfo(\"Message cannot be empty\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n        return;\n      }\n\n      const input = JSON.stringify(\n        {\n          \"notification\": {\n            \"title\": nsub,\n            \"body\": nmsg\n          },\n          \"data\": {\n            \"type\": nfType,\n            \"secret\": secretEncrypted,\n            \"asub\": asub,\n            \"amsg\": amsg,\n            \"acta\": acta,\n            \"aimg\": aimg\n          }\n        }\n      );\n\n      console.log(\"Uploding to IPFS...\");\n      toast.update(notificationToast, {\n        render: \"Uploding to IPFS...\",\n      });\n\n      const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\n\n      try {\n        storagePointer = await ipfs.add(input);\n      }\n      catch (e) {\n        setNFProcessing(2);\n        setNFInfo(\"IPFS Upload Error\");\n      }\n\n      console.log (\"IPFS cid: %o\", storagePointer);\n      toast.update(notificationToast, {\n        render: \"IPFS HASH: \" + storagePointer,\n      });\n\n    }\n\n    // Prepare Identity and send notification\n    const identity = nfType + \"+\" + storagePointer;\n    const identityBytes = ethers.utils.toUtf8Bytes(identity);\n\n    var anotherSendTxPromise = contract.sendNotification(nfRecipient, identityBytes);\n\n    console.log (\"Sending Transaction... \");\n    toast.update(notificationToast, {\n      render: \"Sending Transaction...\",\n    });\n\n    anotherSendTxPromise\n      .then(async (tx) => {\n        console.log(tx);\n        console.log (\"Transaction Sent!\");\n\n        toast.update(notificationToast, {\n          render: \"Transaction Sent\",\n          type: toast.TYPE.INFO,\n          autoClose: 5000\n        });\n\n        await tx.wait(1);\n        console.log (\"Transaction Mined!\");\n\n        setNFProcessing(2);\n        setNFType('');\n        setNFInfo(\"Notification Sent\");\n\n        toast.update(notificationToast, {\n          render: \"Transaction Mined / Notification Sent\",\n          type: toast.TYPE.SUCCESS,\n          autoClose: 5000\n        });\n      })\n      .catch(err => {\n        console.log(\"!!!Error handleSendMessage() --> %o\", err);\n        setNFInfo(\"Transaction Failed, please try again\");\n\n        toast.update(notificationToast, {\n          render: \"Transacion Failed: \" + err,\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n      });\n  }\n\n  const isEmpty = (field) => {\n    if (field.trim().length == 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // toast customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader\n       type=\"Oval\"\n       color={color}\n       height={30}\n       width={30}\n      />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  )\n\n  return (\n    <>\n      <Section>\n        <Content padding=\"10px 20px 20px\">\n          <Item align=\"flex-start\">\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n              <Span weight=\"200\">Send </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Notification</Span>\n            </H2>\n            <H3>EPNS supports three types of notifications (for now!). <b>Groups</b>, <b>Secrets</b> and <b>Targetted</b>.</H3>\n          </Item>\n        </Content>\n      </Section>\n\n      <Section>\n        <Content>\n          <Item align=\"stretch\">\n            <FormSubmision\n              flex=\"1\"\n              direction=\"column\"\n              margin=\"0px\"\n              justify=\"center\"\n              size=\"1.1rem\"\n              onSubmit={handleSendMessage}\n            >\n              <Item margin =\"0px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                <Item flex=\"5\" justify=\"flex-start\" align=\"stretch\" minWidth=\"280px\">\n                  <DropdownStyledParent>\n                    <DropdownStyled options={NFTypes} onChange={(option) => {setNFType(option.value); console.log(option)}} value={nfType} placeholder=\"Select Type of Notification to Send\" />\n                  </DropdownStyledParent>\n                </Item>\n                <Input display=\"none\" value={nfType} onChange={(e) => {setNFType(e.target.value)}} />\n\n                {nfType &&\n                  <ItemH margin=\"0px 15px 15px 15px\" bg=\"#f1f1f1\" flex=\"1\" self=\"stretch\" justify=\"space-between\">\n                    <ItemH margin=\"15px 10px\" flex=\"inital\">\n                      <Span margin=\"0px 10px 0px 0px\" weight=\"400\" spacing=\"0.1em\" textTransform=\"uppercase\" size=\"0.8em\" bg=\"#e20880\" color=\"#fff\" padding=\"5px 15px\" radius=\"30px\">Enable Subject</Span>\n                      <Switch color=\"primary\" size=\"small\" checked={nfSubEnabled} onChange={() => setNFSubEnabled(!nfSubEnabled)} />\n                    </ItemH>\n\n                    <ItemH margin=\"15px 10px\" flex=\"inital\">\n                      <Span margin=\"0px 10px 0px 0px\" weight=\"400\" spacing=\"0.1em\" textTransform=\"uppercase\" size=\"0.8em\" bg=\"#e20880\" color=\"#fff\" padding=\"5px 15px\" radius=\"30px\">Enable Media</Span>\n                      <Switch color=\"primary\" size=\"small\" checked={nfMediaEnabled} onChange={() => setNFMediaEnabled(!nfMediaEnabled)} />\n                    </ItemH>\n\n                    <ItemH margin=\"15px 10px\" flex=\"inital\">\n                      <Span margin=\"0px 10px 0px 0px\" weight=\"400\" spacing=\"0.1em\" textTransform=\"uppercase\" size=\"0.8em\" bg=\"#e20880\" color=\"#fff\" padding=\"5px 15px\" radius=\"30px\">Enable CTA</Span>\n                      <Switch color=\"primary\" size=\"small\" checked={nfCTAEnabled} onChange={() => setNFCTAEnabled(!nfCTAEnabled)} />\n                    </ItemH>\n                  </ItemH>\n                }\n              </Item>\n\n              {!nfType &&\n                <Item padding=\"0px 20px 30px 20px\" />\n              }\n\n              {(nfType === \"2\" || nfType === \"3\") &&\n                <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                  <Input\n                    required\n                    placeholder=\"Enter recipient wallet address\"\n                    radius=\"4px\"\n                    padding=\"12px\"\n                    border=\"1px solid #674c9f\"\n                    bg=\"#fff\"\n                    value={nfRecipient}\n                    onChange={(e) => {setNFRecipient(e.target.value)}}\n                  />\n                  {nfRecipient.trim().length == 0 &&\n                      <Span\n                        padding=\"4px 10px\"\n                        right=\"0px\"\n                        top=\"0px\"\n                        pos=\"absolute\"\n                        color=\"#fff\"\n                        bg=\"#000\"\n                        size=\"0.7rem\"\n                        z=\"1\"\n                      >\n                        Recipient Wallet\n                      </Span>\n                    }\n                </Item>\n              }\n\n              {nfType && nfSubEnabled &&\n                <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                  <Input\n                    required\n                    placeholder=\"Subject of Notification\"\n                    padding=\"12px\"\n                    borderBottom=\"1px solid #000\"\n                    weight=\"400\"\n                    size=\"1.2em\"\n                    bg=\"#fff\"\n                    value={nfSub}\n                    onChange={(e) => {setNFSub(e.target.value)}}\n                  />\n                  {nfSub.trim().length == 0 &&\n                      <Span\n                        padding=\"4px 10px\"\n                        right=\"0px\"\n                        top=\"0px\"\n                        pos=\"absolute\"\n                        color=\"#fff\"\n                        bg=\"#000\"\n                        size=\"0.7rem\"\n                        z=\"1\"\n                      >\n                        Subject\n                      </Span>\n                    }\n                </Item>\n              }\n\n              {nfType &&\n                <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                  <TextField\n                    required\n                    placeholder=\"Notification Message\"\n                    rows=\"6\"\n                    radius=\"4px\"\n                    padding=\"12px\"\n                    weight=\"400\"\n                    border=\"1px solid #000\"\n                    bg=\"#fff\"\n                    value={nfMsg}\n                    onChange={(e) => {setNFMsg(e.target.value)}}\n                    autocomplete=\"off\"\n                  />\n                </Item>\n              }\n\n              {nfType && nfMediaEnabled &&\n                <ItemH padding=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"center\">\n                  <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                    <BsFillImageFill size={24} color=\"#000\"/>\n                  </Item>\n                  <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                    <Input\n                      required\n                      placeholder=\"Media URL for Notification\"\n                      padding=\"12px\"\n                      border=\"1px solid #000\"\n                      radius=\"4px\"\n                      weight=\"400\"\n                      bg=\"#f1f1f1\"\n                      value={nfMedia}\n                      onChange={(e) => {setNFMedia(e.target.value)}}\n                    />\n                    {nfMedia.trim().length == 0 &&\n                        <Span\n                          padding=\"4px 10px\"\n                          right=\"0px\"\n                          top=\"0px\"\n                          pos=\"absolute\"\n                          color=\"#fff\"\n                          bg=\"#000\"\n                          size=\"0.7rem\"\n                          z=\"1\"\n                        >\n                          Media URL\n                        </Span>\n                      }\n                    </Item>\n                </ItemH>\n              }\n\n              {nfType && nfCTAEnabled &&\n                <ItemH margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"center\">\n                  <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                    <FiLink size={24} color=\"#000\"/>\n                  </Item>\n                  <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                    <Input\n                      required\n                      placeholder=\"Call to Action Link\"\n                      padding=\"12px\"\n                      border=\"1px solid #000\"\n                      radius=\"4px\"\n                      weight=\"400\"\n                      bg=\"#f1f1f1\"\n                      value={nfCTA}\n                      onChange={(e) => {setNFCTA(e.target.value)}}\n                    />\n                    {nfCTA.trim().length == 0 &&\n                        <Span\n                          padding=\"4px 10px\"\n                          right=\"0px\"\n                          top=\"0px\"\n                          pos=\"absolute\"\n                          color=\"#fff\"\n                          bg=\"#000\"\n                          size=\"0.7rem\"\n                          z=\"1\"\n                        >\n                          Call to Action URL\n                        </Span>\n                      }\n                    </Item>\n                </ItemH>\n              }\n\n              {nfInfo && nfProcessing != 1 &&\n                <Item\n                  color=\"#fff\"\n                  bg=\"#e1087f\"\n                  padding=\"10px 15px\"\n                  margin = \"15px 0px\"\n                >\n                  <Span\n                    color=\"#fff\"\n                    textTransform=\"uppercase\"\n                    spacing=\"0.1em\"\n                    weight=\"400\"\n                    size=\"1em\"\n                  >\n                    {nfInfo}\n                  </Span>\n                </Item>\n              }\n\n              {nfType &&\n                <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                  <Button\n                    bg='#e20880'\n                    color='#fff'\n                    flex=\"1\"\n                    radius=\"0px\"\n                    padding=\"20px 10px\"\n                    disabled={nfProcessing == 1 ? true : false}\n                  >\n                    {nfProcessing == 1 &&\n                      <Loader\n                         type=\"Oval\"\n                         color=\"#fff\"\n                         height={24}\n                         width={24}\n                        />\n                    }\n                    {nfProcessing != 1 &&\n                      <Input cursor=\"hand\" textTransform=\"uppercase\" color=\"#fff\" weight=\"400\" size=\"0.8em\" spacing=\"0.2em\" type=\"submit\" value=\"Send Notification\" />\n                    }\n                  </Button>\n                </Item>\n              }\n            </FormSubmision>\n          </Item>\n        </Content>\n      </Section>\n\n\n    </>\n  );\n}\n\n// css styles\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`\n\nconst DropdownStyledParent = styled.div `\n  .is-open {\n    margin-bottom: 130px;\n  }\n`\n\nconst DropdownStyled = styled(Dropdown)`\n\n  .Dropdown-control {\n    background-color: #000;\n    color: #fff;\n    padding: 12px 52px 12px 10px;\n    border: 1px solid #000;\n    border-radius: 4px;\n  }\n\n  .Dropdown-placeholder {\n    text-transform: uppercase;\n    font-weight: 400;\n    letter-spacing: 0.2em;\n    font-size: 0.8em;\n  }\n\n  .Dropdown-arrow {\n    top: 18px;\n    bottom: 0;\n    border-color: #fff transparent transparent;\n  }\n\n  .Dropdown-menu {\n    border: 1px solid #000;\n    box-shadow: none;\n    background-color: #000;\n    border-radius: 0px;\n    margin-top: -3px;\n    border-bottom-right-radius: 4px;\n    border-bottom-left-radius: 4px;\n  }\n\n  .Dropdown-option {\n    background-color: rgb(35 35 35);\n    color: #ffffff99;\n\n    text-transform: uppercase;\n    letter-spacing: 0.2em;\n    font-size: 0.7em;\n    padding: 15px 20px;\n  }\n\n  .Dropdown-option:hover {\n    background-color: #000000;\n    color: #fff;\n  }\n`\n\n\n// Export Default\nexport default SendNotifications;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content} from 'components/SharedStyling';\n\nimport SendNotifications from 'components/SendNotifications';\n\n// CREATE CHANNEL OWNER DASHBOARD\nfunction ChannelOwnerDashboard() {\n  React.useEffect(() => {\n\n  });\n\n  // RRENDER\n  return (\n    <>\n      <Section>\n        <Content padding=\"0px\">\n          <SendNotifications />\n        </Content>\n      </Section>\n    </>\n  );\n}\n\n// css styles\n\n\n// Export Default\nexport default ChannelOwnerDashboard;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content} from 'components/SharedStyling';\n\nimport CreateChannel from 'components/CreateChannel';\n\n// CREATE CHANNEL OWNER DASHBOARD\nfunction ChannelCreationDashboard() {\n  React.useEffect(() => {\n\n  });\n\n  // RRENDER\n  return (\n    <>\n      <Section>\n        <Content padding=\"0px\">\n          <CreateChannel />\n        </Content>\n      </Section>\n    </>\n  );\n}\n\n// css styles\n\n\n// Export Default\nexport default ChannelCreationDashboard;\n","import React from \"react\";\nimport ReactGA from 'react-ga';\n\nimport styled, { css } from 'styled-components';\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers } from \"ethers\";\n\nimport Loader from 'react-loader-spinner'\n\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\n\nimport Feedbox from 'segments/Feedbox';\nimport ViewChannels from 'segments/ViewChannels';\nimport Info from \"segments/Info\";\nimport ChannelOwnerDashboard from 'segments/ChannelOwnerDashboard';\nimport ChannelCreationDashboard from 'segments/ChannelCreationDashboard';\n\nimport ChannelsDataStore, { ChannelEvents } from \"singletons/ChannelsDataStore\";\nimport UsersDataStore, { UserEvents } from \"singletons/UsersDataStore\";\n\n\n// Create Header\nfunction Home({ setBadgeCount, bellPressed }) {\n  ReactGA.pageview('/home');\n\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [epnsReadProvider, setEpnsReadProvider] = React.useState(null);\n  const [epnsWriteProvider, setEpnsWriteProvider] = React.useState(null);\n\n  const [controlAt, setControlAt] = React.useState(0);\n  const [adminStatusLoaded, setAdminStatusLoaded] = React.useState(false);\n  const [channelAdmin, setChannelAdmin] = React.useState(false);\n  const [channelJson, setChannelJson] = React.useState([]);\n\n\n\n  React.useEffect(() => {\n    const contractInstance = new ethers.Contract(addresses.epnscore, abis.epnscore, library);\n    setEpnsReadProvider(contractInstance);\n\n    if (!!(library && account)) {\n      let signer = library.getSigner(account);\n      const signerInstance = new ethers.Contract(addresses.epnscore, abis.epnscore, signer);\n      setEpnsWriteProvider(signerInstance);\n    }\n\n  }, [account]);\n\n  React.useEffect(() => {\n    // Reset when account refreshes\n    setChannelAdmin(false);\n    setAdminStatusLoaded(false);\n    userClickedAt(1);\n    setChannelJson([]);\n\n    // EPNS Read Provider Set\n    if (epnsReadProvider != null) {\n      // Instantiate Data Stores\n      UsersDataStore.instance.init(account, epnsReadProvider);\n      ChannelsDataStore.instance.init(account, epnsReadProvider);\n\n      checkUserForChannelRights();\n    }\n\n  }, [epnsReadProvider]);\n\n\n  // Revert to Feedbox on bell pressed\n  React.useEffect(() => {\n    setControlAt(0);\n  }, [bellPressed]);\n\n  // handle user action at control center\n  const userClickedAt = (controlIndex) => {\n    setControlAt(controlIndex);\n  }\n\n  //Start Listening...\n  const listenerForChannelRights = async () => {\n    ChannelsDataStore.instance.addCallbacks(\n      ChannelEvents.ADD_CHANNEL_SELF,\n      \"FromCreateChannel\",\n      () => {\n        checkUserForChannelRights();\n      }\n    );\n  }\n\n  // Check if a user is a channel or not\n  const checkUserForChannelRights = async () => {\n    // Check if account is admin or not and handle accordingly\n    EPNSCoreHelper.getChannelJsonFromUserAddress(account, epnsReadProvider)\n      .then(response => {\n        console.log(response);\n        setChannelJson(response);\n        setChannelAdmin(true);\n        setAdminStatusLoaded(true);\n      })\n      .catch(e => {\n        setChannelAdmin(false);\n        setAdminStatusLoaded(true);\n      });\n\n    // Start listening\n    listenerForChannelRights();\n  }\n\n  // Render\n  return (\n    <Container>\n      <Controls>\n        <ControlButton index={0} active={controlAt == 0 ? 1 : 0} border=\"#e20880\"\n          onClick={() => {\n            userClickedAt(0)\n          }}\n        >\n          <ControlImage src=\"./svg/feedbox.svg\" active={controlAt == 0 ? 1 : 0} />\n          <ControlText active={controlAt == 0 ? 1 : 0}>Feedbox</ControlText>\n        </ControlButton>\n\n        <ControlButton index={1} active={controlAt == 1 ? 1 : 0} border=\"#35c5f3\"\n          onClick={() => {\n            userClickedAt(1)\n          }}\n        >\n          <ControlImage src=\"./svg/channel.svg\" active={controlAt == 1 ? 1 : 0}/>\n          <ControlText active={controlAt == 1 ? 1 : 0}>Channels</ControlText>\n        </ControlButton>\n\n        <ControlButton index={2} active={controlAt == 2 ? 1 : 0} border=\"#674c9f\"\n          disabled={!adminStatusLoaded}\n          onClick={() => {\n            if (adminStatusLoaded) {\n              userClickedAt(2)\n            }\n          }}\n        >\n          {!adminStatusLoaded &&\n            <Loader\n               type=\"Oval\"\n               color=\"#674c9f\"\n               height={32}\n               width={32}\n            />\n          }\n          {channelAdmin && adminStatusLoaded &&\n            <ControlChannelContainer>\n              <ControlChannelImage src={`${channelJson.icon}`} active={controlAt == 2 ? 1 : 0}/>\n              <ControlChannelText active={controlAt == 2 ? 1 : 0}>{channelJson.name}</ControlChannelText>\n            </ControlChannelContainer>\n          }\n          {!channelAdmin && adminStatusLoaded &&\n            <>\n              <ControlImage src=\"./svg/channeladmin.svg\" active={controlAt == 2 ? 1 : 0}/>\n              <ControlText active={controlAt == 2 ? 1 : 0}>Create Your Channel</ControlText>\n            </>\n          }\n        </ControlButton>\n\n        <ControlButton index={3} active={controlAt == 3 ? 1 : 0} border=\"#e20880\"\n          onClick={() => {\n            userClickedAt(3)\n          }}\n        >\n          <ControlImage src=\"./svg/share.svg\" active={controlAt == 3 ? 1 : 0} />\n          <ControlText active={controlAt == 3 ? 1 : 0}>Receive Notifs</ControlText>\n        </ControlButton>\n      </Controls>\n      <Interface>\n        {controlAt == 0 &&\n          <Feedbox\n            epnsReadProvider={epnsReadProvider}\n          />\n        }\n        {controlAt == 1 &&\n          <ViewChannels\n            epnsReadProvider={epnsReadProvider}\n            epnsWriteProvide={epnsWriteProvider}\n          />\n        }\n        {controlAt == 2 && !channelAdmin && adminStatusLoaded &&\n          <ChannelCreationDashboard />\n        }\n        {controlAt == 2 && channelAdmin && adminStatusLoaded &&\n          <ChannelOwnerDashboard />\n        }\n        {controlAt == 3 &&\n          <Info/>\n        }\n      </Interface>\n    </Container>\n  );\n}\n\n// css style\nconst Container = styled.div`\n  flex: 1;\n  display: block;\n  flex-direction: column;\n  min-height: calc(100vh - 100px);\n`\n\nconst Controls = styled.div`\n  flex: 0;\n  display: flex;\n  flex-direction: row;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`\n\nconst ControlButton = styled.div`\n  flex: 1 1 21%;\n  height: 120px;\n  min-width: 200px;\n  background: #fff;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225,225,225);\n\n  border-bottom: 10px solid rgb(180,180,180);\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-bottom: 10px solid ${(props) => props.active ? props.border : \"rgb(180,180,180)\"};\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst ControlImage = styled.img`\n  height: 30%;\n  margin-right: 15px;\n  filter: ${(props) => props.active ? \"brightness(1)\" : \"brightness(0)\"};\n  opacity: ${(props) => props.active ? \"1\" : \"0.25\"};\n\n  transition: transform .2s ease-out;\n  ${ props => props.active && css`\n    transform: scale(3.5) translate(-20px, 0px);\n    opacity: 0.4;\n  `};\n`\n\nconst ControlText = styled.label`\n  font-size: 16px;\n  font-weight: 200;\n  opacity: ${(props) => props.active ? \"1\" : \"0.75\"};\n\n  transition: transform .2s ease-out;\n  ${ props => props.active && css`\n    transform: scale(1.3) translate(-10px, 0px);\n  `};\n`\n\nconst ControlChannelContainer = styled.div`\n  margin: 0px 20px;\n  flex-direction: column;\n  align-items: center;\n  display: flex;\n`\n\nconst ControlChannelImage = styled.img`\n    width: 20%;\n    margin-bottom: 10px;\n    transition: transform .2s ease-out;\n    ${ props => props.active && css`\n      transform: scale(3.5) translate(-40px, 5px);\n      opacity: 0.2;\n      z-index: 1;\n    `};\n`\n\nconst ControlChannelText = styled.label`\n  font-size: 16px;\n  font-weight: 300;\n  opacity: ${(props) => props.active ? \"1\" : \"0.75\"};\n  transition: transform .2s ease-out;\n  background: -webkit-linear-gradient(#db268a, #34c6f3);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  z-index: 2;\n  ${ props => props.active && css`\n    transform: scale(1.1) translate(0px, -20px);\n  `};\n\n`\n\nconst Interface = styled.div`\n  flex: 1;\n  display: flex;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 20px;\n  border: 1px solid rgb(225,225,225);\n\n  margin: 15px;\n  overflow: hidden;\n`\n\n// Export Default\nexport default Home;\n","// Usage:\n//   create component file (e.g. BlockiesIdenticon.js) using uncommented code below\n//   npm install blockies-identicon\n//   in the file you want to use the component (e.g. BlockiesIdenticon.js):\n//   import Blockies from \"blockies/react-component\";\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\nimport React from 'react';\nimport blockies from \"./blockies\";\n\nexport default class BlockiesIdenticon extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  getOpts () {\n    return {\n      seed: this.props.opts.seed || \"foo\",\n      color: this.props.opts.color || \"#dfe\",\n      bgcolor: this.props.opts.bgcolor || \"#a71\",\n      size: this.props.opts.size || 15,\n      scale: this.props.opts.scale || 3,\n      spotcolor: this.props.opts.spotcolor || \"#000\"\n    };\n  }\n  componentDidMount() {\n    this.draw();\n  }\n  componentDidUpdate(prevProps) {\n    // Check for prop change\n    if (this.props.seed !== prevProps.seed) {\n      this.draw();\n    }\n  }\n  draw() {\n    blockies.render({\n      seed: this.props.opts.seed,\n      size: this.props.opts.size,\n      scale: this.props.opts.scale\n    }, this.canvas);\n  }\n  render() {\n    return React.createElement(\"canvas\", {ref: canvas => this.canvas = canvas});\n  }\n}\n","import React from \"react\";\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\nimport styled, { css } from 'styled-components';\n\nimport Loader from 'react-loader-spinner'\nimport Blockies from \"components/BlockiesIdenticon\";\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\n// Create Header\nfunction Profile() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [address, setAddress] = React.useState('');\n  const [ens, setENS] = React.useState('');\n  const [ensFetched, setENSFetched] = React.useState(false);\n\n  React.useEffect(() => {\n    if (account && account != '') {\n      // Check if the address is the same\n      if (address !== account) {\n        setENS('');\n        setENSFetched(false);\n\n        // get ens\n        library\n          .lookupAddress(account).then(function(name) {\n            setENS(name);\n            setENSFetched(true);\n            setAddress(account);\n          })\n          .catch(() => {\n            setENSFetched(true);\n            setAddress(account);\n          })\n      }\n\n    }\n  }, [account]);\n\n  // to create blockies\n\n  return (\n    <>\n    {account && account !== '' && !error &&\n      <Container>\n        <Blocky>\n          <BlockyInner>\n             <Blockies seed={account.toLowerCase()} opts={{seed: account.toLowerCase(), size: 7, scale: 7}}/>\n          </BlockyInner>\n        </Blocky>\n        <Wallet>\n        {!ensFetched &&\n          <Loader\n      \t     type=\"Oval\"\n      \t     color=\"#FFF\"\n      \t     height={16}\n      \t     width={16}\n      \t  />\n        }\n        {ensFetched && ens &&\n          <>{ens}</>\n        }\n        {ensFetched && !ens &&\n          <>{account.substring(0, 6)}.....{account.substring(account.length - 6)}</>\n        }\n        </Wallet>\n      </Container>\n    }\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  margin: 0;\n  padding: 0;\n  background: none;\n  border: 0;\n  outline: 0;\n  justify-content: flex-start;\n  flex: 1,\n  flex-direction: row;\n  align-items: center;\n  display: flex;\n`\n\nconst Blocky = styled.div`\n  position: relative;\n  width: 50px;\n  height: 50px;\n  border-radius: 100%;\n  overflow: hidden;\n  transform: scale(0.85);\n  outline-width: 2px;\n  outline-color: rgba(225,225,225,1);\n`\n\nconst BlockyInner = styled.div`\n`\n\nconst Wallet = styled.span`\n  margin: 0px 10px;\n  padding: 8px 15px;\n  height: 16px;\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  font-weight: bold;\n  font-size: 14px;\n  color: #fff;\n  border-radius: 15px;\n  background: rgb(226,8,128);\n  background: linear-gradient(107deg, rgba(226,8,128,1) 30%, rgba(103,76,159,1) 70%, rgba(53,197,243,1) 100%);\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\n// Export Default\nexport default Profile;\n","import React from \"react\";\nimport styled, { css, keyframes } from 'styled-components';\nimport { AnimateOnChange } from 'react-animation';\n\n// Create Header\nfunction Bell({ badgeCount, bellPressedCB, width, height }) {\n  const [badge, setBadge] = React.useState(0);\n  const [ring, setRing] = React.useState(false);\n\n  React.useEffect(() => {\n    // Set new badge count and ring the bell\n    setBadge(badgeCount);\n\n    if (badge > 0) {\n      setResetRinger();\n    }\n  }, [badgeCount]);\n\n  const setResetRinger = () => {\n    setRing(true);\n\n    setTimeout(() => {\n        setRing(false)\n    }, 500);\n  }\n\n  return (\n    <Container\n      onClick={() => {\n        if (bellPressedCB) {bellPressedCB();}\n      }}\n      width={width}\n      height={height}\n    >\n      <BellImage ring={ring} src=\"./bell.png\" className=\"tadaaa\" ringme={ring} width={width} height={height} />\n      <BellImageAbs src=\"./bellball.png\" width={width} height={height} />\n      <BellImageAbs src=\"./ring.png\" width={width} height={height} />\n      {badge != 0 &&\n        <AnimateOnChange\n          animationIn=\"fadeIn\"\n          animationOut=\"fadeOut\"\n          durationOut={200}\n        >\n          <Badge>{badge}</Badge>\n        </AnimateOnChange>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  border: 0;\n  outline: 0;\n  background: transparent;\n  border: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 10px;\n  position: relative;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst tadaaa = keyframes`\n  0% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n\n  10%, 20% {\n    -webkit-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n  }\n\n  30%, 50%, 70%, 90% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n  }\n\n  40%, 60%, 80% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n  }\n\n  100% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n`;\n\nconst BellImage = styled.img`\n  position: absolute;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n\n  transition: transform .2s ease-out;\n  ${ props => props.ringme && css`\n    animation: ${tadaaa} 1s ease-out;\n  `};\n\n\n`\n\nconst BellImageAbs = styled(BellImage)`\n  left: 0,\n`\n\nconst Badge = styled.span`\n  position: absolute;\n  font-size: 10px;\n  color: #fff;\n  padding: 2px 4px;\n  border-radius: 100%;\n  background: rgba(208.0, 44.0, 30.0, 1.0);\n  top: 0px;\n  left: 5px;\n  font-weight: bold;\n`\n\n// Export Default\nexport default Bell;\n","import React from \"react\";\n\nimport styled, { css } from \"styled-components\";\nimport {Section, Content, Item, ItemH, Button} from 'components/SharedStyling';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { Web3Provider } from 'ethers/providers'\n\nimport Profile from 'components/Profile';\nimport Bell from 'components/Bell';\n\n\n// Create Header\nfunction Header({ badgeCount, bellPressedCB }) {\n  const context = useWeb3React<Web3Provider>()\n\n  const { active, error, account, chainId } = useWeb3React();\n  const { deactivate } = context\n\n  const [showLoginControls, setShowLoginControls] = React.useState(false);\n\n  function getErrorMessage(error: Error) {\n    if (error instanceof NoEthereumProviderError) {\n      return 'Web3 not enabled, install MetaMask on desktop or visit from a dApp browser on mobile'\n    } else if (error instanceof UnsupportedChainIdError) {\n      return \"Unsupported Network, please connect to Ropsten\"\n    } else if (\n      error instanceof UserRejectedRequestErrorInjected\n    ) {\n      return 'Please authorize this website to access the dApp'\n    } else {\n      console.error(error)\n      return 'An unknown error occurred. Check the console for more details'\n    }\n  }\n\n  const bellPressed = () => {\n    setShowLoginControls(!showLoginControls);\n  }\n\n  const disconnect = () => {\n    setShowLoginControls(false);\n    deactivate();\n  }\n\n  return (\n    <HeaderContainer\n      direction=\"row\"\n      padding=\"10px 15px\"\n    >\n      <ItemH\n        justify=\"flex-start\"\n        flex=\"0\"\n      >\n        {active && !error &&\n          <Profile />\n        }\n        {!active &&\n          <Logo src=\"epns.png\" />\n        }\n      </ItemH>\n\n      <ItemH\n        justify=\"flex-end\"\n      >\n        {active && !error &&\n          <Bell\n            badgeCount={badgeCount}\n            bellPressedCB={bellPressed}\n            width={32}\n            height={32}\n          />\n        }\n\n        {showLoginControls &&\n          <Item\n            position=\"absolute\"\n          >\n            <Button\n              bg=\"#000\"\n              size=\"12px\"\n              spacing=\"0.2em\"\n              textTransform=\"uppercase\"\n              weight=\"600\"\n              radius=\"20px\"\n              onClick={() => disconnect()}\n            >\n              Disconnect\n            </Button>\n          </Item>\n        }\n\n        <ItemH\n          justify=\"flex-end\"\n          flex=\"initial\"\n        >\n          {!!error &&\n            <PrimaryTheme>{getErrorMessage(error)}</PrimaryTheme>\n          }\n          {!active && !error &&\n            <ThirdTheme>Please connect to a Web3 Network</ThirdTheme>\n          }\n          <Connection phase={active ? 'active' : error ? 'error' : 'waiting'} />\n        </ItemH>\n      </ItemH>\n    </HeaderContainer>\n  );\n}\n\n// CSS Styles\nconst HeaderContainer = styled(Section)`\n  @media (max-width: 1440px) {\n    background: rgb(255,255,255);\n  }\n`\n\nconst Logo = styled.img`\n  height: 40px;\n`\n\nconst Notice = styled.span`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n`\n\nconst PrimaryTheme = styled(Notice)`\n  background: #e20880;\n`\n\nconst ThirdTheme = styled(Notice)`\n  background: #674c9f;\n`\n\nconst Connection = styled.span`\n  height: 10px;\n  width: 10px;\n  border-radius: 100%;\n  flex-shrink: 0;\n\n  ${props => props.phase === 'active' && css`\n    background: #77DD77;\n  `};\n\n  ${props => props.phase === 'waiting' && css`\n    background: #FFAE42;\n  `};\n\n  ${props => props.phase === 'error' && css`\n    background: #DC143C;\n  `};\n`\n\n// Export Default\nexport default Header;\n","import React from \"react\";\nimport ReactGA from 'react-ga';\n\nimport styled from 'styled-components';\nimport {Section, Content, Item, ItemH, Span, H2, H3, B, A} from 'components/SharedStyling';\n\nimport Loader from 'react-loader-spinner'\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { Web3Provider } from 'ethers/providers'\n\nimport { useEagerConnect, useInactiveListener } from 'hooks'\nimport {\n  injected,\n  walletconnect,\n  portis,\n  trezor,\n  ledger\n} from 'connectors'\nimport { addresses, abis } from \"@project/contracts\";\nimport { ethers } from \"ethers\";\n\nimport Home from 'pages/Home';\nimport Header from 'segments/Header';\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\nconst web3Connectors = {\n  Injected: {obj: injected, logo: './svg/login/metamask.svg', title: 'MetaMask'},\n  WalletConnect: {obj: walletconnect, logo: './svg/login/walletconnect.svg', title: 'Wallet Connect'},\n  // Trezor: {obj: trezor, logo: './svg/login/trezor.svg', title: 'Trezor'},\n  Ledger: {obj: ledger, logo: './svg/login/ledger.svg', title: 'Ledger'},\n  Portis: {obj: portis, logo: './svg/login/portis.svg', title: 'Portis'},\n}\n\nfunction getErrorMessage(error: Error) {\n  if (error instanceof NoEthereumProviderError) {\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\n  } else if (error instanceof UnsupportedChainIdError) {\n    return \"You're connected to an unsupported network.\"\n  } else if (\n    error instanceof UserRejectedRequestErrorInjected\n  ) {\n    return 'Please authorize this website to access your Ethereum account.'\n  } else {\n    console.error(error)\n    return 'An unknown error occurred. Check the console for more details.'\n  }\n}\n\nfunction getLibrary(provider, connector) {\n  return new ethers.providers.Web3Provider(provider); // this will vary according to whether you use e.g. ethers or web3.js\n}\n\nexport default function() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  )\n}\n\nfunction ChainId() {\n  const { chainId } = useWeb3React()\n\n  return (\n    <>\n      <span>Chain Id</span>\n      <span role=\"img\" aria-label=\"chain\">\n        ⛓\n      </span>\n      <span>{Number.isInteger(chainId) ? chainId : ''}</span>\n    </>\n  )\n}\n\n\nfunction App() {\n  const context = useWeb3React<Web3Provider>()\n  const { connector, library, chainId, account, activate, deactivate, active, error } = context\n\n  const [ badgeCount, setBadgeCount ] = React.useState(0);\n  const [ bellPressed, setBellPressed ] = React.useState(0);\n\n  // Initialize GA\n  ReactGA.initialize('UA-165415629-5');\n  ReactGA.pageview('/login');\n\n  // handle logic to recognize the connector currently being activated\n  const [activatingConnector, setActivatingConnector] = React.useState<AbstractConnector>()\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined)\n    }\n  }, [activatingConnector, connector])\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect()\n\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager || !!activatingConnector)\n\n  return (\n      <>\n        <HeaderContainer>\n          <Header\n            badgeCount={badgeCount}\n            bellPressedCB={() => {setBellPressed(bellPressed + 1)}}\n          />\n        </HeaderContainer>\n\n        <ParentContainer>\n        {(active) && !error && (\n          <HomeContainer>\n            <Home\n              setBadgeCount={setBadgeCount}\n              bellPressed={bellPressed}\n            />\n          </HomeContainer>\n\n        )}\n\n        {!active &&\n          <Item>\n            <ProviderLogo src=\"./epnshomelogo.png\" srcSet={\"./epnshomelogo@2x.png 2x, ./epnshomelogo@2x.png 3x\"} />\n            <Item\n              bg=\"#fafafa\"\n              border=\"1px solid #ddd\"\n              padding=\"15px\"\n              radius=\"12px\"\n            >\n              <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n                <Span bg=\"#e20880\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Connect</Span><Span weight=\"200\"> Your Wallet</Span>\n              </H2>\n\n              <ItemH\n                maxWidth=\"800px\"\n                align=\"stretch\"\n              >\n                {Object.keys(web3Connectors).map(name => {\n                  const currentConnector = web3Connectors[name].obj\n                  const activating = currentConnector === activatingConnector\n                  const connected = currentConnector === connector\n                  const disabled = !triedEager || !!activatingConnector || connected || !!error\n                  const image = web3Connectors[name].logo\n                  const title = web3Connectors[name].title\n\n                  return (\n                    <ProviderButton\n                      disabled={disabled}\n                      key={name}\n                      onClick={() => {\n                        setActivatingConnector(currentConnector)\n                        activate(currentConnector)\n                      }}\n                      border=\"#35c5f3\"\n                    >\n                      <ProviderImage src={image} />\n\n                      <Span\n                        spacing=\"0.1em\"\n                        textTransform=\"uppercase\"\n                        size=\"12px\"\n                        weight=\"600\"\n                        padding=\"10px\"\n                      >\n                        {title}\n                      </Span>\n                    </ProviderButton>\n                  )\n                })}\n              </ItemH>\n            </Item>\n\n            <Span margin=\"10px\" size=\"14px\">\n              By unlocking your wallet, <B>You agree</B> to our <A href=\"https://epns.io/tos\" target=\"_blank\">Terms of Service</A> and our <A href=\"https://epns.io/privacy\" target=\"_blank\">Privacy Policy</A>.\n            </Span>\n          </Item>\n        }\n        </ParentContainer>\n\n        <ToastContainer\n          position=\"bottom-right\"\n          autoClose={false}\n          newestOnTop\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n        />\n      </>\n  );\n}\n\n\n// CSS STYLES\nconst HeaderContainer = styled.header`\n  left: 0;\n  right: 0;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  z-index: 999;\n`\n\nconst ParentContainer = styled.div`\n  flex-wrap: wrap;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 80px 20px 50px 20px;\n  flex: 1;\n`\n\nconst HomeContainer = styled.div`\n  display: flex;\n  flex: 1;\n  align-self: center;\n  width: 100%;\n  max-width: 1100px;\n`\n\nconst ProviderLogo = styled.img`\n  width: 15vw;\n  align-self: center;\n  display: flex;\n  margin: 10px 20px 20px 20px;\n  min-width: 200px;\n`\n\nconst ProviderButton = styled.button`\n  flex: 1 1 0;\n  min-width: 280px;\n  background: #fff;\n  outline: 0;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225,225,225);\n\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n    border: 1px solid ${props => props.border}\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n    border: 1px solid ${props => props.border}\n  }\n`\n\nconst ProviderImage = styled.img`\n  width: 32px;\n  max-height: 32px;\n  padding: 10px;\n`\n\nconst ProviderLabel = styled.span`\n  font-size: 12px;\n  margin: 5px;\n`\n\nconst StyledContainer = styled(ToastContainer).attrs({\n  // custom props\n})`\n  .Toastify__toast-container {}\n  .Toastify__toast {}\n  .Toastify__toast--error {}\n  .Toastify__toast--warning {}\n  .Toastify__toast--success {}\n  .Toastify__toast-body {\n    font-size: 12px;\n  }\n  .Toastify__progress-bar {}\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {ApolloClient, ApolloProvider, InMemoryCache} from \"@apollo/client\";\n\nimport './index.css';\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { ethers } from \"ethers\";\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\n// You should replace this uri with your own and put it into a .env file\nconst client = new ApolloClient({\n  uri: \"https://api.thegraph.com/subgraphs/name/epnsproject/epnsprod\",\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>,\n    document.getElementById(\"root\"),\n\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// This address points to a dummy ERC20 contract deployed on Ethereum Mainnet,\n// Goerli, Kovan, Rinkeby and Ropsten. Replace it with your smart contracts.\nconst addresses = {\n  ceaErc20: \"0xc1C0472c0C80bCcDC7F5D01A376Bd97a734B8815\",\n  epnscore: \"0xb02E99b9634bD21A8e3E36cc7adb673287A8FeaC\",\n  dai: \"0xf80A32A835F79D7787E8a8ee5721D0fEaFd78108\",\n  aDai: \"0xcB1Fe6F440c49E9290c3eb7f158534c2dC374201\",\n};\n\nexport default addresses;\n","import erc20Abi from \"./abis/erc20\";\nimport ownableAbi from \"./abis/ownable\";\nimport epnscoreAbi from \"./abis/epnscore\";\nimport daiAbi from \"./abis/dai\";\n\nexport const abis = {\n  erc20: erc20Abi,\n  ownable: ownableAbi,\n  epnscore: epnscoreAbi,\n  dai: daiAbi\n};\n\nexport { default as addresses } from \"./addresses\";\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content, Item, ItemH, ItemBreak, H1, H2, H3, Image, P, Span, Anchor, Button, Showoff, FormSubmision, Input, TextField} from 'components/SharedStyling';\n\nimport { FiLink } from 'react-icons/fi';\n\nimport 'react-dropzone-uploader/dist/styles.css'\nimport Dropzone from 'react-dropzone-uploader'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nimport Loader from 'react-loader-spinner';\nimport { bigNumberify, parseUnits } from 'ethers/utils'\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\nimport { addresses, abis } from \"@project/contracts\";\nconst ethers = require('ethers');\n\nconst ipfs = require('ipfs-api')()\n\nconst minStakeFees = 50;\n\n// Create Header\nfunction CreateChannel() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [processing, setProcessing] = React.useState(0);\n  const [processingInfo, setProcessingInfo] = React.useState('');\n\n  const [uploadDone, setUploadDone] = React.useState(false);\n  const [stakeFeesChoosen, setStakeFeesChoosen] = React.useState(false);\n  const [channelInfoDone, setChannelInfoDone] = React.useState(false);\n\n  const [channelName, setChannelName] = React.useState('');\n  const [channelInfo, setChannelInfo] = React.useState('');\n  const [channelURL, setChannelURL] = React.useState('');\n  const [channelFile, setChannelFile] = React.useState(undefined);\n  const [channelStakeFees, setChannelStakeFees] = React.useState(minStakeFees);\n\n  const [stepFlow, setStepFlow] = React.useState(1);\n\n  React.useEffect(() => {\n\n  });\n\n  // called every time a file's `status` changes\n  const handleChangeStatus = ({ meta, file }, status) => { console.log(status, meta, file) }\n\n  const onDropHandler=(files) =>{\n    //   var file = files[0]\n    //   const reader = new FileReader();\n    //   reader.onload = (event) => {\n    //     console.log(event.target.result);\n    //   };\n    //   reader.readAsDataURL(file);\n    // setChannelFile(file);\n    // console.log(\"Drop Handler\");\n    // console.log(file);\n  }\n\n  // receives array of files that are done uploading when submit button is clicked\n  const handleLogoSubmit = (files, allFiles) => {\n    // console.log(files.map(f => f.meta))\n    allFiles.forEach(f => {\n      var file = f.file;\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n      // console.log(f.file);\n\n      reader.onloadend = function (e) {\n        // console.log(reader.result);\n        const response = handleLogoSizeLimitation(reader.result);\n        if (response.success) {\n          setStepFlow(2);\n          setProcessing(0);\n          setUploadDone(true);\n          setChannelFile(reader.result);\n        }\n        else {\n          setProcessing(3);\n          setProcessingInfo(response.info);\n        }\n      }\n    })\n  }\n\n  const handleLogoSizeLimitation = (base64) => {\n      // Setup Error on higher size of 128px\n      var sizeOf = require('image-size');\n      var base64Data = base64.split(';base64,').pop();\n      var img = Buffer.from(base64Data, 'base64');\n      var dimensions = sizeOf(img);\n\n      // Only proceed if image is equal to or less than 128\n      if (dimensions.width > 128 || dimensions.height > 128) {\n        console.log(\"Image size check failed... returning\");\n        return {\n          success: 0,\n          info: \"Image size check failed, Image should be 128X128PX\"\n        };\n      }\n\n      // only proceed if png or jpg\n      // This is brilliant: https://stackoverflow.com/questions/27886677/javascript-get-extension-from-base64-image\n      // char(0) => '/' : jpg\n      // char(0) => 'i' : png\n      let fileext;\n      console.log(base64Data.charAt(0));\n      if (base64Data.charAt(0) == '/') {\n        return {\n          success: 1,\n          info: \"Image checks passed\"\n        };\n      }\n      else if (base64Data.charAt(0) == 'i') {\n        return {\n          success: 1,\n          info: \"Image checks passed\"\n        };\n      }\n      else {\n        return {\n          success: 0,\n          info: \"Image extension should be jpg or png\"\n        };\n      }\n  }\n\n  const handleCreateChannel = async (e) => {\n    // Check everything in order\n    // skip this for now\n    e.preventDefault();\n\n    if (isEmpty(channelName) || isEmpty(channelInfo) || isEmpty(channelURL) || isEmpty(channelFile)) {\n      setProcessing(3);\n      setProcessingInfo(\"Channel Fields are Empty! Please retry!\");\n\n      return false;\n    }\n\n    // Check complete, start logic\n    setChannelInfoDone(true);\n    setProcessing(1);\n\n    const input = JSON.stringify(\n      {\n        \"name\": channelName,\n        \"info\": channelInfo,\n        \"url\": channelURL,\n        \"icon\": channelFile\n      }\n    )\n    const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\n\n    setProcessingInfo(\"Uploading Payload...\")\n    const storagePointer = await ipfs.add(input);\n    console.log(\"IPFS storagePointer:\", storagePointer);\n    setProcessingInfo(\"Payload Uploaded, Approval to transfer DAI...\")\n    //console.log(await ipfs.cat(storagePointer));\n\n    // Send Transaction\n    // First Approve DAI\n    var signer = library.getSigner(account);\n\n    let daiContract = new ethers.Contract(addresses.dai, abis.erc20, signer);\n\n    // Pick between 50 DAI AND 25K DAI\n    const fees = parseUnits(channelStakeFees.toString(), 18);\n\n    var sendTransactionPromise = daiContract.approve(addresses.epnscore, fees);\n    const tx = await sendTransactionPromise;\n\n    console.log(tx);\n    console.log(\"waiting for tx to finish\");\n    setProcessingInfo(\"Waiting for Approval TX to finish...\");\n\n    await library.waitForTransaction(tx.hash);\n\n    let contract = new ethers.Contract(addresses.epnscore, abis.epnscore, signer);\n\n    const channelType = 2; // Open Channel\n    const identity = \"1+\" + storagePointer; // IPFS Storage Type and HASH\n    const identityBytes = ethers.utils.toUtf8Bytes(identity);\n\n    var anotherSendTxPromise = contract.createChannelWithFees(channelType, identityBytes);\n\n    setProcessingInfo(\"Creating Channel TX in progress\");\n    anotherSendTxPromise\n      .then(async function(tx) {\n        console.log(tx);\n        console.log(\"Check: \" + account);\n\n        await library.waitForTransaction(tx.hash);\n        setProcessingInfo(\"Channel Created\");\n      })\n      .catch(err => {\n        console.log(\"Error --> %o\", err);\n        setProcessing(3);\n        setProcessingInfo(\"!!!PRODUCTION ENV!!! Contact support@epns.io to whitelist your wallet\");\n      });\n  }\n\n  const isEmpty = (field) => {\n    if (field.trim().length == 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  //mind Dai\n  const mintDai = async() => {\n    var signer = library.getSigner(account);\n    let daiContract = new ethers.Contract(addresses.dai, abis.dai, signer);\n\n    let daiAmount = 1000\n    const amount = parseUnits(daiAmount.toString(), 18);\n    var mintTransactionPromise = daiContract.mint(amount);\n    const tx = await mintTransactionPromise;\n    console.log(tx)\n    await library.waitForTransaction(tx.hash);\n    setProcessingInfo(\"1000 Dai minted successfully!\");\n    console.log(\"Transaction Completed\")\n  }\n\n  return (\n    <>\n      <Section>\n        <Content padding=\"10px 20px 20px\">\n          <Item align=\"flex-start\">\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Create</Span><Span weight=\"200\"> Your Channel!</Span>\n            </H2>\n            <H3><b>Ethereum Push Notification Service</b> (EPNS) makes it extremely easy to open and maintain a genuine channel of communication with your users.</H3>\n          </Item>\n        </Content>\n      </Section>\n\n      <Section>\n        <Content padding=\"0px 20px 20px\">\n          <ItemH justify=\"space-between\">\n            <Step bg=\"#fff\" activeBG=\"#e20880\" type={stepFlow >= 1 ? \"active\" : \"inactive\"} />\n            <Step bg=\"#fff\" activeBG=\"#e20880\" type={stepFlow >= 2 ? \"active\" : \"inactive\"} />\n            <Step bg=\"#fff\" activeBG=\"#e20880\" type={stepFlow >= 3 ? \"active\" : \"inactive\"} />\n            <Line />\n          </ItemH>\n        </Content>\n      </Section>\n\n      {/* Image Upload Section */}\n      {!uploadDone &&\n        <Section>\n          <Content padding=\"50px 20px 20px\">\n            <Item align=\"flex-start\">\n              <H3 color=\"#e20880\">Upload Channel Logo to start the process. Make sure image is 128x128px.</H3>\n            </Item>\n\n            <Item margin=\"-10px 0px 20px 0px\">\n              <Dropzone\n                onChangeStatus={handleChangeStatus}\n                onSubmit={handleLogoSubmit}\n                onDrop={onDropHandler}\n                maxFiles={1}\n                multiple={false}\n                accept=\"image/jpeg,image/png\"\n              />\n            </Item>\n            <Item align=\"flex-end\">\n              <Minter onClick = {() => {\n                mintDai()\n              }}>\n                <Pool>\n                  <br></br>\n                  <PoolShare>\n                    Get Free DAI for Channel\n                  </PoolShare>\n                </Pool>\n              </Minter>\n            </Item>\n\n          </Content>\n        </Section>\n      }\n\n      {/* Stake Fees Section */}\n      {uploadDone && !stakeFeesChoosen &&\n        <Section>\n          <Content padding=\"50px 0px 0px 0px\">\n            <Item align=\"flex-start\" margin=\"0px 20px\">\n              <H3 color=\"#e20880\">Set your staking fees in DAI</H3>\n            </Item>\n\n            <Item margin=\"-10px 20px 20px 20px\" padding=\"20px 20px 10px 20px\" bg=\"#f1f1f1\">\n              <Slider\n                defaultValue={minStakeFees}\n                onChangeCommitted={(event, value) => setChannelStakeFees(value)}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                step={minStakeFees}\n                marks\n                min={minStakeFees}\n                max={25000}\n              />\n              <Span weight=\"400\" size=\"1.0em\" textTransform=\"uppercase\" spacing=\"0.2em\">Amount Staked: {channelStakeFees} DAI</Span>\n            </Item>\n\n            <Item self=\"stretch\" align=\"stretch\" margin=\"20px 0px 0px 0px\">\n              <Button\n                bg='#e20880'\n                color='#fff'\n                flex=\"1\"\n                radius=\"0px\"\n                padding=\"20px 10px\"\n                onClick={() => {setStakeFeesChoosen(true); setStepFlow(3)}}\n              >\n                <Span color=\"#fff\" weight=\"400\" textTransform=\"uppercase\" spacing=\"0.1em\">Continue</Span>\n              </Button>\n            </Item>\n          </Content>\n        </Section>\n      }\n\n      {/* Channel Entry */}\n      {uploadDone && stakeFeesChoosen && !channelInfoDone &&\n        <Section>\n          <Content padding=\"50px 0px 0px 0px\">\n            <Item align=\"flex-start\" margin=\"0px 20px\">\n              <H3 color=\"#e20880\">Setup your Channel Info</H3>\n            </Item>\n\n            <FormSubmision\n              flex=\"1\"\n              direction=\"column\"\n              margin=\"0px\"\n              justify=\"center\"\n              size=\"1.1rem\"\n              onSubmit={handleCreateChannel}\n            >\n\n              <Item margin=\"-10px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                <Input\n                  required\n                  placeholder=\"Your Channel Name\"\n                  maxlength = \"40\"\n                  padding=\"12px\"\n                  borderBottom=\"1px solid #000\"\n                  weight=\"400\"\n                  size=\"1.2em\"\n                  bg=\"#fff\"\n                  value={channelName}\n                  onChange={(e) => {setChannelName(e.target.value)}}\n                />\n                {channelName.trim().length == 0 &&\n                    <Span\n                      padding=\"4px 10px\"\n                      right=\"0px\"\n                      top=\"0px\"\n                      pos=\"absolute\"\n                      color=\"#fff\"\n                      bg=\"#000\"\n                      size=\"0.7rem\"\n                      z=\"1\"\n                    >\n                      Name of Channel\n                    </Span>\n                  }\n              </Item>\n\n              <Item margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                <TextField\n                  required\n                  placeholder=\"Your Channel's Short Description (200 Characters)\"\n                  rows=\"4\"\n                  maxlength=\"200\"\n                  radius=\"4px\"\n                  padding=\"12px\"\n                  weight=\"400\"\n                  border=\"1px solid #000\"\n                  bg=\"#fff\"\n                  value={channelInfo}\n                  onChange={(e) => {setChannelInfo(e.target.value)}}\n                  autocomplete=\"off\"\n                />\n              </Item>\n\n              <ItemH margin=\"15px 20px 15px 20px\" flex=\"1\" self=\"stretch\" align=\"center\">\n                <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                  <FiLink size={24} color=\"#000\"/>\n                </Item>\n                <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                  <Input\n                    required\n                    placeholder=\"Call to Action Link\"\n                    padding=\"12px\"\n                    border=\"1px solid #000\"\n                    radius=\"4px\"\n                    weight=\"400\"\n                    bg=\"#f1f1f1\"\n                    value={channelURL}\n                    onChange={(e) => {setChannelURL(e.target.value)}}\n                  />\n                  {channelURL.trim().length == 0 &&\n                      <Span\n                        padding=\"4px 10px\"\n                        right=\"0px\"\n                        top=\"0px\"\n                        pos=\"absolute\"\n                        color=\"#fff\"\n                        bg=\"#000\"\n                        size=\"0.7rem\"\n                        z=\"1\"\n                      >\n                        Channel's Website URL\n                      </Span>\n                    }\n                  </Item>\n              </ItemH>\n\n              <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                <Button\n                  bg='#e20880'\n                  color='#fff'\n                  flex=\"1\"\n                  radius=\"0px\"\n                  padding=\"20px 10px\"\n                  disabled={processing == 1 ? true : false}\n                >\n                  {processing == 1 &&\n                    <Loader\n                       type=\"Oval\"\n                       color=\"#fff\"\n                       height={24}\n                       width={24}\n                      />\n                  }\n                  {processing != 1 &&\n                    <Input cursor=\"hand\" textTransform=\"uppercase\" color=\"#fff\" weight=\"400\" size=\"0.8em\" spacing=\"0.2em\" type=\"submit\" value=\"Setup Channel\" />\n                  }\n                </Button>\n              </Item>\n            </FormSubmision>\n          </Content>\n        </Section>\n      }\n\n      {/* Channel Setup Progress */}\n      {(processing == 1 || processing == 3) &&\n        <Section>\n          <Content padding=\"0px 0px 0px 0px\">\n            {processing == 1 &&\n              <Item margin=\"20px 0px 10px 0px\">\n                <Loader\n                  type=\"Oval\"\n                  color=\"#000\"\n                  height={24}\n                  width={24}\n                />\n              </Item>\n            }\n\n            <Item\n              color=\"#fff\"\n              bg={processing == 1 ? \"#e1087f\" : \"#000\"}\n              padding=\"10px 15px\"\n              margin = \"15px 0px\"\n            >\n              <Span\n                color=\"#fff\"\n                textTransform=\"uppercase\"\n                spacing=\"0.1em\"\n                weight=\"400\"\n                size=\"1em\"\n              >\n                {processingInfo}\n              </Span>\n            </Item>\n\n          </Content>\n        </Section>\n      }\n    </>\n  );\n}\n\n// css styles\nconst Step = styled.div`\n  height: 12px;\n  width: 12px;\n  background: ${props => props.bg || \"#fff\"};\n  border: 4px solid ${props => props.activeBG || \"#000\"};\n  border-radius: 100%;\n\n  ${({ type }) => type == \"active\" && css`\n    background: ${props => props.activeBG || \"#ddd\"};\n    border: 4px solid #00000022;\n  `};\n`\n\nconst Line = styled.div`\n  position: absolute;\n  height: 5px;\n  background: #f1f1f1;\n  right: 0;\n  left: 0;\n  margin: 0px 10px;\n  z-index: -1;\n`\n\nconst Channel = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\nconst Notice = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst Title = styled.h1`\n  color: #674c9f;\n  font-size: 30px;\n  font-weight: 300;\n  margin-top: 0px;\n  margin-bottom: 30px;\n`\n\nconst Info = styled.label`\n  padding-bottom: 20px;\n  font-size: 14px;\n  color: #000;\n`\n\nconst Info2 = styled(Info)`\n\n`\nconst Name = styled(Input)`\n  border-bottom: 1px solid #e20880;\n  font-size: 24px;\n`\n\nconst ShortInfo = styled.textarea`\n  outline: 0;\n  border: 0;\n  border-bottom: 1px solid #35c5f3;\n  margin: 10px;\n  font-size: 18px;\n  min-height: 80px;\n  color: #111;\n`\n\nconst Url = styled(Input)`\n  border-bottom: 1px solid #674c9f;\n  font-size: 1=8px;\n`\n\nconst Text = styled.span`\n\n`\n\nconst Continue = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n  background: ${props => props.theme || '#674c9f'};\n  margin: 30px 0px 0px 0px;\n  border-radius: 8px;\n  padding: 16px;\n  font-size: 16px;\n  font-weight: 400;\n`\nconst Minter = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 13px;\n`\n\nconst ChannelMetaBox = styled.label`\n  margin: 0px 5px;\n  color: #fff;\n  font-weight: 600;\n  padding: 10px 20px;\n  border-radius: 10px;\n  font-size: 15px;\n  // font-size: 11px;\n`\nconst Pool = styled.div`\n  margin: 0px 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst PoolShare = styled(ChannelMetaBox)`\n  background: #e20880;\n  // background: #674c9f;\n`\n\n\n// Export Default\nexport default CreateChannel;\n","(function() {\n\t// The random number is a js implementation of the Xorshift PRNG\n\tvar randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\n\n\tfunction seedrand(seed) {\n\t\tfor (var i = 0; i < randseed.length; i++) {\n\t\t\trandseed[i] = 0;\n\t\t}\n\t\tfor (var i = 0; i < seed.length; i++) {\n\t\t\trandseed[i%4] = ((randseed[i%4] << 5) - randseed[i%4]) + seed.charCodeAt(i);\n\t\t}\n\t}\n\n\tfunction rand() {\n\t\t// based on Java's String.hashCode(), expanded to 4 32bit values\n\t\tvar t = randseed[0] ^ (randseed[0] << 11);\n\n\t\trandseed[0] = randseed[1];\n\t\trandseed[1] = randseed[2];\n\t\trandseed[2] = randseed[3];\n\t\trandseed[3] = (randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8));\n\n\t\treturn (randseed[3]>>>0) / ((1 << 31)>>>0);\n\t}\n\n\tfunction createColor() {\n\t\t//saturation is the whole color spectrum\n\t\tvar h = Math.floor(rand() * 360);\n\t\t//saturation goes from 40 to 100, it avoids greyish colors\n\t\tvar s = ((rand() * 60) + 40) + '%';\n\t\t//lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\n\t\tvar l = ((rand()+rand()+rand()+rand()) * 25) + '%';\n\n\t\tvar color = 'hsl(' + h + ',' + s + ',' + l + ')';\n\t\treturn color;\n\t}\n\n\tfunction createImageData(size) {\n\t\tvar width = size; // Only support square icons for now\n\t\tvar height = size;\n\n\t\tvar dataWidth = Math.ceil(width / 2);\n\t\tvar mirrorWidth = width - dataWidth;\n\n\t\tvar data = [];\n\t\tfor(var y = 0; y < height; y++) {\n\t\t\tvar row = [];\n\t\t\tfor(var x = 0; x < dataWidth; x++) {\n\t\t\t\t// this makes foreground and background color to have a 43% (1/2.3) probability\n\t\t\t\t// spot color has 13% chance\n\t\t\t\trow[x] = Math.floor(rand()*2.3);\n\t\t\t}\n\t\t\tvar r = row.slice(0, mirrorWidth);\n\t\t\tr.reverse();\n\t\t\trow = row.concat(r);\n\n\t\t\tfor(var i = 0; i < row.length; i++) {\n\t\t\t\tdata.push(row[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tfunction buildOpts(opts) {\n\t\tvar newOpts = {};\n\n\t\tnewOpts.seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);\n\n\t\tseedrand(newOpts.seed);\n\n\t\tnewOpts.size = opts.size || 8;\n\t\tnewOpts.scale = opts.scale || 4;\n\t\tnewOpts.color = opts.color || createColor();\n\t\tnewOpts.bgcolor = opts.bgcolor || createColor();\n\t\tnewOpts.spotcolor = opts.spotcolor || createColor();\n\n\t\treturn newOpts;\n\t}\n\n\tfunction renderIcon(opts, canvas) {\n\t\topts = buildOpts(opts || {});\n\t\tvar imageData = createImageData(opts.size);\n\t\tvar width = Math.sqrt(imageData.length);\n\n\t\tcanvas.width = canvas.height = opts.size * opts.scale;\n\n\t\tvar cc = canvas.getContext('2d');\n\t\tcc.fillStyle = opts.bgcolor;\n\t\tcc.fillRect(0, 0, canvas.width, canvas.height);\n\t\tcc.fillStyle = opts.color;\n\n\t\tfor(var i = 0; i < imageData.length; i++) {\n\n\t\t\t// if data is 0, leave the background\n\t\t\tif(imageData[i]) {\n\t\t\t\tvar row = Math.floor(i / width);\n\t\t\t\tvar col = i % width;\n\n\t\t\t\t// if data is 2, choose spot color, if 1 choose foreground\n\t\t\t\tcc.fillStyle = (imageData[i] == 1) ? opts.color : opts.spotcolor;\n\n\t\t\t\tcc.fillRect(col * opts.scale, row * opts.scale, opts.scale, opts.scale);\n\t\t\t}\n\t\t}\n\t\treturn canvas;\n\t}\n\n\tfunction createIcon(opts) {\n\t\tvar canvas = document.createElement('canvas');\n\n\t\trenderIcon(opts, canvas);\n\n\t\treturn canvas;\n\t}\n\n\tvar api = {\n\t\tcreate: createIcon,\n\t\trender: renderIcon\n\t};\n\n\tif (typeof module !== \"undefined\") {\n\t\tmodule.exports = api;\n\t}\n\tif (typeof window !== \"undefined\") {\n\t\t window.blockies = api;\n\t}\n\n})();\n","import styled, { css } from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  align-self: stretch;\n  justify-content: center;\n  align-items: ${props => props.align || 'initial'};\n  flex-direction: ${props => props.direction || 'column'};\n  background: ${props => props.theme || 'transparent'};\n  background: ${props => props.gradient || 'undefined'};\n  margin: ${props => props.margin || '0px'};\n  padding: ${props => props.padding || '0px'};\n  overflow: ${props => props.overflow || 'initial'};\n  flex: 1;\n  position: relative;\n`\n\nexport const SectionFS = styled(Section)`\n  min-height: 100vh;\n`\n\nexport const SectionFSHero = styled(Section)`\n  min-height: 100vh;\n  background: rgb(31,23,47);\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\n`\n\nexport const SectionHero = styled(Section)`\n  background: rgb(31,23,47);\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\n`\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: ${props => props.padding || \"40px 0px\"};\n  background: ${props => props.theme || 'transparent'};\n  background: ${props => props.gradient || 'undefined'};\n  position: relative;\n`\n\nexport const ItemBreak = styled.div`\n  flex-basis: 100%;\n`\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: ${props => props.wrap || 'wrap'};\n  position: ${props => props.position || 'relative'};\n  justify-content: center;\n  background: ${props => props.bg || 'transparent'};\n  flex: ${props => props.flex || '1'};\n  flex-direction: ${props => props.direction || 'column'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  padding: ${props => props.padding || \"0px\"};\n  margin: ${props => props.margin || '0px'};\n  min-width: ${props => props.minWidth || 'auto'};\n  max-width: ${props => props.maxWidth || 'initial'};\n  font-size: ${props => props.size || \"inherit\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n  filter: ${props => props.filter || \"none\"};\n\n  width: ${props => props.width || \"auto\" };\n  height: ${props => props.height || \"auto\" };\n\n  border: ${props => props.border || \"none\"};\n\n  border-radius: ${props => props.radius || \"0px\"};\n  overflow: ${props => props.overflow || \"initial\"};\n\n  &:hover & {\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\n  }\n\n  @media (max-width: 768px) {\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\n    text-align: ${props => (props.tabletTextAlign ? props.tabletTextAlign : (props.textAlign ? props.textAlign : \"inherit\")) || \"inherit\"};\n  }\n\n  ${ItemBreak} {\n    width: 0;\n  }\n`\n\nexport const ItemH = styled(Item)`\n  flex-direction: row;\n  flex: ${props => props.flex || '1'};\n\n  ${ItemBreak} {\n    width: auto;\n    height: 0;\n  }\n`\n\nexport const WaveOuter = styled.div`\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: ${props => props.bottom || '-70px'};\n  top: ${props => props.top || 'auto'};\n  transform: ${props => props.transform || 'initial'};\n`;\n\nexport const WaveInner = styled.div`\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  transform: ${props => props.transform || 'initial'};\n`;\n\nexport const Arc = styled.div`\n  position: absolute;\n\toverflow: hidden;\n\twidth: 100%;\n\theight: 300px;\n\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n\n  &:after {\n    content: '';\n    position: absolute;\n  \twidth: 300%;\n  \theight: 300%;\n  \ttop: -25%;\n  \tleft: -100%;\n\n\n    ${ props => props.arcRGB && css`\n      \tbackground: radial-gradient(ellipse at center, ${props.arcRGB}00 0%, ${props.arcRGB}00 50%, ${props.arcRGB}ff 50%, ${props.arcRGB}ff 100%);\n    `};\n  }\n`\n\nexport const H1 = styled.h1`\n  @media (max-width: 480px) {\n    font-size: 2.1rem;\n  }\n`\n\nexport const H2 = styled.h2`\n  color: ${props => props.color || '#000'};\n  font-weight: ${props => props.weight || 600};\n  font-size: ${props => props.size || \"2rem\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n`\n\nexport const H3 = styled.h3`\n  color: ${props => props.color || 'rgb(0 0 0 / 0.5)'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"1rem\"};\n  text-transform: ${props => props.textTransform || \"uppercase\"};\n  margin: ${props => props.margin || \"-15px 0px 20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"0.1em\"};\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n  max-width: ${props => props.maxWidth || 'initial'};\n`\n\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n  display: flex;\n`\n\nexport const P = styled.p`\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n\n  color: ${props => props.color || '#000'};\n  background: ${props => props.bg || 'transparent'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  text-align: ${props => props.textAlign || \"initial\"};\n`\n\nexport const Para = styled(P)`\n  font-weight: ${props => props.weight || 300};\n  letter-spacing: ${props => props.spacing || \"0.02em\"};\n  font-size: ${props => props.size || \"1.1em\"};\n  color: ${props => props.color || \"#000000ee\"};\n`\n\nexport const Span = styled.span`\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n\n  color: ${props => props.color || '#000'};\n  background: ${props => props.bg || 'transparent'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  text-align: ${props => props.textAlign || \"initial\"};\n\n  position: ${props => props.pos || 'initial'};\n  right: ${props => props.right || 'auto'};\n  left: ${props => props.left || 'auto'};\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n\n  z-index: ${props => props.z || 'auto'};\n`\n\nexport const B = styled.span`\n  color: ${props => props.color || '#000'};\n  font-weight: ${props => props.weight || 'bold'};\n`\n\nexport const UL = styled.ul`\n\n`\n\nexport const LI = styled.li`\n  margin: 10px 0px;\n`\n\nexport const Anchor = styled.a`\n  display: flex;\n  flex-direction: ${props => props.direction || 'row'};\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0\"};\n  padding: ${props => props.padding || \"10px 15px\"};\n  letter-spacing: ${props => props.spacing || \"0.2em\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  width: ${props => props.width || \"initial\" };\n\n  position: relative;\n  text-decoration: none;\n  overflow: ${props => props.overflow || \"hidden\"};\n  z-index: 3;\n\n  filter: ${props => props.filter || \"none\"};\n\n  cursor: pointer;\n  pointer: hand;\n\n  &:hover & {\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\n    display: none;\n    z-index: -1;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hoverBG || \"#000\"};\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &:hover:before {\n    display: block;\n  }\n\n  &:hover:after {\n    opacity: 0.08;\n  }\n  &:active:after {\n    opacity: 0.15;\n  }\n`\n\nexport const A = styled(Anchor)`\n  display: inline;\n  color: #e1087f;\n  background: transparent;\n  padding: 0px;\n  letter-spacing: inherit;\n  text-transform: initial;\n`\n\nexport const Button = styled.button`\n  display: flex;\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"tranparent\"};\n  margin: ${props => props.margin || \"0\"};\n  padding: ${props => props.padding || \"10px 15px\"};\n  letter-spacing: ${props => props.spacing || \"initial\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  text-transform: ${props => props.textTransform || \"initial\"};\n\n  position: relative;\n  text-decoration: none;\n  overflow: ${props => props.overflow || \"hidden\"};\n  z-index: 3;\n\n  cursor: pointer;\n  pointer: hand;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\n    display: none;\n    z-index: -1;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hoverBG || \"#000\"};\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &:hover:before {\n    display: block;\n  }\n\n  &:hover:after {\n    opacity: 0.08;\n  }\n  &:active:after {\n    opacity: 0.15;\n  }\n\n  & > div {\n    display: flex;\n  }\n`\n\nexport const Showoff = styled.div`\n  position: absolute;\n  right: ${props => props.right || 'auto'};\n  left: ${props => props.left || 'auto'};\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n  transform: ${props => props.transform || 'initial'};\n  opacity: ${props => props.opacity || 'initial'};\n\n  @media (max-width: 768px) {\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\n\n    right: ${props => (props.tabletRight ? props.tabletRight : (props.right ? props.right : \"auto\")) || \"auto\"};\n    left: ${props => (props.tabletLeft ? props.tabletLeft : (props.left ? props.left : \"auto\")) || \"auto\"};\n    top: ${props => (props.tabletTop ? props.tabletTop : (props.top ? props.top : \"auto\")) || \"auto\"};\n    bottom: ${props => (props.tabletBottom ? props.tabletBottom : (props.bottom ? props.bottom : \"auto\")) || \"auto\"};\n\n    transform: ${props => (props.tabletTransform ? props.tabletTransform : (props.transform ? props.transform : \"auto\")) || \"auto\"};\n\n    opacity: ${props => (props.tabletOpacity ? props.tabletOpacity : (props.opacity ? props.opacity : \"auto\")) || \"initial\"};\n  }\n`\n\nexport const FormSubmision = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n\n  flex: ${props => props.flex || 'initial'};\n  flex-direction: ${props => props.direction || 'column'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  position: relative;\n`\n\nexport const Input = styled.input`\n  display: ${props => props.display || 'flex'};\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#000\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  outline: ${props => props.outline || \"none\"};\n  overflow: ${props => props.overflow || \"hidden\"};\n  position: relative;\n\n  cursor: ${props => props.cursor || \"initial\"};\n  pointer: ${props => props.hand || \"initial\"};\n\n  &:focus + span {\n    opacity: 0;\n\n    -webkit-transition: all 0.2s ease-in-out;\n    -moz-transition: all 0.2s ease-in-out;\n    -o-transition: all 0.2s ease-in-out;\n    transition: all 0.2s ease-in-out;\n  }\n`\n\nexport const TextField = styled.textarea`\n  display: flex;\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#000\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  outline: ${props => props.outline || \"none\"};\n  overflow: ${props => props.overflow || \"hidden\"};\n  position: relative;\n  resize: vertical;\n\n  &:focus + span {\n    opacity: 0;\n\n    -webkit-transition: all 0.2s ease-in-out;\n    -moz-transition: all 0.2s ease-in-out;\n    -o-transition: all 0.2s ease-in-out;\n    transition: all 0.2s ease-in-out;\n  }\n`\n"],"sourceRoot":""}
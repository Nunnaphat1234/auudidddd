{"version":3,"sources":["helpers/CryptoHelper.js","serviceWorker.js","connectors.ts","hooks.ts","config/index.js","helpers/EPNSCoreHelper.js","components/NotificationToast.js","api/index.js","components/AliasVerificationModal.js","components/ViewInfoItem.js","segments/Info.tsx","redux/slices/spamSlice.js","components/DisplayNotice.js","redux/slices/notificationSlice.js","segments/spam.tsx","segments/Feedbox.tsx","assets/Device.js","singletons/ChannelsDataStore.js","redux/slices/channelSlice.js","components/ViewChannelItem.js","components/Faucets.js","segments/ViewChannels.tsx","assets/icons/index.js","components/SendNotifications.tsx","components/AddDelegateModal.js","components/RemoveDelegateModal.js","components/ActivateChannelModal.js","redux/slices/adminSlice.js","components/ChannelSettingsDropdown.tsx","components/ChannelSettings.jsx","components/ChannelDetails.js","segments/ChannelOwnerDashboard.js","segments/ChannelCreationDashboard.js","singletons/UsersDataStore.js","redux/slices/contractSlice.js","pages/Home.js","components/BlockiesIdenticon.js","components/Profile.tsx","components/Bell.js","segments/Header.tsx","App.tsx","redux/store.js","index.js","../../contracts/src/config.js","../../contracts/src/addresses.js","../../contracts/src/index.js","components/CreateChannel.js","components/SharedStyling.js","components/blockies.js"],"names":["CryptoJS","require","CryptoHelper","encryptWithAES","message","key","AES","encrypt","toString","decryptWithAES","decrypt","enc","Utf8","encryptWithECIES","publicKey","a","compressedKey","EthCrypto","compress","this","encryptWithPublicKey","encryptedSecret","decryptWithECIES","privateKey","decryptWithPrivateKey","pubKeyUint8Array","Uint8Array","from","Buffer","convertedKeyAsUint8Array","publicKeyConvert","convertedPublicKeyHex","pubKey","then","encryptedBuffers","cipher","iv","ephemPublicKey","ciphertext","mac","input","keyConvert","concat","buf","encrypted","length","keyConvertBuffer","uncompressedKey","twoStripped","substring","encryptedBuffer","decryptedBuffer","encryptionDecryptionPublicToPrivateTest","startTime","Date","console","log","publicKeyByPrivateKey","msg","encryptionTime","getTime","decryptMsg","decryptionTime","outputMsgPayload","secret","subject","calltoaction","imageurl","pkey","secretEncrypted","asubE","amsgE","actaE","aimgE","makeid","result","toISOString","characters","charactersLength","i","charAt","Math","floor","random","Boolean","window","location","hostname","match","config","SUPPORTED_CHAIN_IDS","envConfig","allowedNetworks","CORE_CHAIN_ID","coreContractChain","CORE_RPC","coreRPC","RPC_URLS","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","portis","LedgerConnector","chainId","url","TrezorConnector","manifestEmail","manifestAppUrl","PortisConnector","dAppId","networks","dotenv","etherscanToken","process","REACT_APP_INFURA_API_KEY","EPNSCoreHelper","getOwnerInfo","contract","Promise","resolve","reject","governance","response","catch","err","getUserInfo","user","users","mappings","addr","getChannelAddressFromID","channelID","channelById","getChannelInfo","channel","channels","getChannelEvent","startBlock","updateBlock","filter","filters","AddChannel","block","UpdateChannel","queryFilter","filteredResponse","forEach","item","args","ethers","utils","toUtf8String","identity","getJsonFileFromIdentity","ids","split","fetch","json","getChannelJsonFromChannelAddress","channelStartBlock","toNumber","channelUpdateBlock","hash","getChannelJsonFromUserAddress","getTotalNumberOfChannels","channelsCount","getChannelsMetaLatestToOldest","atIndex","numChannels","channelsInfo","channelArrays","assignedChannelID","push","promises","map","all","getTotalNumberOfUsers","usersCount","getPublicKey","address","getSubscribedStatus","isUserSubscribed","getTotalSubscribedChannels","subscribedCount","getFairShareOfUserAtBlock","userActivated","calcAllChannelsRatio","getPoolFunds","poolFunds","formatBigNumberToMetric","bignumber","convertToCurrency","div","metricFormatter","e","num","digits","si","value","symbol","toFixed","replace","NotificationWrapper","styled","Toaster","NotificationToast","notification","clearToast","LoaderToast","color","notificationTitle","notificationBody","toast","dark","onClick","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","BASE_URL","apiUrl","postReq","path","obj","axios","post","headers","AliasVerificationModal","onClose","onSuccess","verificationStatus","aliasEthAccount","useWeb3React","account","active","error","library","signer","getSigner","modalRef","useRef","polygonCommsContract","Contract","addresses","epnsPolyComm","abis","epnsComm","useState","mainAddress","loading","setLoading","useClickAway","checkAlias","submitAlias","setTimeout","verifyChannelAlias","tx","wait","intervalId","setInterval","aliasAddress","op","data","status","clearInterval","Overlay","AliasModal","ref","align","textTransform","spacing","weight","bg","padding","CustomInput","placeholder","radius","border","disabled","readOnly","margin","flex","self","type","height","width","StyledInput","cursor","size","Input","Container","ChannelTitleLink","AppLink","AppLinkText","ChannelInfo","ChannelTitle","ViewInfoItem","href","REACT_APP_BROWSER_EXTENSION_URL","target","rel","REACT_APP_IOS_STAGING_DAPP_URL","REACT_APP_ANDROID_STAGING_DAPP_URL","REACT_APP_HOW_TO_GUIDE","ContainerInfo","InfoBox","Info","React","controlAt","initialState","page","notifications","finishedFetching","toggler","contractSlice","createSlice","name","reducers","toggleToggler","state","resetState","addPaginatedNotifications","action","payload","incrementPage","addNewNotification","setFinishedFetching","updateTopNotifications","notifs","slice","pageSize","sn","actions","Notice","span","props","theme","css","DisplayNotice","title","useEffect","animationIn","animationOut","durationOut","pp","CenteredContainerInfo","Items","SpamBox","currentTab","dispatch","useDispatch","epnsCommReadProvider","useSelector","contracts","spam","EPNS_DOMAIN","toggle","verifyingContract","bgUpdateLoading","setBgUpdateLoading","loadNotifications","api","fetchSpamNotifications","count","results","parsedResponsePromise","parseApiResponse","elem","subscribers","parsedResponse","fetchLatestNotifications","handlePagination","onSubscribeToChannel","channelAddress","Subscribe","subscriber","_signTypedData","signature","contractAddress","isSubscribedFn","toLowerCase","includes","style","marginTop","id","oneNotification","index","cta","app","icon","image","Number","showWayPoint","onEnter","subscribeFn","stopPropagation","isSpam","ControlButtonBack","ControlButton","ControlImage","img","FullWidth","Wrapper","Feedbox","setCurrentTab","fetchNotifications","setClicked","marginLeft","src","Device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","ChannelEvents","ChannelsDataStore","channelsMeta","channelsJson","callbacks","epnsReadProvider","init","resetChannelsListeners","initChannelsListenersAsync","getChannelsCountAsync","removeAllListeners","listenForAddChannelAnyAsync","listenForAddChannelSelfAsync","listenForUpdateChannelAnyAsync","listenForUpdateChannelSelfAsync","listenForSubscribeAnyAsync","listenForSubscribeSelfAsync","listenForUnsubscribeAnyAsync","listenForUnsubscribeSelfAsync","on","ipfs","incrementChannelsCountAsync","Object","entries","callback","Unsubscribe","addCallbacks","callbackType","callbackID","removeCallbacks","incrementCount","getChannelFromApi","startIndex","pageCount","ceil","getChannelsMetaAsync","stopIndex","channelIDs","getChannelMetaAsync","channelMetaData","getChannelMetaViaAddressAsync","optInCache","userAddress","cachedSubscribers","optOutCache","sub","getChannelSubscribers","subs","getChannelJsonAsync","instance","CHANNNEL_DEACTIVATED_STATE","CHANNEL_BLOCKED_STATE","CHANNEL_ACTIVE_STATE","CHANNEL_BLACKLIST","channelsCache","setChannelMeta","cacheChannelInfo","meta","FlexBox","ColumnFlex","SkeletonWrapper","atW","atH","borderRadius","marginBottom","marginRight","ChannelLogo","ChannelLogoOuter","ChannelLogoInner","ChannelLogoImg","VerifiedBy","VerifierIcon","VerifierName","ChannelDesc","ChannelDescLabel","label","ChannelMeta","ChannelMetaBox","Subscribers","SubscribersCount","LineBreak","ChannelActions","ChannelActionButton","button","ActionTitle","hideit","ActionLoader","SkeletonButton","SubscribeButton","UnsubscribeButton","OwnerButton","ToasterMsg","ViewChannelItem","channelObjectProp","epnsWriteProvider","pushAdminAddress","ZERO_ADDRESS","canVerify","admin","isOwner","channelObject","setChannelObject","channelJson","setChannelJson","subscribed","setSubscribed","memberCount","setMemberCount","isPushAdmin","setIsPushAdmin","isVerified","setIsVerified","isBlocked","setIsBlocked","vLoading","setvLoading","bLoading","setBLoading","txInProgress","setTxInProgress","canUnverify","setCanUnverify","verifierDetails","setVerifierDetails","copyText","setCopyText","isChannelBlacklisted","showToast","verifiedBy","fetchChannelJson","alert","channelState","channelSubscribers","find","addressText","subscribe","subscribeAction","notificationToast","toaster","txToast","res","update","render","TYPE","SUCCESS","ERROR","unsubscribeAction","unsubscriber","finally","display","info","toLocaleString","navigator","clipboard","writeText","el","document","createElement","body","appendChild","select","execCommand","removeChild","copyToClipboard","onMouseEnter","onMouseLeave","blockChannel","INFO","verifyChannel","unverifyChannel","Faucets","overflow","pos","top","right","direction","textAlign","Header","InputWrapper","SearchBar","CenterContainer","SearchIconImage","ViewChannels","moreLoading","setMoreLoading","search","setSearch","channelToShow","setChannelToShow","loadingChannel","setLoadingChannel","trialCount","setTrialCount","channelsVisited","isMainnet","fetchInitialsChannelMeta","updateCurrentPage","loadMoreChannelMeta","newPageNumber","startingPoint","moreChannels","searchForChannel","query","t","timeout","clearTimeout","minHeight","onChange","className","alt","CloseIcon","xmlns","viewBox","data-name","transform","x2","fill","stroke","stroke-linecap","stroke-width","y2","NFTypes","LIMITER_KEYS","DropdownStyledParent","MultiRecipientsContainer","ModifiedContent","Content","DropdownHeader","DropdownStyled","Dropdown","DropdownStyledWhite","DropdownStyledParentWhite","CustomDropdownItem","SendNotifications","epnsCommWriteProvider","channelDetails","delegatees","nfProcessing","setNFProcessing","setChannelAddress","nfRecipient","setNFRecipient","multipleRecipients","setMultipleRecipients","tempRecipeint","setTempRecipient","nfType","setNFType","nfSub","setNFSub","nfSubEnabled","setNFSubEnabled","nfMsg","setNFMsg","nfCTA","setNFCTA","nfCTAEnabled","setNFCTAEnabled","nfMedia","setNFMedia","nfMediaEnabled","setNFMediaEnabled","nfInfo","setNFInfo","delegateeOptions","setDelegateeOptions","isChannelDeactivated","cannotDisplayDelegatees","oneDelegatee","bodyValidated","validated","handleSendMessage","preventDefault","nsub","nmsg","asub","amsg","acta","aimg","k","publickey","storagePointer","isEmpty","jsonPayload","JSON","stringify","at","add","toUtf8Bytes","Data","recipient","deployedContract","field","trim","justify","onSubmit","minWidth","options","option","d","Switch","checked","required","z","oneRecipient","recipientAddress","filteredRecipients","rec","removeRecipient","onKeyPress","oldRecipients","Array","Set","text","borderBottom","rows","autocomplete","AddDelegateModal","addDelegate","mainAdress","setMainAddress","RemoveDelegateModal","removeDelegate","ActivateChannelModal","activateChannel","setChannelStakeFees","channelStakeFees","popupRef","PopupOverlay","PopupSlider","Slider","defaultValue","onChangeCommitted","_","aria-labelledby","valueLabelDisplay","step","marks","min","max","setUserChannelDetails","setCanVerify","setDelegatees","DropdownWrapper","ActiveChannelWrapper","inactive","DeactivateButton","ChannelSettings","onCoreNetwork","ALLOWED_CORE_NETWORK","showActivateChannelPopup","setShowActivateChannelPopup","poolContrib","setPoolContrib","addDelegateLoading","setAddDelegateLoading","addModalOpen","setAddModalOpen","removeDelegateLoading","setRemoveDelegateLoading","removeModalOpen","setRemoveModalOpen","isChannelBlocked","channelInactive","poolContribution","daiContract","dai","erc20","fees","parseUnits","sendTransactionPromise","approve","epnscore","waitForTransaction","reactivateChannel","deactivateChannel","amountToBeConverted","parseInt","pushValue","quote","PUSH","price","pow","walletAddress","setActive","SettingsWrapper","ChannelSettingsDropdown","Settings","ChannelDetails","verifyingChannel","setVerifyingChannel","creationDate","setCreationDate","setEthAliasAccount","aliasVerified","setAliasVerified","channelIsActive","channelIsDeactivated","bn","getBlock","date","moment","timestamp","format","aliasAccount","ChannelDetailsWrapper","SectionTop","ImageSection","Details","ChannelName","VerifyImage","ChanneStateText","SectionDes","fontSize","fontWeight","SectionDate","Verified","VerifyingIcon","VerifyingName","ChannelOwnerDashboard","CreateChannel","ChannelCreationDashboard","UsersDataStore","userMeta","ownerMeta","resetUsersListeners","initUsersListenersAsync","getOwnerMetaAsync","getUsersCountAsync","getUserMetaAsync","listenForSubscribedAsync","listenForUnsubscribedAsync","publicKeyRegistered","listenForPublicKeyBroadcastAsync","incrementUsersCountAsync","setCoreReadProvider","setCoreWriteProvider","setCommunicatorReadProvider","setCommunicatorWriteProvider","setPushAdmin","Controls","ControlText","ControlChannelContainer","ControlChannelImage","ControlChannelText","Interface","Home","ReactGA","pageview","setControlAt","modalOpen","setModalOpen","adminStatusLoaded","setAdminStatusLoaded","setAliasEthAccount","channelAdmin","setChannelAdmin","coreProvider","getDefaultProvider","etherscan","ethAddress","coreContractInstance","commAddress","epnsEthComm","commContractInstance","coreSignerInstance","communicatorSignerInstance","userClickedAt","pushChannelAdmin","checkUserForChannelOwnership","fetchDelegators","controlIndex","delegateAddress","delegators","channelOwners","channelInformationPromise","channelInformation","ownerAccount","getChannelVerfication","val","BlockiesIdenticon","seed","opts","bgcolor","scale","spotcolor","draw","prevProps","blockies","canvas","Component","Blocky","BlockyInner","Wallet","Profile","setAddress","ens","setENS","ensFetched","setENSFetched","lookupAddress","tadaaa","keyframes","BellImage","ringme","BellImageAbs","Badge","Bell","badgeCount","bellPressedCB","badge","setBadge","ring","setRing","setResetRinger","HeaderContainer","Section","Logo","PrimaryTheme","ThirdTheme","Connection","phase","context","deactivate","showLoginControls","setShowLoginControls","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","getErrorMessage","web3Connectors","Injected","logo","WalletConnect","Portis","App","connector","activate","activatingConnector","setActivatingConnector","setcurrentTime","now","triedEager","tried","setTried","isAuthorized","useEagerConnect","suppress","ethereum","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","initialize","googleAnalyticsId","ParentContainer","HomeContainer","ProviderLogo","srcSet","maxWidth","keys","currentConnector","ProviderButton","ProviderImage","StyledItem","newestOnTop","rtl","pauseOnFocusLoss","Item","header","ToastContainer","attrs","rootReducer","combineReducers","contractReducer","channelReducer","adminReducer","notificationReducer","spamReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","ApolloProvider","getLibrary","provider","gottenProvider","providers","Web3Provider","oldNetwork","reload","getElementById","serviceWorker","ready","registration","unregister","ceaErc20","aDai","staking","yieldFarmPUSH","yieldFarmLP","epnsToken","epnsLPToken","rockstar","batchMintNFT","NFTRewards","distributor","erc20Abi","ownable","ownableAbi","epnscoreAbi","epnsCommAbi","daiAbi","epnsTokenAbi","stakingAbi","yieldFarming","yieldFarmingAbi","rockstarAbi","erc721","ec721Abi","MerkleDistributorAbi","ALIAS_CHAINS","Step","activeBG","Line","h1","Minter","textarea","Pool","PoolShare","processing","setProcessing","processingInfo","setProcessingInfo","uploadDone","setUploadDone","stakeFeesChoosen","setStakeFeesChoosen","channelInfoDone","setChannelInfoDone","chainDetails","setChainDetails","channelName","setChannelName","channelAlias","setChannelAlias","channelInfo","setChannelInfo","channelURL","setChannelURL","channelFile","setChannelFile","stepFlow","setStepFlow","handleLogoSizeLimitation","base64","sizeOf","base64Data","pop","dimensions","success","handleCreateChannel","chainDetailsSplit","blockchain","chain_id","identityBytes","anotherSendTxPromise","createChannelWithFees","gasLimit","mintDai","amount","mintTransactionPromise","mint","onChangeStatus","file","files","allFiles","f","reader","FileReader","readAsDataURL","onloadend","onDrop","maxFiles","multiple","accept","maxlength","classNamePrefix","colors","primary25","primary","selectedOption","paddingLeft","section","gradient","ItemBreak","wrap","filterHover","hover","tabletAlign","tabletTextAlign","ItemH","H2","bottom","arcRGB","h2","family","H3","h3","P","p","Span","left","B","Anchor","ul","li","hoverBG","A","C","Button","FormSubmision","opacity","tabletRight","tabletLeft","tabletTop","tabletBottom","tabletTransform","tabletOpacity","form","outline","hand","TextField","randseed","rand","createColor","buildOpts","newOpts","charCodeAt","seedrand","renderIcon","imageData","dataWidth","mirrorWidth","y","row","x","r","reverse","createImageData","sqrt","cc","getContext","fillStyle","fillRect","col","create","module","exports"],"mappings":"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","file":"static/js/main.5a8ecedd.chunk.js","sourcesContent":["import EthCrypto from 'eth-crypto';\r\nimport {encrypt, decrypt} from 'eccrypto';\r\nimport { publicKeyConvert, publicKeyVerify } from 'secp256k1-v4';\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst CryptoHelper = {\r\n  // To Encrypt with AES\r\n  encryptWithAES: function(message, key) {\r\n    return CryptoJS.AES.encrypt(message, key).toString();\r\n  },\r\n  // To Decrypt with AES\r\n  decryptWithAES: function(message, key) {\r\n    let bytes  = CryptoJS.AES.decrypt(message, key);\r\n    return bytes.toString(CryptoJS.enc.Utf8);\r\n  },\r\n  // To Form Encryted Secret, no more than 15 characters supported\r\n  encryptWithECIES: async function(message, publicKey) {\r\n    const compressedKey = EthCrypto.publicKey.compress(publicKey);\r\n\r\n    const encryptedSecret = await this.encryptWithPublicKey(message, compressedKey);\r\n\r\n    // Not using it since sqlite2 has some error with this\r\n    // const compressedEncryptedSecret = EthCrypto.hex.compress(encryptedSecret);\r\n\r\n    return encryptedSecret;\r\n  },\r\n  // To Form Decrypted Secret, no more than 15 characters supported\r\n  decryptWithECIES: async function(message, privateKey) {\r\n    // Message is always compressed, not using because sqlite2 has some error with this\r\n    //const uncompressedMessage = EthCrypto.hex.decompress(message).substr(2); // to remove 0x\r\n\r\n    return await this.decryptWithPrivateKey(message, privateKey);\r\n  },\r\n  // Encryption with public key\r\n  encryptWithPublicKey: async function(message, publicKey) {\r\n    // Convert compressed public key, starts with 03 or 04\r\n    const pubKeyUint8Array = Uint8Array.from(\r\n      new Buffer(publicKey, 'hex')\r\n    );\r\n    //console.log(\"[ENCRYPTION] Public Key Uint8Array: \" + pubKeyUint8Array);\r\n\r\n    const convertedKeyAsUint8Array = publicKeyConvert(pubKeyUint8Array, false);\r\n    //console.log(\"[ENCRYPTION] Public Key Converted: \" + convertedKeyAsUint8Array);\r\n\r\n    const convertedPublicKeyHex = new Buffer(convertedKeyAsUint8Array);\r\n    //console.log(\"[ENCRYPTION] Converted Public Key Buffer: \" + convertedPublicKeyHex);\r\n\r\n    const pubKey = new Buffer(convertedPublicKeyHex, 'hex');\r\n    //console.log(\"[ENCRYPTION] pubkey getting sentout for encrypt: \" + pubKey);\r\n\r\n    return encrypt(\r\n        pubKey,\r\n        Buffer(message)\r\n    ).then(encryptedBuffers => {\r\n      const cipher = {\r\n          iv: encryptedBuffers.iv.toString('hex'),\r\n          ephemPublicKey: encryptedBuffers.ephemPublicKey.toString('hex'),\r\n          ciphertext: encryptedBuffers.ciphertext.toString('hex'),\r\n          mac: encryptedBuffers.mac.toString('hex')\r\n      };\r\n      // use compressed key because it's smaller\r\n      // const compressedKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(cipher.ephemPublicKey), true)).toString('hex')\r\n      const input = Uint8Array.from(\r\n        new Buffer(cipher.ephemPublicKey, 'hex')\r\n      );\r\n      const keyConvert = publicKeyConvert(input, true)\r\n      // console.log(\"[ENCRYPTION] Coverted key: \" + keyConvert);\r\n\r\n      const keyConvertBuffer = new Buffer(keyConvert);\r\n      // console.log(\"[ENCRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\r\n      // console.log(keyConvertBuffer);\r\n\r\n      //console.log(keyConvert);\r\n      const compressedKey = keyConvertBuffer.toString('hex')\r\n      // console.log(\"[ENCRYPTION] Compressed key in buffer : \");\r\n      // console.log(compressedKey);\r\n\r\n      const ret = Buffer.concat([\r\n        new Buffer(cipher.iv, 'hex'), // 16bit\r\n        new Buffer(compressedKey, 'hex'), // 33bit\r\n        new Buffer(cipher.mac, 'hex'), // 32bit\r\n        new Buffer(cipher.ciphertext, 'hex') // var bit\r\n      ]).toString('hex')\r\n\r\n      return ret\r\n    });\r\n  },\r\n  // Decryption with public key\r\n  decryptWithPrivateKey: async function(message, privateKey) {\r\n    let encrypted = message;\r\n    const buf = new Buffer(encrypted, 'hex');\r\n    // console.log(\"[DECRYPTION] Buffer Passed: \" + buf);\r\n\r\n    encrypted = {\r\n      iv: buf.toString('hex', 0, 16),\r\n      ephemPublicKey: buf.toString('hex', 16, 49),\r\n      mac: buf.toString('hex', 49, 81),\r\n      ciphertext: buf.toString('hex', 81, buf.length)\r\n    };\r\n    // decompress publicKey\r\n    // encrypted.ephemPublicKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(encrypted.ephemPublicKey), true)).toString('hex')\r\n    const input = Uint8Array.from(new Buffer(encrypted.ephemPublicKey, 'hex'));\r\n    const keyConvert = publicKeyConvert(input, false)\r\n    // console.log(\"[DECRYPTION] Coverted key: \" + keyConvert);\r\n\r\n    const keyConvertBuffer = new Buffer(keyConvert);\r\n    // console.log(\"[DECRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\r\n    // console.log(keyConvertBuffer);\r\n\r\n    //console.log(keyConvert);\r\n    const uncompressedKey = keyConvertBuffer.toString('hex')\r\n    // console.log(\"[DECRYPTION] Uncompressed key in buffer : \");\r\n    // console.log(uncompressedKey);\r\n\r\n    encrypted.ephemPublicKey = uncompressedKey;\r\n    const twoStripped = privateKey.substring(2)\r\n\r\n    const encryptedBuffer = {\r\n      iv: new Buffer(encrypted.iv, 'hex'),\r\n      ephemPublicKey: new Buffer(encrypted.ephemPublicKey, 'hex'),\r\n      ciphertext: new Buffer(encrypted.ciphertext, 'hex'),\r\n      mac: new Buffer(encrypted.mac, 'hex')\r\n    };\r\n\r\n    return decrypt(\r\n      new Buffer(twoStripped, 'hex'),\r\n      encryptedBuffer\r\n    ).then(decryptedBuffer => decryptedBuffer.toString());\r\n  },\r\n  // Testing of Encryption and Decryption from Public to Private key\r\n  encryptionDecryptionPublicToPrivateTest: async function(privateKey) {\r\n    const startTime = new Date();\r\n    console.log(\"[ENCRYPTION / DECRYPTION TEST STARTED] - \" + startTime);\r\n\r\n    const publicKey = EthCrypto.publicKeyByPrivateKey(privateKey);\r\n    const compressedKey = EthCrypto.publicKey.compress(publicKey); // is String\r\n    //console.log(compressedKey);\r\n\r\n    // const bytesCompKey = Uint8Array.from(compressedKey);\r\n    //console.log(bytesCompKey);\r\n\r\n    const msgToEncrypt = \"PartialStringAS\";\r\n    const msg = await this.encryptWithPublicKey(msgToEncrypt, compressedKey);\r\n    console.log(\"Encryped Message With compressed public key:\" + msg);\r\n\r\n    const encryptionTime = new Date().getTime() - startTime.getTime();\r\n    console.log(\"[ENCRYPTION / DECRYPTION ENCRYPTION DONE] - \" + encryptionTime / 1000 + \" secs\");\r\n\r\n    // Decrypt this message\r\n    const decryptMsg = await this.decryptWithPrivateKey(msg, privateKey);\r\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTED MESSAGE] - '\" + decryptMsg + \"'\");\r\n\r\n    const decryptionTime = new Date().getTime() - startTime.getTime() - encryptionTime;\r\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTION DONE] - \" + decryptionTime / 1000 + \" secs\");\r\n  },\r\n  // To output messge payload if required\r\n  outputMsgPayload: async function(secret, subject, message, calltoaction, imageurl, pkey) {\r\n    // Output AES\r\n    console.log(\"[AES ENCRYTED FORMAT (\" + new Date() + \")\");\r\n    console.log(\"---------------------\");\r\n    console.log(\"secret --> \");\r\n    const secretEncrypted = await this.encryptWithECIES(secret, pkey);\r\n    const asubE = this.encryptWithAES(subject, secret);\r\n    const amsgE = this.encryptWithAES(message, secret);\r\n    const actaE = this.encryptWithAES(calltoaction, secret);\r\n    const aimgE = this.encryptWithAES(imageurl, secret);\r\n\r\n    console.log(secretEncrypted);\r\n    console.log(\"asub --> \");\r\n    console.log(asubE);\r\n    console.log(\"amsg --> \");\r\n    console.log(amsgE);\r\n    console.log(\"acta --> \");\r\n    console.log(actaE);\r\n    console.log(\"aimg --> \");\r\n    console.log(aimgE);\r\n    console.log(\"decrypted secret --> \");\r\n    console.log(await this.decryptWithECIES(secretEncrypted, pkey));\r\n    console.log(\"decrypted asub --> \");\r\n    console.log(this.decryptWithAES(asubE, secret));\r\n    console.log(\"decrypted amsg --> \");\r\n    console.log(this.decryptWithAES(amsgE, secret));\r\n    console.log(\"decrypted acta --> \");\r\n    console.log(this.decryptWithAES(actaE, secret));\r\n    console.log(\"decrypted aimg --> \");\r\n    console.log(this.decryptWithAES(aimgE, secret));\r\n  },\r\n  makeid: function (length) {\r\n     var result           = '[' + new Date().toISOString() + '] ';\r\n     var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n     var charactersLength = characters.length;\r\n     for ( var i = 0; i < length; i++ ) {\r\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n     }\r\n     return result;\r\n  }\r\n};\r\n\r\nexport default CryptoHelper;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\"No internet connection found. App is running in offline mode.\");\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { envConfig } from \"@project/contracts\";\r\nimport { PortisConnector } from '@web3-react/portis-connector'\r\n// import { NetworkConnector } from '@web3-react/network-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\n// import { WalletLinkConnector } from '@web3-react/walletlink-connector'\r\nimport { LedgerConnector } from '@web3-react/ledger-connector'\r\nimport { TrezorConnector } from '@web3-react/trezor-connector'\r\n// import { FrameConnector } from '@web3-react/frame-connector'\r\n// import { AuthereumConnector } from '@web3-react/authereum-connector'\r\n// import { FortmaticConnector } from '@web3-react/fortmatic-connector'\r\n// import { SquarelinkConnector } from '@web3-react/squarelink-connector'\r\n// import { TorusConnector } from '@web3-react/torus-connector'\r\n\r\nrequire('dotenv').config();\r\nconst SUPPORTED_CHAIN_IDS = [...envConfig.allowedNetworks];\r\nconst POLLING_INTERVAL = 12000;\r\nconst CORE_CHAIN_ID = envConfig.coreContractChain;\r\nconst CORE_RPC = envConfig.coreRPC;\r\n\r\nconst RPC_URLS: { [chainId: number]: string } = {\r\n  [CORE_CHAIN_ID]: envConfig.coreRPC\r\n}\r\n\r\nexport const injected = new InjectedConnector({ supportedChainIds: SUPPORTED_CHAIN_IDS })\r\n\r\n\r\nexport const walletconnect = new WalletConnectConnector({\r\n  rpc: { ...RPC_URLS },\r\n  bridge: 'https://bridge.walletconnect.org',\r\n  qrcode: true,\r\n  pollingInterval: POLLING_INTERVAL\r\n})\r\n//\r\n// export const walletlink = new WalletLinkConnector({\r\n//   url: RPC_URLS[1],\r\n//   appName: 'web3-react example'\r\n// })\r\n//\r\nexport const ledger = new LedgerConnector({ chainId: CORE_CHAIN_ID, url: CORE_RPC, pollingInterval: POLLING_INTERVAL })\r\n\r\nexport const trezor = new TrezorConnector({\r\n  chainId: CORE_CHAIN_ID,\r\n  url: CORE_RPC,\r\n  pollingInterval: POLLING_INTERVAL,\r\n  manifestEmail: 'support@epns.io',\r\n  manifestAppUrl: 'https://staging-app.epns.io'\r\n})\r\n\r\n//\r\n// export const frame = new FrameConnector({ supportedChainIds: [1] })\r\n//\r\n// export const authereum = new AuthereumConnector({ chainId: 42 })\r\n//\r\n// export const fortmatic = new FortmaticConnector({ apiKey: process.env.FORTMATIC_API_KEY as string, chainId: 4 })\r\n\r\nexport const portis = new PortisConnector({ dAppId: 'e7ab8b33-73b1-4911-a483-dcca2762a9be' as string, networks: [CORE_CHAIN_ID] })\r\n\r\n// export const squarelink = new SquarelinkConnector({\r\n//   clientId: process.env.SQUARELINK_CLIENT_ID as string,\r\n//   networks: [1, 100]\r\n// })\r\n\r\n// export const torus = new TorusConnector({ chainId: 1 })\r\n","import { useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nimport { injected } from './connectors'\r\n\r\nrequire('dotenv').config();\r\n\r\nexport function useEagerConnect() {\r\n  const { activate, active } = useWeb3React()\r\n\r\n  const [tried, setTried] = useState(false)\r\n\r\n  useEffect(() => {\r\n    injected.isAuthorized().then((isAuthorized: boolean) => {\r\n      if (isAuthorized) {\r\n        activate(injected, undefined, true).catch(() => {\r\n          setTried(true)\r\n        })\r\n      } else {\r\n        setTried(true)\r\n      }\r\n    })\r\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\r\n\r\n  // if the connection worked, wait until we get confirmation of that to flip the flag\r\n  useEffect(() => {\r\n    if (!tried && active) {\r\n      setTried(true)\r\n    }\r\n  }, [tried, active])\r\n\r\n  return tried\r\n}\r\n\r\nexport function useInactiveListener(suppress: boolean = false) {\r\n  const { active, error, activate } = useWeb3React()\r\n\r\n  useEffect((): any => {\r\n    const { ethereum } = window as any\r\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\r\n      const handleConnect = () => {\r\n        console.log(\"Handling 'connect' event\")\r\n        activate(injected)\r\n      }\r\n      const handleChainChanged = (chainId: string | number) => {\r\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\r\n        activate(injected)\r\n      }\r\n      const handleAccountsChanged = (accounts: string[]) => {\r\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\r\n        if (accounts.length > 0) {\r\n          activate(injected)\r\n        }\r\n      }\r\n      const handleNetworkChanged = (networkId: string | number) => {\r\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\r\n        activate(injected)\r\n      }\r\n\r\n      ethereum.on('connect', handleConnect)\r\n      ethereum.on('chainChanged', handleChainChanged)\r\n      ethereum.on('accountsChanged', handleAccountsChanged)\r\n      ethereum.on('networkChanged', handleNetworkChanged)\r\n\r\n      return () => {\r\n        if (ethereum.removeListener) {\r\n          ethereum.removeListener('connect', handleConnect)\r\n          ethereum.removeListener('chainChanged', handleChainChanged)\r\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\r\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\r\n        }\r\n      }\r\n    }\r\n  }, [active, error, suppress, activate])\r\n}\r\n","import dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nexport default  {\r\n    etherscanToken: process.env.REACT_APP_INFURA_API_KEY || \"\"\r\n}","import React from \"react\";\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { ethers } from \"ethers\";\r\n//import { parseEther, bigNumber } from 'ethers/utils'\r\n\r\nconst COINDESK_CHANNEL_ADDR = \"0xe56f1D3EDFFF1f25855aEF744caFE7991c224FFF\";\r\nconst COINDESK_HASH = \"1+bafkreif643vf3cteadznccivnsk5uj26e3ls7onbshnldb3aej3omrxsau\"\r\nconst ENS_CHANNEL_ADDR = \"0x983110309620D911731Ac0932219af06091b6744\";\r\nconst ENS_HASH = \"1+bafkreiekigkyezwrspignt7l7vsrjefjmogwmigy4eqtts277cu2p23ilm\";\r\n// FeedDB Helper Function\r\nconst EPNSCoreHelper = {\r\n  // To get owner info\r\n  getOwnerInfo: async (contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.governance()\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getOwnerInfo() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getOwnerInfo() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // To get user info\r\n  getUserInfo: async (user, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.users(user)\r\n        .then(response => {\r\n          const mappings = { ...response };\r\n          mappings.addr = user;\r\n\r\n          if (enableLogs) console.log(\"getUserInfo() --> %o\", mappings);\r\n          resolve(mappings);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getUserInfo() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // To retrieve a channel address from it's id\r\n  getChannelAddressFromID: async (channelID, contract) => {\r\n    return new Promise ((resolve, reject) => {\r\n      // To get channel info from a channel address\r\n      contract.channelById(channelID)\r\n        .then(response => {\r\n          // console.log(\"getChannelAddressFromID() --> %o\", response.toString());\r\n          resolve(response.toString());\r\n        })\r\n        .catch(err => { console.log(\"!!!Error, getChannelAddressFromID() --> %o\", err); reject(err); });\r\n    })\r\n  },\r\n  // To retrieve a channel's Info from channel address\r\n  getChannelInfo: async (channel, contract) => {\r\n    const enableLogs = 0;\r\n    return new Promise ((resolve, reject) => {\r\n      // To get channel info from a channel address\r\n      contract.channels(channel)\r\n        .then(response => {\r\n          // Add an extra field for future info\r\n          const mappings = { ...response };\r\n          mappings.addr = channel;\r\n\r\n          if (enableLogs) console.log(\"getChannelInfo() --> %o\", mappings);\r\n          resolve(mappings);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getChannelInfo() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // To retrieve a channel's AddChannel event\r\n  getChannelEvent: async (channel, startBlock, updateBlock, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n\r\n      // To get channel ipfs hash from channel info\r\n      let filter = contract.filters.AddChannel(channel);\r\n      let block = startBlock;\r\n      if (startBlock != updateBlock) {\r\n        filter = contract.filters.UpdateChannel(channel);\r\n        block = updateBlock;\r\n      }\r\n\r\n      contract.queryFilter(filter, block, block)\r\n        .then(response => {\r\n          let filteredResponse;\r\n\r\n          if (enableLogs) console.log(\"getChannelEvent() --> Finding: %s in | %o |\", channel, response );\r\n\r\n          response.forEach(function (item) {\r\n            if (item.args.channel.toString() == channel.toString()) {\r\n              if (enableLogs) console.log(\"getChannelEvent() --> Selected Channel %o: \", item);\r\n              filteredResponse = ethers.utils.toUtf8String(item.args.identity);\r\n            }\r\n          });\r\n\r\n          if (enableLogs) console.log(\"getChannelEvent() --> Filtered Channel: %o\", filteredResponse);\r\n          resolve(filteredResponse);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getChannelEvent() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // Retrive IPFS File from ipfshash\r\n  getJsonFileFromIdentity: async(identity, channel) => {\r\n    const enableLogs = 0;\r\n\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // Split Channel Identity, delimeter of identity is \"+\"\r\n      if(!identity){\r\n        reject(\"There is no identity file for channel:\",channel);\r\n      }\r\n      const ids = identity?.split(\"+\") || []; // First segment is storage type, second is the pointer to it\r\n\r\n      if (ids[0] == 1) {\r\n        // IPFS HASH\r\n        // Form Gateway URL\r\n        const url = \"https://ipfs.io/ipfs/\" + ids[1];\r\n        fetch(url)\r\n          .then(response => response.json())\r\n          .then(response => {\r\n            if (enableLogs) console.log(\"getJsonFileFromIdentity() --> %o\", response);\r\n            resolve(response);\r\n          })\r\n          .catch(err => {\r\n            console.log(\"!!!Error, getJsonFileFromIdentity() --> %o\", err);\r\n            reject(err);\r\n          });\r\n      }\r\n\r\n    });\r\n  },\r\n  // Helper to get Channel from Channel's address\r\n  getChannelJsonFromChannelAddress: async (channel, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // To get channel info from a channel address\r\n      EPNSCoreHelper.getChannelInfo(channel, contract)\r\n        .then(response => EPNSCoreHelper.getChannelEvent(channel, response.channelStartBlock.toNumber(), response.channelUpdateBlock.toNumber(), contract))\r\n        .then(response => {\r\n          // add little hack for now to change coindesk's descriptioon\r\n          const hash = channel === COINDESK_CHANNEL_ADDR ? COINDESK_HASH  : (channel === ENS_CHANNEL_ADDR ? ENS_HASH : response);\r\n          return EPNSCoreHelper.getJsonFileFromIdentity(hash, channel)\r\n          // return EPNSCoreHelper.getJsonFileFromIdentity(response, channel)\r\n        })\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getChannelJsonFromChannelAddress() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getChannelJsonFromChannelAddress() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  // Helper to get Channel from User's address\r\n  getChannelJsonFromUserAddress: async (user, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // To get channel info from a channel address\r\n      // EPNSCoreHelper.getUserInfo(user, contract)\r\n      //   .then(response => EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract))\r\n        EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract)\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getChannelJsonFromUserAddress() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getChannelJsonFromUserAddress() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  // Get Total Number of Channels\r\n  getTotalNumberOfChannels: async (contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.channelsCount()\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getTotalNumberOfChannels() --> %o\", response.toNumber());\r\n          resolve(response.toNumber());\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getTotalNumberOfChannels() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // Get channels address given number of channels, , atIndex: -1 is start from latest, numChannels: -1 is return all\r\n  getChannelsMetaLatestToOldest: async (atIndex, numChannels, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      EPNSCoreHelper.getTotalNumberOfChannels(contract)\r\n        .then(async (response) => {\r\n          let channelsInfo = [];\r\n          const channelsCount = response;\r\n\r\n          if (atIndex > channelsCount || atIndex == -1) {\r\n            atIndex = channelsCount - 1;\r\n          }\r\n\r\n          if (numChannels == -1) {\r\n            numChannels = channelsCount;\r\n          }\r\n\r\n          // Get channels\r\n          let channelArrays = [];\r\n\r\n          // prefil and then refil\r\n          let count = 0;\r\n          for (let i = numChannels - 1; i >= 0; i--) {\r\n            const assignedChannelID = atIndex - i;\r\n            channelArrays.push(assignedChannelID);\r\n          }\r\n\r\n          const promises = channelArrays.map(async (channelID) => {\r\n            await EPNSCoreHelper.getChannelAddressFromID(channelID, contract)\r\n              .then(response => EPNSCoreHelper.getChannelInfo(response, contract))\r\n              .then(response => {\r\n                if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(%d, %d) --> %o\", channelID, numChannels, channelsInfo);\r\n                channelsInfo = [response, ...channelsInfo];\r\n              })\r\n              .catch(err => console.log(\"Error in channel: %d | skipping...\", channelID))\r\n          });\r\n\r\n          // wait until all promises are resolved\r\n          await Promise.all(promises);\r\n\r\n          if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(Index: %d, Number: %d) --> %o\", atIndex, numChannels, channelsInfo);\r\n          resolve(channelsInfo);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getChannelsMetaLatestToOldest() --> %o\", err);\r\n          reject(err);\r\n        })\r\n    });\r\n  },\r\n  // Get Total Number of Users\r\n  getTotalNumberOfUsers: async (contract) => {\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.usersCount()\r\n        .then(response => {\r\n          console.log(\"getTotalNumberOfUsers() --> %o\", response.toNumber());\r\n          resolve(response.toNumber());\r\n        })\r\n        .catch(err => { console.log(\"!!!Error, getTotalNumberOfUsers() --> %o\", err); reject(err); });\r\n    })\r\n  },\r\n  // To retrieve public key of a user\r\n  getPublicKey: async (address, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // To get channel ipfs hash from channel info\r\n      let filteredResponse;\r\n      contract.queryFilter('PublicKeyRegistered')\r\n        .then(response => {\r\n\r\n          response.forEach(function (item) {\r\n            if (item.args[0] == address) {\r\n              filteredResponse = item;\r\n            }\r\n          });\r\n\r\n          if (enableLogs) console.log(\"Public Key Registry Response: \" + response);\r\n          if (enableLogs) console.log(\"Public Key Registry Filtered: \" + filteredResponse);\r\n\r\n          if (!filteredResponse || filteredResponse.length == 0) {\r\n            resolve(null)\r\n          }\r\n          else {\r\n            resolve(filteredResponse.args[1]);\r\n          }\r\n\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // Get Total Subsbribed Channels\r\n  getSubscribedStatus: async (user, channel, contract) => {\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.isUserSubscribed(channel, user)\r\n        .then(response => {\r\n          // console.log(\"getSubscribedStatus() --> %o\", {response, user, channel});\r\n          resolve(response);\r\n        })\r\n        .catch(err => { console.log(\"!!!Error, getSubscribedStatus() --> %o\", err); reject(err); });\r\n    })\r\n  },\r\n  // Get Total Subsbribed Channels\r\n  getTotalSubscribedChannels: async (user, contract) => {\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.users[user].subscribedCount()\r\n        .then(response => {\r\n          console.log(\"getTotalSubscribedChannels() --> %o\", response.toNumber());\r\n          resolve(response.toNumber());\r\n        })\r\n        .catch(err => { console.log(\"!!!Error, getTotalSubscribedChannels() --> %o\", err); reject(err); });\r\n    })\r\n  },\r\n  // Get Fair Share\r\n  getFairShareOfUserAtBlock: async(user, block, contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      // Get User Info from EPNS Core\r\n      contract.users(user)\r\n        .then((response) => {\r\n          if (response.userActivated) {\r\n            contract.calcAllChannelsRatio(user, block)\r\n              .then(response => {\r\n                if (enableLogs) console.log(\"calcAllChannelsRatio() --> %o\", response);\r\n                resolve(response);\r\n              })\r\n              .catch(err => {\r\n                console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\r\n                reject(err);\r\n              });\r\n          }\r\n          else {\r\n            if (enableLogs) console.log(\"!!!Warning, calcAllChannelsRatio() --> User not activated\");\r\n            reject(\"User not activated\");\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // Get Pool Funds\r\n  getPoolFunds: async(contract) => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise ((resolve, reject) => {\r\n      contract.poolFunds()\r\n        .then(response => {\r\n          if (enableLogs) console.log(\"getPoolFunds() --> %o\", response);\r\n          resolve(response);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"!!!Error, getPoolFunds() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    })\r\n  },\r\n  // Helper Functions\r\n  // To format Big Number\r\n  formatBigNumberToMetric: (bignumber, convertToCurrency) => {\r\n    try {\r\n      if (convertToCurrency) {\r\n        bignumber = bignumber.div(100000000000000);\r\n        bignumber = bignumber.div(10000);\r\n      }\r\n      bignumber = bignumber.toNumber();\r\n      return EPNSCoreHelper.metricFormatter(bignumber, 2);\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n      return \"---\";\r\n    }\r\n  },\r\n  // Metric Formatter, thanks: https://stackoverflow.com/questions/9461621/format-a-number-as-2-5k-if-a-thousand-or-more-otherwise-900\r\n  metricFormatter: (num, digits) => {\r\n    var si = [\r\n      { value: 1, symbol: \"\" },\r\n      { value: 1E3, symbol: \"k\" },\r\n      { value: 1E6, symbol: \"M\" },\r\n      { value: 1E9, symbol: \"G\" },\r\n      { value: 1E12, symbol: \"T\" },\r\n      { value: 1E15, symbol: \"P\" },\r\n      { value: 1E18, symbol: \"E\" }\r\n    ];\r\n    var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\r\n    var i;\r\n    for (i = si.length - 1; i > 0; i--) {\r\n      if (num >= si[i].value) {\r\n        break;\r\n      }\r\n    }\r\n    return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\r\n  },\r\n\r\n}\r\n\r\nexport default EPNSCoreHelper;\r\n","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\nimport { ethers } from \"ethers\";\r\nimport { toast } from 'react-toastify';\r\nimport moment from 'moment';\r\n\r\nfunction NotificationToast({ notification, clearToast }) {\r\n\r\n  // toast customize\r\n  const LoaderToast = ({color }) => (\r\n      <Toaster>\r\n      <div>{notification.notificationTitle}</div>\r\n      <div>{notification.notificationBody}</div>\r\n      </Toaster>\r\n  )\r\n \r\n  // Render\r\n  return (\r\n    <NotificationWrapper>{\r\n    toast.dark(<LoaderToast onClick={clearToast} color=\"#35c5f3\"/>, {\r\n          position: \"bottom-right\",\r\n          autoClose: false,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n    }\r\n    </NotificationWrapper>\r\n  );\r\n}\r\n\r\nconst NotificationWrapper = styled.div`\r\n  display: none;\r\n`;\r\n\r\nconst Toaster = styled.div`\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst Items = styled.div`\r\n  display: block;\r\n  align-self: stretch;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n  background: #fafafa;\r\n`\r\n\r\n\r\n\r\n// Export Default\r\nexport default NotificationToast;\r\n","import axios from \"axios\";\r\nimport { envConfig } from \"@project/contracts\";\r\n\r\n\r\n// const BASE_URL = \"https://backend-staging.epns.io/apis\";\r\nconst BASE_URL = envConfig.apiUrl// \"https://backend-kovan.epns.io/apis\";\r\n// const BASE_URL = \"http://localhost:4000/apis\"; //for local push node\r\n\r\n/**\r\n * A function used to make get requests throughout the entire application\r\n * @param {String} path e.g /feeds/get_feeds, this represents the route of the enpoint to call\r\n * @returns {Promise}\r\n */\r\nexport const getReq = async (path) => {\r\n    try {\r\n      const response = await axios.get(BASE_URL + path);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n/**\r\n * A function used to make post requests to the backend\r\n * @param {String} path e.g /feeds/get_feeds, this represents the route of the enpoint to call\r\n * @param {Object} obj \r\n * @returns {Promise}\r\n */\r\nexport const postReq = async (path, obj) => {\r\n  try {\r\n    const response = await axios.post(BASE_URL + path, obj, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n","import React, {useRef, useState} from 'react';\r\nimport { useClick, useClickAway } from 'react-use';\r\nimport styled from 'styled-components';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport Loader from 'react-loader-spinner';\r\nimport { postReq } from \"../api\";\r\n\r\nimport {Item, H2, H3, Span, Button, Input} from 'components/SharedStyling';\r\n\r\nconst ethers = require('ethers');\r\n\r\n\r\nexport default function AliasVerificationModal({\r\n    onClose,onSuccess, verificationStatus, aliasEthAccount\r\n}) {\r\n    const { active, error, account, library, chainId } = useWeb3React();\r\n    const signer = library.getSigner(account);\r\n\r\n    const modalRef = useRef(null);\r\n    const polygonCommsContract = new ethers.Contract(addresses.epnsPolyComm, abis.epnsComm, signer);\r\n    const [mainAddress, setMainAddress] = useState(aliasEthAccount);\r\n    const [loading, setLoading] = useState('');\r\n\r\n    // Form signer and contract connection\r\n    useClickAway(modalRef, ()=>onClose(loading !== ''));\r\n\r\n    const checkAlias = async () => {\r\n        console.log(mainAddress, aliasEthAccount);\r\n        if (mainAddress == aliasEthAccount) {\r\n            submitAlias();\r\n        } else {\r\n            setLoading('Enter Correct Eth Channel Address');\r\n            setTimeout(() => {\r\n                setLoading('')\r\n            }, 4000)\r\n        }\r\n    }\r\n\r\n    const submitAlias = () => {\r\n        setLoading('loading')\r\n        const anotherSendTxPromise = polygonCommsContract.verifyChannelAlias(mainAddress);\r\n        anotherSendTxPromise\r\n        .then(async (tx) => {\r\n            console.log(tx);\r\n            setLoading(\"Transaction Sent!\");\r\n\r\n\t\t\tawait tx.wait(1);\r\n            setTimeout(() => {\r\n                setLoading(\"Transaction Mined!\");\r\n            }, 2000);\r\n            \r\n            setTimeout(() => {\r\n                setLoading(\"Verification in Process. Please wait, it may take some time\");\r\n            }, 2000);\r\n\t\t\t\r\n            const intervalId = setInterval(async () => {\r\n                const response = await postReq(\"/channels/get_alias_verification_status\", {\r\n                    aliasAddress: account,\r\n                    op: \"read\",\r\n                })\r\n                const status = response?.data?.status;\r\n                if (status == true) {\r\n                    clearInterval(intervalId);\r\n                    onSuccess();\r\n                    onClose();\r\n                }\r\n            }, 5000);\r\n        })\r\n        .catch(() => {\r\n            setLoading('There was an error');\r\n            setTimeout(() => {\r\n                setLoading('')\r\n            }, 2000)\r\n        })\r\n    };\r\n    \r\n\r\n    return (\r\n        <Overlay>\r\n            <AliasModal ref={modalRef}>\r\n                <Item align=\"flex-start\">\r\n                    <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n                    <Span weight=\"200\">Verify </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Alias</Span>\r\n                    </H2>\r\n                    {\r\n                        verificationStatus === null ?\r\n                        (\r\n                            <H3>There has been an error in the verification of your alias, Please contact the admin</H3>\r\n                        ) : (\r\n                            <H3>Before you can use this channel on this chain, you first need to verify your Alias.</H3>\r\n                        )\r\n                    }\r\n                </Item>\r\n                {\r\n                    verificationStatus !== null && (\r\n                        <>\r\n                            <Item align=\"flex-start\">\r\n                                <CustomInput\r\n                                    placeholder={aliasEthAccount}\r\n                                    radius=\"4px\"\r\n                                    padding=\"12px\"\r\n                                    border=\"1px solid #674c9f\"\r\n                                    bg=\"#fff\"\r\n                                    disabled\r\n                                    readOnly={true}\r\n                                />\r\n                            </Item>\r\n                            <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                                <Button\r\n                                    bg='#e20880'\r\n                                    color='#fff'\r\n                                    flex=\"1\"\r\n                                    radius=\"0px\"\r\n                                    padding=\"20px 10px\"\r\n                                    disabled={mainAddress.length !== 42 || loading !== ''}\r\n                                    onClick={checkAlias}\r\n                                >\r\n                                    { loading && <Loader\r\n                                        type=\"Oval\"\r\n                                        color=\"#FFF\"\r\n                                        height={16}\r\n                                        width={16}\r\n                                        />\r\n                                    }\r\n                                    <StyledInput\r\n                                        cursor=\"hand\"\r\n                                        textTransform=\"uppercase\"\r\n                                        color=\"#fff\" weight=\"400\"\r\n                                        size=\"0.8em\" spacing=\"0.2em\"\r\n                                        value={loading ? loading : \"Verify Alias\"}\r\n                                    />\r\n                                </Button>\r\n                            </Item>\r\n                        </>\r\n                    )\r\n                }\r\n            </AliasModal>\r\n        </Overlay>\r\n    )\r\n}\r\n\r\nconst StyledInput = styled(Input)`\r\n    width: 100%;\r\n    text-align: center;\r\n    caret-color: transparent;\r\n`\r\n\r\nconst CustomInput = styled(Input)`\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    margin: 20px 0px;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background: rgba(0,0,0,0.85);\r\n    height: 100%;\r\n    width: 100%;\r\n    z-index: 1000;\r\n    position: fixed;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst AliasModal = styled.div`\r\n    padding: 20px 30px;\r\n    background: white;\r\n`;","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport { useWeb3React } from '@web3-react/core';\r\n\r\n\r\n// Other Information URLs\r\nfunction ViewInfoItem() {\r\n  // render\r\n  return (\r\n    <>\r\n    <Container >\r\n      <ChannelInfo>\r\n        <ChannelTitle>\r\n          <>\r\n          <AppLinkText>\r\n            <AppLink href={`${process.env.REACT_APP_BROWSER_EXTENSION_URL}`} target=\"_blank\" rel=\"nofollow\">\r\n              Download EPNS Browser Extension\r\n            </AppLink>\r\n          </AppLinkText>\r\n          \r\n          </>\r\n        </ChannelTitle>\r\n      </ChannelInfo>\r\n    </Container>\r\n    <Container >\r\n      <ChannelInfo>\r\n        <ChannelTitle>\r\n          <>\r\n          <AppLinkText>\r\n            <AppLink href={`${process.env.REACT_APP_IOS_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\r\n              Download EPNS App (iOS)\r\n            </AppLink>\r\n          </AppLinkText>\r\n           For iOS Users\r\n          </>\r\n        </ChannelTitle>\r\n      </ChannelInfo>\r\n    </Container>\r\n    <Container >\r\n      <ChannelInfo>\r\n        <ChannelTitle>\r\n          <>\r\n          <AppLinkText>\r\n            <AppLink href={`${process.env.REACT_APP_ANDROID_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\r\n              Download EPNS App (Android)\r\n            </AppLink>\r\n          </AppLinkText>\r\n           For Android Users\r\n          </>\r\n        </ChannelTitle>\r\n      </ChannelInfo>\r\n    </Container>\r\n    <Container >\r\n      <ChannelInfo>\r\n        <ChannelTitle>\r\n          <ChannelTitleLink href={`${process.env.REACT_APP_HOW_TO_GUIDE}`} target=\"_blank\" rel=\"nofollow\">\r\n            Click here for our How to Guides\r\n          </ChannelTitleLink>\r\n        </ChannelTitle>\r\n      </ChannelInfo>\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  // display: flex;\r\n  // flex-wrap: wrap;\r\n\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  border: 1px solid rgb(237, 237, 237);\r\n\r\n  margin: 15px 0px;\r\n  justify-content: center;\r\n  padding: 10px;\r\n`\r\n\r\nconst ChannelTitleLink = styled.a`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\nconst AppLink = styled.a`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\nconst AppLinkText = styled.div`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n`\r\nconst ChannelInfo = styled.div`\r\n  flex: 1;\r\n  margin: 5px 10px;\r\n  min-width: 120px;\r\n  flex-grow: 4;\r\n  flex-direction: column;\r\n  display: flex;\r\n`\r\n\r\nconst ChannelTitle = styled.div`\r\n  margin-bottom: 5px;\r\n`\r\n\r\n// Export Default\r\nexport default ViewInfoItem;\r\n","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nimport ViewInfoItem from \"components/ViewInfoItem\";\r\n\r\nimport * as dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\n// Other Information section\r\nfunction  Info() {\r\n  const { account, library } = useWeb3React();\r\n\r\n  const [controlAt, setControlAt] = React.useState(0);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  return (\r\n    <Container>\r\n      {loading &&\r\n        <ContainerInfo>\r\n          <Loader\r\n           type=\"Oval\"\r\n           color=\"#35c5f3\"\r\n           height={40}\r\n           width={40}\r\n          />\r\n        </ContainerInfo>\r\n      }\r\n\r\n      {!loading && controlAt == 0 && \r\n      <>\r\n        <InfoBox>\r\n          <ViewInfoItem/>\r\n        </InfoBox>\r\n      </>\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  max-height: 80vh;\r\n`\r\n\r\nconst ContainerInfo = styled.div`\r\n  padding: 20px;\r\n`\r\nconst InfoBox = styled.div`\r\n  padding: 10px 20px;\r\n  display: block;\r\n  align-self: stretch;\r\n  background: #fafafa;\r\n`\r\n\r\n\r\n// Export Default\r\nexport default  Info;\r\n","/**\r\n * This file helps us maintain the spamnotifications fetched in state, so when tabs are switched we can retain the notification information\r\n */\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    page: 1, //the current page\r\n    notifications: [],// the actual notifications\r\n    finishedFetching: false,\r\n    toggler: false\r\n}\r\n\r\nexport const contractSlice = createSlice({\r\n    name: \"spam\",\r\n    initialState,\r\n    reducers: {\r\n        toggleToggler: (state) => {\r\n            state.toggler = !state.toggler;\r\n        },\r\n        resetState: (state) => {\r\n            state.page = initialState.page;\r\n            state.notifications = initialState.notifications;\r\n            state.finishedFetching = initialState.finishedFetching;\r\n        },\r\n        addPaginatedNotifications: (state, action) => {\r\n            state.notifications = [ ...state.notifications, ...action.payload ];\r\n            state.page += 1;\r\n        },\r\n        incrementPage: (state) => {\r\n            state.page += 1;\r\n        },\r\n        addNewNotification: (state, action) => {\r\n            state.notifications = [{...action.payload}, ...state.notifications]\r\n        },\r\n        setFinishedFetching: (state) => {\r\n            state.finishedFetching = true;\r\n        },\r\n        updateTopNotifications: (state, action) => {\r\n            state.notifications = [...action.payload.notifs, ...state.notifications.slice(action.payload.pageSize)];\r\n            console.log({sn: state.notifications});\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    toggleToggler,\r\n    addPaginatedNotifications,\r\n    incrementPage,\r\n    addNewNotification,\r\n    setFinishedFetching,\r\n    resetState,\r\n    updateTopNotifications\r\n} = contractSlice.actions;\r\n\r\nexport default contractSlice.reducer;","import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport { AnimateOnChange } from 'react-animation';\r\n\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\n\r\n// Create Header\r\nfunction DisplayNotice({ title, theme }) {\r\n  React.useEffect(() => {\r\n\r\n  }, [title, theme]);\r\n\r\n  // to create blockies\r\n\r\n  return (\r\n    <Container>\r\n      <AnimateOnChange\r\n        animationIn=\"fadeIn\"\r\n        animationOut=\"fadeOut\"\r\n        durationOut={200}\r\n      >\r\n        <Notice theme={theme}>{title}</Notice>\r\n      </AnimateOnChange>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.div`\r\n\r\n`\r\n\r\nconst Notice = styled.span`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n\r\n  ${props => props.theme === 'primary' && css`\r\n    background: #e20880;\r\n  `};\r\n\r\n  ${props => props.theme === 'secondary' && css`\r\n    background: #35c5f3;\r\n  `};\r\n\r\n  ${props => props.theme === 'third' && css`\r\n    background: #674c9f;\r\n  `};\r\n`\r\n\r\n// Export Default\r\nexport default DisplayNotice;\r\n","/**\r\n * This file helps us maintain the notifications fetched in state, so when tabs are switched we can retain the notification information\r\n */\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    page: 1, //the current page\r\n    notifications: [],// the actual notifications\r\n    finishedFetching: false,\r\n    toggler: false\r\n}\r\n\r\nexport const contractSlice = createSlice({\r\n    name: \"notifications\",\r\n    initialState,\r\n    reducers: {\r\n        toggleToggler: (state) => {\r\n            state.toggler = !state.toggler;\r\n        },\r\n        resetState: (state) => {\r\n            state.page = initialState.page;\r\n            state.notifications = initialState.notifications;\r\n            state.finishedFetching = initialState.finishedFetching;\r\n        },\r\n        addPaginatedNotifications: (state, action) => {\r\n            state.notifications = [ ...state.notifications, ...action.payload ];\r\n            state.page += 1;\r\n        },\r\n        incrementPage: (state) => {\r\n            state.page += 1;\r\n        },\r\n        addNewNotification: (state, action) => {\r\n            state.notifications = [{...action.payload}, ...state.notifications]\r\n        },\r\n        setFinishedFetching: (state) => {\r\n            state.finishedFetching = true;\r\n        },\r\n        updateTopNotifications: (state, action) => {\r\n            console.log({pp: action.payload});\r\n            state.notifications = [...action.payload.notifs, ...state.notifications.slice(action.payload.pageSize)];\r\n            console.log({sn: state.notifications});\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    toggleToggler,\r\n    addPaginatedNotifications,\r\n    incrementPage,\r\n    addNewNotification,\r\n    setFinishedFetching,\r\n    resetState,\r\n    updateTopNotifications\r\n} = contractSlice.actions;\r\n\r\nexport default contractSlice.reducer;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { envConfig } from \"@project/contracts\";\r\nimport {\r\n  api,\r\n  utils,\r\n  NotificationItem,\r\n} from \"@epnsproject/frontend-sdk-staging\";\r\nimport {\r\n  addPaginatedNotifications,\r\n  incrementPage,\r\n  setFinishedFetching,\r\n} from \"redux/slices/spamSlice\";\r\nimport { postReq } from \"api\";\r\nimport DisplayNotice from \"components/DisplayNotice\";\r\nimport { updateTopNotifications } from \"redux/slices/notificationSlice\";\r\n\r\nconst NOTIFICATIONS_PER_PAGE = 10;\r\n// Create Header\r\nfunction SpamBox({ currentTab }) {\r\n  const dispatch = useDispatch();\r\n  const { account, chainId, library } = useWeb3React();\r\n  const { epnsCommReadProvider } = useSelector(\r\n    (state: any) => state.contracts\r\n  );\r\n\r\n  const { notifications, page, finishedFetching } = useSelector((state: any) => state.spam);\r\n  const { toggle } = useSelector(\r\n    (state: any) => state.notifications\r\n  );\r\n  const EPNS_DOMAIN = {\r\n    name: \"EPNS COMM V1\",\r\n    chainId: chainId,\r\n    verifyingContract: epnsCommReadProvider?.address,\r\n  };\r\n\r\n  const [bgUpdateLoading, setBgUpdateLoading] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const loadNotifications = async () => {\r\n    if (loading || finishedFetching) return;\r\n    setLoading(true);\r\n    try {\r\n      const { count, results } = await api.fetchSpamNotifications(\r\n        account,\r\n        NOTIFICATIONS_PER_PAGE,\r\n        page,\r\n        envConfig.apiUrl\r\n      );\r\n      const parsedResponsePromise = utils\r\n        .parseApiResponse(results)\r\n        .map(async (elem: any, i: any) => {\r\n          elem.channel = results[i].channel;\r\n          const {\r\n            data: { subscribers },\r\n          } = await postReq(\"/channels/get_subscribers\", {\r\n            channel: results[i].channel,\r\n            op: \"read\",\r\n          });\r\n          elem.subscribers = subscribers;\r\n          return { ...elem };\r\n        });\r\n      const parsedResponse = await Promise.all(parsedResponsePromise);\r\n      // get all the subsc\r\n      dispatch(addPaginatedNotifications(parsedResponse));\r\n      if (count === 0) {\r\n        dispatch(setFinishedFetching());\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchLatestNotifications = async () => {\r\n    if (loading || bgUpdateLoading) return;\r\n    setBgUpdateLoading(true);\r\n    setLoading(true);\r\n\r\n    try {\r\n      const { count, results } = await api.fetchSpamNotifications(\r\n        account,\r\n        NOTIFICATIONS_PER_PAGE,\r\n        1,\r\n        envConfig.apiUrl\r\n      );\r\n      if (!notifications.length) {\r\n        dispatch(incrementPage());\r\n      }\r\n      const parsedResponsePromise = utils\r\n        .parseApiResponse(results)\r\n        .map(async (elem: any, i: any) => {\r\n          elem.channel = results[i].channel;\r\n          const {\r\n            data: { subscribers },\r\n          } = await postReq(\"/channels/get_subscribers\", {\r\n            channel: results[i].channel,\r\n            op: \"read\",\r\n          });\r\n          elem.subscribers = subscribers;\r\n          return { ...elem };\r\n        });\r\n      const parsedResponse = await Promise.all(parsedResponsePromise);\r\n      dispatch(\r\n        updateTopNotifications({\r\n          notifs: parsedResponse,\r\n          pageSize: NOTIFICATIONS_PER_PAGE,\r\n        })\r\n      );\r\n      if (count === 0) {\r\n        dispatch(setFinishedFetching());\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setBgUpdateLoading(false);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (account && currentTab === \"spambox\") {\r\n      fetchLatestNotifications();\r\n    }\r\n  }, [account, currentTab]);\r\n\r\n  React.useEffect(() => {\r\n    if (epnsCommReadProvider) {\r\n      loadNotifications();\r\n    }\r\n  }, [epnsCommReadProvider, account]);\r\n\r\n  //function to query more notifications\r\n  const handlePagination = async () => {\r\n    loadNotifications();\r\n    dispatch(incrementPage());\r\n  };\r\n\r\n  const showWayPoint = (index: any) => {\r\n    return (\r\n      Number(index) === notifications.length - 1 &&\r\n      !finishedFetching &&\r\n      !bgUpdateLoading\r\n    );\r\n  };\r\n\r\n  const onSubscribeToChannel = async (channelAddress) => {\r\n    let txToast;\r\n    const type = {\r\n      Subscribe: [\r\n        { name: \"channel\", type: \"address\" },\r\n        { name: \"subscriber\", type: \"address\" },\r\n        { name: \"action\", type: \"string\" },\r\n      ],\r\n    };\r\n    const message = {\r\n      channel: channelAddress,\r\n      subscriber: account,\r\n      action: \"Subscribe\",\r\n    };\r\n\r\n    const signature = await library\r\n      .getSigner(account)\r\n      ._signTypedData(EPNS_DOMAIN, type, message);\r\n\r\n    return postReq(\"/channels/subscribe_offchain\", {\r\n      signature,\r\n      message,\r\n      op: \"write\",\r\n      chainId,\r\n      contractAddress: epnsCommReadProvider.address,\r\n    });\r\n  };\r\n\r\n  const isSubscribedFn = async (subscribers: any) => {\r\n    return subscribers\r\n      .map((a) => a.toLowerCase())\r\n      .includes(account.toLowerCase());\r\n  };\r\n\r\n  // Render\r\n  return (\r\n    <>\r\n      <Container>\r\n        {bgUpdateLoading && (\r\n          <div style={{ marginTop: \"10px\" }}>\r\n            <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\r\n          </div>\r\n        )}\r\n        {notifications && (\r\n          <Items id=\"scrollstyle-secondary\">\r\n            {notifications.map((oneNotification, index) => {\r\n              const {\r\n                cta,\r\n                title,\r\n                message,\r\n                app,\r\n                icon,\r\n                image,\r\n                channel,\r\n                subscribers,\r\n              } = oneNotification;\r\n              // render the notification item\r\n              return (\r\n                <div key={`${message}+${title}`}>\r\n                  {showWayPoint(index) && !loading && (\r\n                    <Waypoint onEnter={() => handlePagination()} />\r\n                  )}\r\n                  <NotificationItem\r\n                    notificationTitle={title}\r\n                    notificationBody={message}\r\n                    cta={cta}\r\n                    app={app}\r\n                    icon={icon}\r\n                    image={image}\r\n                    subscribeFn={(e) => {\r\n                      e?.stopPropagation();\r\n                      onSubscribeToChannel(channel);\r\n                    }}\r\n                    isSpam\r\n                    isSubscribedFn={async () => isSubscribedFn(subscribers)}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </Items>\r\n        )}\r\n        {loading && !bgUpdateLoading && (\r\n          <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\r\n        )}\r\n        {!loading && !notifications.length && (\r\n          <CenteredContainerInfo>\r\n            <DisplayNotice\r\n              title=\"You currently have no spam notifications.\"\r\n              theme=\"third\"\r\n            />\r\n          </CenteredContainerInfo>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nconst CenteredContainerInfo = styled.div`\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Items = styled.div`\r\n  display: block;\r\n  align-self: stretch;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n  background: #fafafa;\r\n`;\r\n// css styles\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n  max-height: 100vh;\r\n\r\n  // padding: 20px;\r\n  // font-size: 16px;\r\n  // display: flex;\r\n  // font-weight: 200;\r\n  // align-content: center;\r\n  // align-items: center;\r\n  // justify-content: center;\r\n  // width: 100%;\r\n  // min-height: 40vh;\r\n`;\r\n\r\n// Export Default\r\nexport default SpamBox;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { envConfig } from \"@project/contracts\";\r\nimport DisplayNotice from \"components/DisplayNotice\";\r\nimport SpamBox from \"./spam\";\r\nimport {\r\n  api,\r\n  utils,\r\n  NotificationItem,\r\n} from \"@epnsproject/frontend-sdk-staging\";\r\nimport {\r\n  addPaginatedNotifications,\r\n  incrementPage,\r\n  setFinishedFetching,\r\n  resetState,\r\n  updateTopNotifications,\r\n} from \"redux/slices/notificationSlice\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\n\r\nconst NOTIFICATIONS_PER_PAGE = 10;\r\n// Create Header\r\nfunction Feedbox() {\r\n  const dispatch = useDispatch();\r\n  const { account } = useWeb3React();\r\n  const { epnsCommReadProvider } = useSelector((state: any) => state.contracts);\r\n  const { notifications, page, finishedFetching, toggle } = useSelector(\r\n    (state: any) => state.notifications\r\n  );\r\n\r\n  const [bgUpdateLoading, setBgUpdateLoading] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [currentTab, setCurrentTab] = React.useState(\"inbox\");\r\n\r\n  const loadNotifications = async () => {\r\n    if (loading || finishedFetching) return;\r\n    setLoading(true);\r\n    try {\r\n      const { count, results } = await api.fetchNotifications(\r\n        account,\r\n        NOTIFICATIONS_PER_PAGE,\r\n        page,\r\n        envConfig.apiUrl\r\n      );\r\n      const parsedResponse = utils.parseApiResponse(results);\r\n      dispatch(addPaginatedNotifications(parsedResponse));\r\n      if (count === 0) {\r\n        dispatch(setFinishedFetching());\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const fetchLatestNotifications = async () => {\r\n    if (loading || bgUpdateLoading) return;\r\n    setBgUpdateLoading(true);\r\n    setLoading(true);\r\n    try {\r\n      const { count, results } = await api.fetchNotifications(\r\n        account,\r\n        NOTIFICATIONS_PER_PAGE,\r\n        1,\r\n        envConfig.apiUrl\r\n      );\r\n      if (!notifications.length) {\r\n        dispatch(incrementPage());\r\n      }\r\n      const parsedResponse = utils.parseApiResponse(results);\r\n      // replace the first 20 notifications with these\r\n      dispatch(\r\n        updateTopNotifications({\r\n          notifs: parsedResponse,\r\n          pageSize: NOTIFICATIONS_PER_PAGE,\r\n        })\r\n      );\r\n      if (count === 0) {\r\n        dispatch(setFinishedFetching());\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setBgUpdateLoading(false);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (account && currentTab === \"inbox\") {\r\n      fetchLatestNotifications();\r\n    }\r\n  }, [account, currentTab]);\r\n\r\n  React.useEffect(() => {\r\n    fetchLatestNotifications();\r\n  }, [toggle]);\r\n\r\n  //function to query more notifications\r\n  const handlePagination = async () => {\r\n    loadNotifications();\r\n    dispatch(incrementPage());\r\n  };\r\n\r\n  const showWayPoint = (index: any) => {\r\n    return (\r\n      Number(index) === notifications.length - 1 &&\r\n      !finishedFetching &&\r\n      !bgUpdateLoading\r\n    );\r\n  };\r\n  const [clicked, setClicked] = React.useState(false);\r\n\r\n  // Render\r\n  return (\r\n    <FullWidth>\r\n      <Wrapper>\r\n        {bgUpdateLoading && (\r\n          <div style={{ marginTop: \"10px\", marginLeft: \"21px\" }}>\r\n            <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\r\n          </div>\r\n        )}\r\n        <ControlButtonBack\r\n          active={currentTab == \"inbox\"}\r\n          onClick={() => {\r\n            setCurrentTab(\"inbox\");\r\n            setClicked(false);\r\n          }}\r\n        >\r\n          {/* Inbox */}\r\n          <img src=\"./arrow_back.png\" />\r\n          <img style={{ marginLeft: \"15px\" }} src=\"./svg/INBOX.svg\" />\r\n          {/* <ControlText color=\"#35C5F3\">INBOX</ControlText> */}\r\n        </ControlButtonBack>\r\n\r\n        <ControlButton\r\n          active={currentTab == \"spambox\"}\r\n          onClick={() => {\r\n            setCurrentTab(\"spambox\");\r\n            setClicked(true);\r\n          }}\r\n          spam\r\n        >\r\n          {/* spambox */}\r\n\r\n          {/* <Button style={{ border: '2px solid black',width:\"35px\",height:\"45px\",borderRadius:\"10px\" }} > */}\r\n          \r\n          <ControlImage active={currentTab == \"spambox\"} src=\"./spam-icon.png\"/>\r\n            {/* </Button> */}\r\n\r\n        </ControlButton>\r\n      </Wrapper>\r\n\r\n      {currentTab == \"spambox\" ? (\r\n        <SpamBox currentTab={currentTab} />\r\n      ) : (\r\n        <Container>\r\n          {notifications && (\r\n            <Items id=\"scrollstyle-secondary\">\r\n              {notifications.map((oneNotification, index) => {\r\n                const {\r\n                  cta,\r\n                  title,\r\n                  message,\r\n                  app,\r\n                  icon,\r\n                  image,\r\n                } = oneNotification;\r\n\r\n                // render the notification item\r\n                return (\r\n                  <div key={`${message}+${title}`}>\r\n                    {showWayPoint(index) && (\r\n                      <Waypoint onEnter={() => handlePagination()} />\r\n                    )}\r\n                    <NotificationItem\r\n                      notificationTitle={title}\r\n                      notificationBody={message}\r\n                      cta={cta}\r\n                      app={app}\r\n                      icon={icon}\r\n                      image={image}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </Items>\r\n          )}\r\n          {loading && !bgUpdateLoading && (\r\n            <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\r\n          )}\r\n          {!notifications.length && !loading && (\r\n            <CenteredContainerInfo>\r\n              <DisplayNotice\r\n                title=\"You currently have no notifications, try subscribing to some channels.\"\r\n                theme=\"third\"\r\n              />\r\n            </CenteredContainerInfo>\r\n          )}\r\n        </Container>\r\n      )}\r\n    </FullWidth>\r\n  );\r\n}\r\n\r\n// const Controls = styled.div`\r\n//   flex: 0;\r\n//   display: flex;\r\n//   flex-direction: row;\r\n//   display: flex;\r\n//   flex-wrap: wrap;\r\n//   justify-content: space-between;\r\n// `;\r\n\r\nconst ControlButtonBack = styled.div`\r\n  flex: 1 1 21%;\r\n  height: 20px;\r\n  min-width: 70px;\r\n  background: #fff;\r\n  margin-top: 10px;\r\n  margin-left: 27px;\r\n\r\n  overflow: hidden;\r\n  background: #fafafa;\r\n\r\n  display: flex;\r\n  visibility:${(props) => (props.active ? \"hidden\" : \"\")};\r\n\r\n  // opacity: ${(props) => (props.active ? \"1\" : \"0.4\")};\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`;\r\n\r\nconst ControlButton = styled.div`\r\n  display: flex;\r\n  height: 44px;\r\n  min-width: 40px;\r\n  border-radius: 10px;\r\n  margin-right: 30px;\r\n  margin-bottom: 20px;\r\n\r\n  // opacity: ${(props) => (props.active ? \"1\" : \"0.4\")};\r\n  // background-color: ${(props) => (props.active ? \"#E20880\" : \"\")};\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`;\r\n\r\nconst ControlImage = styled.img`\r\n  height: 40px;\r\n  width: 40px;\r\n  \r\n\r\n\r\n`;\r\n\r\nconst ControlText = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 400;\r\n  margin-left: 15px;\r\n  opacity: ${(props) => (props.active ? \"1\" : \"0.75\")};\r\n`;\r\n\r\nconst FullWidth = styled.div`\r\n  width: 100%;\r\n`;\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding-top: 20px;\r\n  background: #fafafa;\r\n`;\r\n\r\nconst EmptyWrapper = styled.div`\r\n  padding-top: 50px;\r\n  padding-bottom: 50px;\r\n`;\r\nconst CenteredContainerInfo = styled.div`\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Items = styled.div`\r\n  display: block;\r\n  align-self: stretch;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n  background: #fafafa;\r\n`;\r\n// css styles\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n  max-height: 100vh;\r\n\r\n  // padding: 20px;\r\n  // font-size: 16px;\r\n  // display: flex;\r\n  // font-weight: 200;\r\n  // align-content: center;\r\n  // align-items: center;\r\n  // justify-content: center;\r\n  // width: 100%;\r\n  // min-height: 40vh;\r\n`;\r\n\r\n// Export Default\r\nexport default Feedbox;\r\n","const size = {\r\n  mobileS: '320px',\r\n  mobileM: '375px',\r\n  mobileL: '425px',\r\n  tablet: '768px',\r\n  laptop: '1024px',\r\n  laptopL: '1440px',\r\n  desktop: '2560px'\r\n}\r\n\r\nexport const Device = {\r\n  mobileS: `(max-width: ${size.mobileS})`,\r\n  mobileM: `(max-width: ${size.mobileM})`,\r\n  mobileL: `(max-width: ${size.mobileL})`,\r\n  tablet: `(max-width: ${size.tablet})`,\r\n  laptop: `(max-width: ${size.laptop})`,\r\n  laptopL: `(max-width: ${size.laptopL})`,\r\n  desktop: `(max-width: ${size.desktop})`,\r\n  desktopL: `(max-width: ${size.desktop})`\r\n};\r\n","import EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { postReq } from \"api\";\r\n\r\n// STATIC SINGLETON\r\nexport const ChannelEvents = {\r\n  ADD_CHANNEL_ANY: \"AddChannelAny\",\r\n  ADD_CHANNEL_SELF: \"AddChannelSelf\",\r\n  UPDATE_CHANNEL_ANY: \"UpdateChannelAny\",\r\n  UPDATE_CHANNEL_SELF: \"UpdateChannelSelf\",\r\n  SUBSCRIBER_ANY_CHANNEL: \"SubscriberAnyChannel\",\r\n  SUBSCRIBER_SELF_CHANNEL: \"SubscriberSelfChannel\",\r\n  UNSUBSCRIBER_ANY_CHANNEL: \"UnsubscriberAnyChannel\",\r\n  UNSUBSCRIBER_SELF_CHANNEL: \"UnsubscriberSelfChannel\",\r\n};\r\n\r\nexport default class ChannelsDataStore {\r\n  static instance = ChannelsDataStore.instance || new ChannelsDataStore();\r\n\r\n  state = {\r\n    channelsCount: -1,\r\n    channelsMeta: {},\r\n    channelsJson: {},\r\n    subscribers: {},\r\n\r\n    callbacks: [],\r\n\r\n    account: null,\r\n    epnsReadProvider: null,\r\n    epnsCommReadProvider: null,\r\n  };\r\n\r\n  // init\r\n  init = (account, epnsReadProvider, epnsCommReadProvider) => {\r\n    // set account\r\n    this.state.account = account;\r\n\r\n    // First attach listeners then overwrite the old one if any\r\n    this.resetChannelsListeners();\r\n    this.state.epnsReadProvider = epnsReadProvider;\r\n    this.state.epnsCommReadProvider = epnsCommReadProvider;\r\n    this.initChannelsListenersAsync();\r\n\r\n    // next get store channels count\r\n    this.getChannelsCountAsync();\r\n  };\r\n\r\n  // RESET LISTENERS\r\n  resetChannelsListeners = () => {\r\n    // only proceed if a read provider is attached\r\n    if (this.state.epnsReadProvider) {\r\n      this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\r\n      this.state.epnsReadProvider.removeAllListeners(\"UpdateChannel\");\r\n      this.state.epnsCommReadProvider.removeAllListeners(\"Subscribe\");\r\n      this.state.epnsCommReadProvider.removeAllListeners(\"Unsubscribe\");\r\n    }\r\n  };\r\n\r\n  // init LISTENERS\r\n  initChannelsListenersAsync = async () => {\r\n    // Add Listeners\r\n    await this.listenForAddChannelAnyAsync();\r\n    await this.listenForAddChannelSelfAsync();\r\n\r\n    await this.listenForUpdateChannelAnyAsync();\r\n    await this.listenForUpdateChannelSelfAsync();\r\n\r\n    // use the communicator contract for the below\r\n    await this.listenForSubscribeAnyAsync();\r\n    await this.listenForSubscribeSelfAsync();\r\n    await this.listenForUnsubscribeAnyAsync();\r\n    await this.listenForUnsubscribeSelfAsync();\r\n  };\r\n\r\n  // 1. Add Any Channel Listeners\r\n  listenForAddChannelAnyAsync = async () => {\r\n    const contract = this.state.epnsReadProvider;\r\n    let filter = contract.filters.AddChannel(null, null);\r\n\r\n    contract.on(filter, async (channel, ipfs) => {\r\n      // Do own stuff\r\n      await this.incrementChannelsCountAsync(1);\r\n\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, ipfs);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // 2. Add Self Channel Listener\r\n  listenForAddChannelSelfAsync = async () => {\r\n    const contract = this.state.epnsReadProvider;\r\n    let filter = contract.filters.AddChannel(this.state.account, null);\r\n\r\n    contract.on(filter, async (channel, ipfs) => {\r\n      // Do own stuff\r\n      // Nothing to do, just do callback\r\n\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, ipfs);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // 3. Update Any Channel Listener\r\n  listenForUpdateChannelAnyAsync = async () => {\r\n    const contract = this.state.epnsReadProvider;\r\n    let filter = contract.filters.UpdateChannel(null, null);\r\n\r\n    contract.on(filter, async (channel, ipfs) => {\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, ipfs);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // 4. Update Self Channel Listener\r\n  listenForUpdateChannelSelfAsync = async () => {\r\n    const contract = this.state.epnsReadProvider;\r\n    let filter = contract.filters.UpdateChannel(this.state.account, null);\r\n\r\n    contract.on(filter, async (channel, ipfs) => {\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, ipfs);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // 5. Subscriber Any\r\n  listenForSubscribeAnyAsync = async () => {\r\n    const contract = this.state.epnsCommReadProvider;\r\n    let filter = contract.filters.Subscribe(null, null);\r\n\r\n    contract.on(filter, async (channel, user) => {\r\n      //   // Do own stuff\r\n      //   if (this.state.channelsMeta[channel]) {\r\n      //     const channelID = this.state.channelsMeta[channel];\r\n      //     let count = this.state.channelsMeta[channelID].memberCount.toNumber();\r\n      //     count = count + 1;\r\n      //     this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\r\n      //   }\r\n\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, user);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // 6. Subscriber Self\r\n  listenForSubscribeSelfAsync = async () => {\r\n    const contract = this.state.epnsCommReadProvider;\r\n    let filter = contract.filters.Subscribe(this.state.account, null);\r\n\r\n    contract.on(filter, async (channel, user) => {\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, user);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // 7. Unsubscribe Any\r\n  listenForUnsubscribeAnyAsync = async () => {\r\n    const contract = this.state.epnsCommReadProvider;\r\n    let filter = contract.filters.Unsubscribe(null, null);\r\n\r\n    contract.on(filter, async (channel, user) => {\r\n      // Do own stuff\r\n      // if (this.state.channelsMeta[channel]) {\r\n      //   const channelID = this.state.channelsMeta[channel];\r\n      //   let count = this.state.channelsMeta[channelID].memberCount.toNumber();\r\n      //   count = count - 1;\r\n      //   this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\r\n      // }\r\n\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, user);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // 8. Unsubscribe Self\r\n  listenForUnsubscribeSelfAsync = async () => {\r\n    const contract = this.state.epnsCommReadProvider;\r\n    let filter = contract.filters.Unsubscribe(this.state.account, null);\r\n\r\n    contract.on(filter, async (channel, user) => {\r\n      // then perform callbacks\r\n      if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL]) {\r\n        for (let [callbackID, callback] of Object.entries(\r\n          this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL]\r\n        )) {\r\n          if (callback) {\r\n            callback(channel, user);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // FOR CALLBACKS\r\n  addCallbacks = (callbackType, callbackID, callback) => {\r\n    // first check if callback already exists\r\n    if (!this.state.callbacks[callbackType]) {\r\n      this.state.callbacks[callbackType] = {};\r\n    }\r\n\r\n    if (!this.state.callbacks[callbackType][callbackID]) {\r\n      this.state.callbacks[callbackType][callbackID] = callback;\r\n    }\r\n  };\r\n\r\n  removeCallbacks = (callbackType, callbackID) => {\r\n    // first check if callback already exists\r\n    if (this.state.callbacks[callbackType][callbackID]) {\r\n      this.state.callbacks[callbackType][callbackID] = null;\r\n    }\r\n  };\r\n\r\n  // CHANNELS COUNT\r\n  getChannelsCountAsync = async () => {\r\n    const enableLogs = 0;\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n      if (this.state.channelsCount == -1) {\r\n        // Count not set, get and set it first\r\n        const count = EPNSCoreHelper.getTotalNumberOfChannels(\r\n          this.state.epnsReadProvider\r\n        )\r\n          .then((response) => {\r\n            this.state.channelsCount = response;\r\n\r\n            if (enableLogs)\r\n              console.log(\"getChannelsCountAsync() --> %o\", response);\r\n            resolve(this.state.channelsCount);\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"!!!Error, getChannelsCountAsync() --> %o\", err);\r\n            reject(err);\r\n          });\r\n      } else {\r\n        resolve(this.state.channelsCount);\r\n      }\r\n    });\r\n  };\r\n\r\n  incrementChannelsCountAsync = async (incrementCount) => {\r\n    return new Promise((resolve, reject) => {\r\n      this.getChannelsCountAsync()\r\n        .then((response) => {\r\n          this.state.channelsCount = response + incrementCount;\r\n          console.log(\r\n            \"incrementChannelsCountAsync() --> %d\",\r\n            this.state.channelsCount\r\n          );\r\n          resolve(this.state.channelsCount);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"!!!Error, incrementChannelsCountAsync() --> %o\", err);\r\n          reject(err);\r\n        });\r\n    });\r\n  };\r\n  /**\r\n   * Get paginated channel information\r\n   * @param {Number} startIndex the number of channels viewed so far e.g 50\r\n   * @param {Number} pageCount the number of items per page we want\r\n   * @returns \r\n   */\r\n  getChannelFromApi = async (startIndex, pageCount) => {\r\n    return postReq(\"/channels/fetch_channels\", {\r\n      page: Math.ceil(startIndex / pageCount) || 1,\r\n      pageSize: pageCount,\r\n      op: \"write\",\r\n    }).then((response) => {\r\n      const output = response.data.results.map(({channel}) => ({addr: channel}));\r\n      return output;\r\n    });\r\n  };\r\n  // CHANNELS META FUNCTIONS\r\n  // To get channels meta\r\n  // get channels meta in a paginated format\r\n  // by passing in the starting index and the number of items per page\r\n  getChannelsMetaAsync = async (startIndex, pageCount) => {\r\n    this.getChannelFromApi(startIndex, pageCount)\r\n    return new Promise(async (resolve, reject) => {\r\n      // get total number of channels\r\n      const channelsCount = await this.getChannelsCountAsync();\r\n      let stopIndex = startIndex + pageCount;\r\n\r\n      // if the stop index is -1 then get all channels\r\n      if (stopIndex == -1 || stopIndex > channelsCount) {\r\n        stopIndex = channelsCount;\r\n      }\r\n\r\n      // initialise an array with the values from 0 to the length of the number of channels\r\n      let channelIDs = [];\r\n\r\n      for (let i = startIndex; i < stopIndex; i++) {\r\n        channelIDs.push(i);\r\n      }\r\n      console.log({ channelIDs });\r\n\r\n      const promises = channelIDs.map(async (channelID) => {\r\n        // Match the cache\r\n        return this.getChannelMetaAsync(channelID)\r\n          .then((response) => response)\r\n          .catch((err) =>\r\n            console.log(\r\n              \"!!!Error (but skipping), getChannelMetaAsync() --> %o\",\r\n              err\r\n            )\r\n          );\r\n      });\r\n\r\n      // wait until all promises are resolved\r\n      const channelMetaData = await Promise.all(promises);\r\n\r\n      // return channels meta\r\n      // console.log(\"getChannelsMetaAsync(From %d to %d) --> %o\", startIndex, stopIndex, channelMetaData);\r\n      resolve(channelMetaData);\r\n    });\r\n  };\r\n\r\n  // To get a single channel meta via id\r\n  getChannelMetaAsync = async (channelID) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (this.state.channelsMeta[channelID]) {\r\n        console.log(\r\n          \"getChannelMetaAsync() [CACHED] --> %o\",\r\n          this.state.channelsMeta[channelID]\r\n        );\r\n        resolve(this.state.channelsMeta[channelID]);\r\n      } else {\r\n        let channelAddress;\r\n\r\n        await EPNSCoreHelper.getChannelAddressFromID(\r\n          channelID,\r\n          this.state.epnsReadProvider\r\n        )\r\n          .then(async (response) => {\r\n            channelAddress = response;\r\n            await this.getChannelMetaViaAddressAsync(channelAddress).then(\r\n              (response) => {\r\n                // update the channel cache before resolving\r\n                this.state.channelsMeta[channelID] = response;\r\n                this.state.channelsMeta[channelAddress] = channelID;\r\n\r\n                // resolve\r\n                // console.log(\"getChannelMetaAsync() [Address: %s] --> %o\", channelAddress, response);\r\n                resolve(response);\r\n              }\r\n            );\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"!!!Error, getChannelMetaAsync() --> %o\", err);\r\n            reject(err);\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  // To get a single channel meta via address\r\n  getChannelMetaViaAddressAsync = async (channelAddress) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (this.state.channelsMeta[channelAddress]) {\r\n        const channelID = this.state.channelsMeta[channelAddress];\r\n\r\n        console.log(\r\n          \"getChannelMetaViaAddressAsync() [CACHED] --> %o\",\r\n          this.state.channelsMeta[channelID]\r\n        );\r\n        resolve(this.state.channelsMeta[channelID]);\r\n      } else {\r\n        // Can't cache this :(, no way to know channel id\r\n        await EPNSCoreHelper.getChannelInfo(\r\n          channelAddress,\r\n          this.state.epnsReadProvider\r\n        )\r\n          .then((response) => {\r\n            // resolve\r\n            // console.log(\"getChannelMetaViaAddressAsync() [Address: %s] --> %o\", channelAddress, response);\r\n            resolve(response);\r\n          })\r\n          .catch((err) => {\r\n            console.log(\r\n              \"!!!Error, getChannelMetaViaAddressAsync() --> %o\",\r\n              err\r\n            );\r\n            reject(err);\r\n          });\r\n      }\r\n    });\r\n  };\r\n  \r\n  optInCache = async (channelAddress, userAddress) => {\r\n    const cachedSubscribers = [...this.state.subscribers[channelAddress]];\r\n    if (!cachedSubscribers) return;\r\n    this.state.subscribers[channelAddress] = [\r\n      ...cachedSubscribers,\r\n      userAddress,\r\n    ];\r\n    return cachedSubscribers;\r\n  };\r\n\r\n  optOutCache = async (channelAddress, userAddress) => {\r\n    const cachedSubscribers = [...this.state.subscribers[channelAddress]];\r\n    if (!cachedSubscribers) return;\r\n    this.state.subscribers[channelAddress] = cachedSubscribers.filter(\r\n      (sub) => sub != userAddress\r\n    );\r\n    return cachedSubscribers;\r\n  };\r\n\r\n  getChannelSubscribers = async (channelAddress) => {\r\n    const cachedSubscribers = this.state.subscribers[channelAddress];\r\n    if (cachedSubscribers) {\r\n      return cachedSubscribers;\r\n    }\r\n    return postReq(\"/channels/get_subscribers\", {\r\n      channel: channelAddress,\r\n      op: \"read\",\r\n    })\r\n      .then(({ data }) => {\r\n        const subs = data.subscribers;\r\n        this.state.subscribers[channelAddress] = subs;\r\n        return subs;\r\n      })\r\n      .catch((err) => {\r\n        console.log(`getChannelSubscribers => ${err.message}`);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  // CHANNELS INFO FUNCTIONS\r\n  // To get a single channel meta via id\r\n  getChannelJsonAsync = async (channelAddress) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (this.state.channelsJson[channelAddress]) {\r\n        // console.log(\"getChannelJsonAsync() [CACHED] --> %o\", this.state.channelsJson[channelAddress]);\r\n        resolve(this.state.channelsJson[channelAddress]);\r\n      } else {\r\n        await EPNSCoreHelper.getChannelJsonFromChannelAddress(\r\n          channelAddress,\r\n          this.state.epnsReadProvider\r\n        )\r\n          .then((response) => {\r\n            // First set the cache\r\n            this.state.channelsJson[channelAddress] = response;\r\n\r\n            // resolve\r\n            // console.log(\"getChannelJsonAsync() [Address: %s] --> %o\", channelAddress, response);\r\n            resolve(response);\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"!!!Error, getChannelJsonAsync() --> %o\", err);\r\n            reject(err);\r\n          });\r\n      }\r\n    });\r\n  };\r\n}\r\n","/**\r\n * This file helps us maintain the channels fetched in state, such that when we leave the tab, the channels can be fetched from memory\r\n */\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  CHANNNEL_DEACTIVATED_STATE: 2,\r\n  CHANNEL_BLOCKED_STATE: 3,\r\n  CHANNEL_ACTIVE_STATE: 1,\r\n  CHANNEL_BLACKLIST: [], //a list of channels\r\n  page: 0,\r\n  channels: [], // the channels meta-data\r\n  channelsCache: {}, // a mapping of channel address to channel details\r\n};\r\n\r\nexport const contractSlice = createSlice({\r\n  name: \"channels\",\r\n  initialState,\r\n  reducers: {\r\n    setChannelMeta: (state, action) => {\r\n      state.channels = action.payload;\r\n    },\r\n    incrementPage: (state) => {\r\n      state.page += 1;\r\n    },\r\n    cacheChannelInfo: (state, action) => {\r\n      const { address, meta } = action.payload;\r\n      state.channelsCache[address] = meta;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {\r\n  setChannelMeta,\r\n  incrementPage,\r\n  cacheChannelInfo,\r\n} = contractSlice.actions;\r\n\r\nexport default contractSlice.reducer;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { Device } from \"assets/Device\";\r\n\r\nimport { toast as toaster } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Skeleton from \"@yisheng90/react-loading\";\r\nimport { IoMdPeople } from \"react-icons/io\";\r\nimport { GoVerified } from \"react-icons/go\";\r\nimport { FaRegAddressCard } from \"react-icons/fa\";\r\nimport { AiTwotoneCopy } from \"react-icons/ai\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { postReq } from \"api\";\r\nimport NotificationToast from \"components/NotificationToast\";\r\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\r\nimport { cacheChannelInfo } from \"redux/slices/channelSlice\";\r\n\r\n// Create Header\r\nfunction ViewChannelItem({ channelObjectProp }) {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    epnsReadProvider,\r\n    epnsWriteProvider,\r\n    epnsCommReadProvider,\r\n    pushAdminAddress,\r\n    ZERO_ADDRESS,\r\n  } = useSelector((state) => state.contracts);\r\n  const { canVerify } = useSelector((state) => state.admin);\r\n  const { channelsCache, CHANNEL_BLACKLIST } = useSelector(\r\n    (state) => state.channels\r\n  );\r\n  const { account, library, chainId } = useWeb3React();\r\n  const isOwner = channelObjectProp.addr === account;\r\n\r\n  const [channelObject, setChannelObject] = React.useState({});\r\n  const [channelJson, setChannelJson] = React.useState({});\r\n  const [subscribed, setSubscribed] = React.useState(true);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [memberCount, setMemberCount] = React.useState(0);\r\n  const [isPushAdmin, setIsPushAdmin] = React.useState(false);\r\n  const [isVerified, setIsVerified] = React.useState(false);\r\n  const [isBlocked, setIsBlocked] = React.useState(false);\r\n  const [vLoading, setvLoading] = React.useState(false);\r\n  const [bLoading, setBLoading] = React.useState(false);\r\n  const [txInProgress, setTxInProgress] = React.useState(false);\r\n  const [canUnverify, setCanUnverify] = React.useState(false);\r\n  const [verifierDetails, setVerifierDetails] = React.useState(null);\r\n  const [copyText, setCopyText] = React.useState(null);\r\n\r\n  // ------ toast related section\r\n  const isChannelBlacklisted = CHANNEL_BLACKLIST.includes(channelObject.addr);\r\n  const [toast, showToast] = React.useState(null);\r\n  const clearToast = () => showToast(null);\r\n\r\n  //clear toast variable after it is shown\r\n  React.useEffect(() => {\r\n    if (toast) {\r\n      clearToast();\r\n    }\r\n  }, [toast]);\r\n  // ------ toast related section\r\n\r\n  React.useEffect(() => {\r\n    if (!channelObject.addr) return;\r\n    if (channelObject.verifiedBy) {\r\n      // procced as usual\r\n      fetchChannelJson().catch((err) => alert(err.message));\r\n      setIsBlocked(\r\n        channelObject.channelState === 3 || channelObject.channelState === 2 //dont display channel if blocked //dont display channel if deactivated\r\n      );\r\n    } else {\r\n      // if this key (verifiedBy) is not present it means we are searching and should fetch the channel object from chain again\r\n      epnsReadProvider.channels(channelObject.addr).then((response) => {\r\n        setChannelObject({ ...response, addr: channelObject.addr });\r\n        fetchChannelJson();\r\n      });\r\n    }\r\n  }, [account, channelObject, chainId]);\r\n\r\n  React.useEffect(() => {\r\n    if (!channelObjectProp) return;\r\n    setChannelObject(channelObjectProp);\r\n  }, [channelObjectProp]);\r\n\r\n  React.useEffect(() => {\r\n    if (!isVerified || channelObject?.verifiedBy === ZERO_ADDRESS) return;\r\n    ChannelsDataStore.instance\r\n      .getChannelJsonAsync(channelObject.verifiedBy)\r\n      .then((verifierDetails) => {\r\n        setVerifierDetails(verifierDetails);\r\n      })\r\n      .catch((err) => {\r\n        console.log(channelObject.verifiedBy, err);\r\n      });\r\n  }, [isVerified, channelObject]);\r\n\r\n  const EPNS_DOMAIN = {\r\n    name: \"EPNS COMM V1\",\r\n    chainId: chainId,\r\n    verifyingContract: epnsCommReadProvider.address,\r\n  };\r\n  // to fetch channels\r\n  const fetchChannelJson = async () => {\r\n    try {\r\n      let channelJson = {};\r\n      setCopyText(channelObject.addr);\r\n      if (channelsCache[channelObject.addr]) {\r\n        channelJson = channelsCache[channelObject.addr];\r\n      } else {\r\n        channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(\r\n          channelObject.addr\r\n        );\r\n        dispatch(\r\n          cacheChannelInfo({\r\n            address: channelObject.addr,\r\n            meta: channelJson,\r\n          })\r\n        );\r\n      }\r\n      const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(channelObject.addr);\r\n      const subscribed = channelSubscribers.find((sub) => {\r\n        return sub.toLowerCase() === account.toLowerCase();\r\n      });\r\n\r\n      setIsPushAdmin(pushAdminAddress === account);\r\n      setMemberCount(channelSubscribers.length);\r\n      setSubscribed(subscribed);\r\n      setChannelJson({ ...channelJson, addr: channelObject.addr });\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setIsBlocked(true);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if(!channelObject) return;\r\n    setIsVerified(\r\n      Boolean(\r\n        (channelObject.verifiedBy &&\r\n          channelObject.verifiedBy !== ZERO_ADDRESS) ||\r\n          channelObject.addr === pushAdminAddress\r\n      )\r\n    );\r\n    setCanUnverify(channelObject.verifiedBy == account);\r\n  }, [channelObject]);\r\n\r\n  // toast customize\r\n  const LoaderToast = ({ msg, color }) => (\r\n    <Toaster>\r\n      <Loader type=\"Oval\" color={color} height={30} width={30} />\r\n      <ToasterMsg>{msg}</ToasterMsg>\r\n    </Toaster>\r\n  );\r\n\r\n  // to subscribe\r\n  const subscribe = async () => {\r\n    subscribeAction(false);\r\n  };\r\n  const formatAddress = (addressText) => {\r\n    return addressText.length > 40\r\n      ? `${addressText.slice(0, 4)}....${addressText.slice(36)}`\r\n      : addressText;\r\n  };\r\n\r\n  // Toastify\r\n  let notificationToast = () =>\r\n    toaster.dark(<LoaderToast msg=\"Preparing Notification\" color=\"#fff\" />, {\r\n      position: \"bottom-right\",\r\n      autoClose: false,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n  const verifyChannel = () => {\r\n    setvLoading(true);\r\n    // post op\r\n    epnsWriteProvider\r\n      .verifyChannel(channelObject.addr)\r\n      .then(async (tx) => {\r\n        console.log(tx);\r\n        console.log(\"Transaction Sent!\");\r\n\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transaction sent\",\r\n          type: toaster.TYPE.INFO,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        await tx.wait(1);\r\n        console.log (\"Transaction Mined!\");\r\n        setIsVerified(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"!!!Error verifyChannel() --> %o\", err);\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transacion Failed: \" + err.error?.message || \"Unknown Error\",\r\n          type: toaster.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setvLoading(false);\r\n      });\r\n  };\r\n\r\n  const unverifyChannel = () => {\r\n    setvLoading(true);\r\n    epnsWriteProvider\r\n      .unverifyChannel(channelObject.addr)\r\n      .then(async (tx) => {\r\n        console.log(tx);\r\n        console.log(\"Transaction Sent!\");\r\n\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transaction sent\",\r\n          type: toaster.TYPE.INFO,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        await tx.wait(1);\r\n        console.log(\"Transaction Mined!\");\r\n        setIsVerified(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"!!!Error handleSendMessage() --> %o\", err);\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transacion Failed: \" + err.error?.message || \"Unknown Error\",\r\n          type: toaster.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n      });\r\n    setvLoading(false);\r\n  };\r\n  const blockChannel = () => {\r\n    setBLoading(true);\r\n    epnsWriteProvider\r\n      .blockChannel(channelObject.addr)\r\n      .then(async (tx) => {\r\n        console.log(tx);\r\n        console.log(\"Transaction Sent!\");\r\n\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transaction Sent\",\r\n          type: toaster.TYPE.INFO,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        // await tx.wait(1);\r\n        // console.log (\"Transaction Mined!\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"!!!Error handleSendMessage() --> %o\", err);\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transacion Failed: \" + err.error.message,\r\n          type: toaster.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n      })\r\n      .finally(() => {\r\n        // post op\r\n        setBLoading(false);\r\n        setIsBlocked(true);\r\n      });\r\n  };\r\n\r\n  const subscribeAction = async () => {\r\n    setTxInProgress(true);\r\n    let txToast;\r\n    try {\r\n      const type = {\r\n        Subscribe: [\r\n          { name: \"channel\", type: \"address\" },\r\n          { name: \"subscriber\", type: \"address\" },\r\n          { name: \"action\", type: \"string\" },\r\n        ],\r\n      };\r\n      const message = {\r\n        channel: channelObject.addr,\r\n        subscriber: account,\r\n        action: \"Subscribe\",\r\n      };\r\n\r\n      const signature = await library\r\n        .getSigner(account)\r\n        ._signTypedData(EPNS_DOMAIN, type, message);\r\n      txToast = toaster.dark(\r\n        <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\r\n        {\r\n          position: \"bottom-right\",\r\n          autoClose: false,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        }\r\n      );\r\n\r\n      postReq(\"/channels/subscribe_offchain\", {\r\n        signature,\r\n        message,\r\n        op: \"write\",\r\n        chainId,\r\n        contractAddress: epnsCommReadProvider.address,\r\n      }).then((res) => {\r\n        setSubscribed(true);\r\n        setMemberCount(memberCount + 1);\r\n        toaster.update(txToast, {\r\n          render: \"Successfully opted into channel !\",\r\n          type: toaster.TYPE.SUCCESS,\r\n          autoClose: 5000,\r\n        });\r\n        ChannelsDataStore.instance.optInCache(channelObject.addr, account);\r\n        setTxInProgress(false);\r\n      });\r\n    } catch (err) {\r\n      toaster.update(txToast, {\r\n        render: \"There was an error opting into channel (\" + err.message + \")\",\r\n        type: toaster.TYPE.ERROR,\r\n        autoClose: 5000,\r\n      });\r\n      console.log(err);\r\n    } finally {\r\n      setTxInProgress(false);\r\n    }\r\n  };\r\n\r\n  const copyToClipboard = (url) => {\r\n    // fallback for non navigator browser support\r\n    if (navigator && navigator.clipboard) {\r\n      navigator.clipboard.writeText(url);\r\n    } else {\r\n      const el = document.createElement(\"textarea\");\r\n      el.value = url;\r\n      document.body.appendChild(el);\r\n      el.select();\r\n      document.execCommand(\"copy\");\r\n      document.body.removeChild(el);\r\n    }\r\n  };\r\n\r\n  const unsubscribeAction = async () => {\r\n    let txToast;\r\n    try {\r\n      const type = {\r\n        Unsubscribe: [\r\n          { name: \"channel\", type: \"address\" },\r\n          { name: \"unsubscriber\", type: \"address\" },\r\n          { name: \"action\", type: \"string\" },\r\n        ],\r\n      };\r\n      const message = {\r\n        channel: channelObject.addr,\r\n        unsubscriber: account,\r\n        action: \"Unsubscribe\",\r\n      };\r\n      const signature = await library\r\n        .getSigner(account)\r\n        ._signTypedData(EPNS_DOMAIN, type, message);\r\n\r\n      txToast = toaster.dark(\r\n        <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\r\n        {\r\n          position: \"bottom-right\",\r\n          autoClose: false,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        }\r\n      );\r\n\r\n      postReq(\"/channels/unsubscribe_offchain\", {\r\n        signature,\r\n        message,\r\n        op: \"write\",\r\n        chainId,\r\n        contractAddress: epnsCommReadProvider.address,\r\n      })\r\n        .then((res) => {\r\n          setSubscribed(false);\r\n          setMemberCount(memberCount - 1);\r\n          ChannelsDataStore.instance.optOutCache(channelObject.addr, account);\r\n          toaster.update(txToast, {\r\n            render: \"Successfully opted out of channel !\",\r\n            type: toaster.TYPE.SUCCESS,\r\n            autoClose: 5000,\r\n          });\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          toaster.update(txToast, {\r\n            render:\r\n              \"There was an error opting into channel (\" + err.message + \")\",\r\n            type: toaster.TYPE.ERROR,\r\n            autoClose: 5000,\r\n          });\r\n          console.log(err);\r\n        })\r\n        .finally(() => {\r\n          setTxInProgress(false);\r\n        });\r\n    } finally {\r\n      setTxInProgress(false);\r\n    }\r\n  };\r\n\r\n  if (isBlocked) return <></>;\r\n  if (isChannelBlacklisted) return <></>;\r\n\r\n  // render\r\n  return (\r\n    <Container key={channelObject.addr}>\r\n      <ChannelLogo>\r\n        <ChannelLogoOuter>\r\n          <ChannelLogoInner>\r\n            {loading ? (\r\n              <Skeleton color=\"#eee\" height=\"100%\" />\r\n            ) : (\r\n              <ChannelLogoImg src={`${channelJson.icon}`} />\r\n            )}\r\n          </ChannelLogoInner>\r\n        </ChannelLogoOuter>\r\n      </ChannelLogo>\r\n\r\n      <ChannelInfo>\r\n        <ChannelTitle>\r\n          {loading ? (\r\n            <Skeleton color=\"#eee\" width=\"50%\" height={24} />\r\n          ) : (\r\n            <ChannelTitleLink\r\n              href={channelJson.url}\r\n              target=\"_blank\"\r\n              rel=\"nofollow\"\r\n            >\r\n              {channelJson.name}\r\n              {isVerified && (\r\n                <Subscribers style={{ display: \"inline\", marginLeft: \"8px\" }}>\r\n                  <GoVerified size={18} color=\"#35c4f3\" />\r\n                </Subscribers>\r\n              )}\r\n            </ChannelTitleLink>\r\n          )}\r\n        </ChannelTitle>\r\n\r\n        <ChannelDesc>\r\n          {loading ? (\r\n            <>\r\n              <SkeletonWrapper atH={5} atW={100}>\r\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\r\n              </SkeletonWrapper>\r\n\r\n              <SkeletonWrapper atH={5} atW={100}>\r\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\r\n              </SkeletonWrapper>\r\n\r\n              <SkeletonWrapper atH={5} atW={100}>\r\n                <Skeleton color=\"#eee\" width=\"40%\" height={5} />\r\n              </SkeletonWrapper>\r\n            </>\r\n          ) : (\r\n            <ChannelDescLabel>{channelJson.info}</ChannelDescLabel>\r\n          )}\r\n        </ChannelDesc>\r\n\r\n        <ChannelMeta>\r\n          {loading ? (\r\n            <>\r\n              <SkeletonWrapper atH={10} atW={30} marginBottom=\"0\">\r\n                <Skeleton />\r\n              </SkeletonWrapper>\r\n            </>\r\n          ) : (\r\n            <ColumnFlex>\r\n              <FlexBox style={{ marginBottom: \"10px\" }}>\r\n                <Subscribers>\r\n                  <IoMdPeople size={20} color=\"#ccc\" />\r\n                  <SubscribersCount>{memberCount?.toLocaleString()}</SubscribersCount>\r\n                </Subscribers>\r\n\r\n                <Subscribers style={{ marginLeft: \"10px\" }}>\r\n                  <FaRegAddressCard size={20} color=\"#ccc\" />\r\n                  <SubscribersCount\r\n                    onClick={() => {\r\n                      copyToClipboard(channelJson.addr);\r\n                      setCopyText(\"copied\");\r\n                    }}\r\n                    onMouseEnter={() => {\r\n                      setCopyText(\"click to copy\");\r\n                    }}\r\n                    onMouseLeave={() => {\r\n                      setCopyText(channelJson.addr);\r\n                    }}\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    <AiTwotoneCopy />\r\n                    {formatAddress(copyText)}\r\n                  </SubscribersCount>\r\n                </Subscribers>\r\n              </FlexBox>\r\n              {verifierDetails && (\r\n                <Subscribers>\r\n                  <VerifiedBy>Verified by:</VerifiedBy>\r\n                  <VerifierIcon src={verifierDetails.icon} />\r\n                  <VerifierName>{verifierDetails.name}</VerifierName>\r\n                </Subscribers>\r\n              )}\r\n            </ColumnFlex>\r\n          )}\r\n        </ChannelMeta>\r\n      </ChannelInfo>\r\n      {!!account && !!library && (\r\n        <>\r\n          <LineBreak />\r\n          <ChannelActions>\r\n            {loading && (\r\n              <SkeletonButton>\r\n                <Skeleton />\r\n              </SkeletonButton>\r\n            )}\r\n            {!loading && isPushAdmin && (\r\n              <SubscribeButton onClick={blockChannel} disabled={bLoading}>\r\n                {bLoading && (\r\n                  <ActionLoader>\r\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\r\n                  </ActionLoader>\r\n                )}\r\n                <ActionTitle hideit={bLoading}>Block channel</ActionTitle>\r\n              </SubscribeButton>\r\n            )}\r\n            {!loading && (isPushAdmin || canVerify) && !isVerified && (\r\n              <SubscribeButton onClick={verifyChannel} disabled={vLoading}>\r\n                {vLoading && (\r\n                  <ActionLoader>\r\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\r\n                  </ActionLoader>\r\n                )}\r\n                <ActionTitle hideit={vLoading}>Verify Channel</ActionTitle>\r\n              </SubscribeButton>\r\n            )}\r\n            {!loading && (isPushAdmin || canUnverify) && isVerified && (\r\n              <UnsubscribeButton onClick={unverifyChannel} disabled={vLoading}>\r\n                {vLoading && (\r\n                  <ActionLoader>\r\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\r\n                  </ActionLoader>\r\n                )}\r\n                <ActionTitle hideit={vLoading}>Unverify Channel</ActionTitle>\r\n              </UnsubscribeButton>\r\n            )}\r\n            {!loading && !subscribed && (\r\n              <SubscribeButton onClick={subscribe} disabled={txInProgress}>\r\n                {txInProgress && (\r\n                  <ActionLoader>\r\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\r\n                  </ActionLoader>\r\n                )}\r\n                <ActionTitle hideit={txInProgress}>Opt-In</ActionTitle>\r\n              </SubscribeButton>\r\n            )}\r\n            {!loading && subscribed && (\r\n              <>\r\n                {isOwner && <OwnerButton disabled>Owner</OwnerButton>}\r\n                {!isOwner && (\r\n                  <UnsubscribeButton\r\n                    onClick={unsubscribeAction}\r\n                    disabled={txInProgress}\r\n                  >\r\n                    {txInProgress && (\r\n                      <ActionLoader>\r\n                        <Loader\r\n                          type=\"Oval\"\r\n                          color=\"#FFF\"\r\n                          height={16}\r\n                          width={16}\r\n                        />\r\n                      </ActionLoader>\r\n                    )}\r\n                    <ActionTitle hideit={txInProgress}>Opt-Out</ActionTitle>\r\n                  </UnsubscribeButton>\r\n                )}\r\n              </>\r\n            )}\r\n          </ChannelActions>\r\n        </>\r\n      )}\r\n      {toast && (\r\n        <NotificationToast notification={toast} clearToast={clearToast} />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst FlexBox = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst ColumnFlex = styled(FlexBox)`\r\n  flex-direction: column;\r\n`;\r\n// css styles\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  border: 1px solid rgb(237, 237, 237);\r\n\r\n  margin: 15px 0px;\r\n  justify-content: center;\r\n  padding: 20px 10px;\r\n`;\r\n\r\nconst SkeletonWrapper = styled.div`\r\n  overflow: hidden;\r\n  width: ${(props) => props.atW + \"%\" || \"100%\"};\r\n  height: ${(props) => props.atH}px;\r\n  border-radius: ${(props) => props.borderRadius || 10}px;\r\n  margin-bottom: ${(props) => props.marginBottom || 5}px;\r\n  margin-right: ${(props) => props.marginRight || 0}px;\r\n`;\r\n\r\nconst ChannelLogo = styled.div`\r\n  max-width: 100px;\r\n  min-width: 32px;\r\n  flex: 1;\r\n  margin: 5px;\r\n  padding: 10px;\r\n  border: 2px solid #fafafa;\r\n  overflow: hidden;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-self: flex-start;\r\n`;\r\n\r\nconst ChannelLogoOuter = styled.div`\r\n  padding-top: 100%;\r\n  position: relative;\r\n`;\r\n\r\nconst ChannelLogoInner = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  overflow: hidden;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ChannelLogoImg = styled.img`\r\n  object-fit: contain;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ChannelInfo = styled.div`\r\n  flex: 1;\r\n  margin: 5px 10px;\r\n  min-width: 120px;\r\n  flex-grow: 4;\r\n  flex-direction: column;\r\n  display: flex;\r\n`;\r\n\r\nconst ChannelTitle = styled.div`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ChannelTitleLink = styled.a`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  color: #e20880;\r\n  font-size: 20px;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`;\r\n\r\nconst VerifiedBy = styled.span`\r\n  color: #ec008c;\r\n  font-size: 16px;\r\n  line-height: 20px;\r\n  letter-spacing: 0.05em;\r\n  font-weight: 600;\r\n  display: inline-block;\r\n`;\r\n\r\nconst VerifierIcon = styled.img`\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  margin-left: 6px;\r\n  margin-right: 4px;\r\n`;\r\nconst VerifierName = styled.span`\r\n  font-weight: 400;\r\n  color: black;\r\n  font-size: 16px;\r\n  letter-spacing: 0em;\r\n`;\r\n\r\nconst ChannelDesc = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  font-size: 14px;\r\n  color: rgba(0, 0, 0, 0.75);\r\n  font-weight: 400;\r\n  flex-direction: column;\r\n  margin-bottom: 30px\r\n`;\r\n\r\nconst ChannelDescLabel = styled.label`\r\n  flex: 1;\r\n`;\r\n\r\nconst ChannelMeta = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n  font-size: 13px;\r\n`;\r\n\r\nconst ChannelMetaBox = styled.label`\r\n  margin: 0px 5px;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  padding: 5px 10px;\r\n  display: flex;\r\n  border-radius: 10px;\r\n  font-size: 11px;\r\n  gap: 3px;\r\n`;\r\n\r\nconst Subscribers = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst SubscribersCount = styled(ChannelMetaBox)`\r\n  background: #35c4f3;\r\n  transition: 300ms;\r\n`;\r\n\r\nconst Pool = styled.div`\r\n  margin: 0px 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst PoolShare = styled(ChannelMetaBox)`\r\n  background: #674c9f;\r\n`;\r\n\r\nconst LineBreak = styled.div`\r\n  display: none;\r\n  flex-basis: 100%;\r\n  height: 0;\r\n\r\n  @media ${Device.tablet} {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst ChannelActions = styled.div`\r\n  margin: 5px;\r\n  flex-grow: 1;\r\n  // max-width: 250px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  // justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ChannelActionButton = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  ${(props) =>\r\n    props.disabled &&\r\n    css`\r\n      &:hover {\r\n        opacity: 1;\r\n        cursor: default;\r\n        pointer: default;\r\n      }\r\n      &:active {\r\n        opacity: 1;\r\n        cursor: default;\r\n        pointer: default;\r\n      }\r\n    `}\r\n`;\r\n\r\nconst ActionTitle = styled.span`\r\n  ${(props) =>\r\n    props.hideit &&\r\n    css`\r\n      visibility: hidden;\r\n    `};\r\n`;\r\n\r\nconst ActionLoader = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst SkeletonButton = styled.div`\r\n  border: 0;\r\n  outline: 0;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 10px;\r\n  border-radius: 5px;\r\n  flex: 1;\r\n`;\r\n\r\nconst SubscribeButton = styled(ChannelActionButton)`\r\n  background: #e20880;\r\n  min-width: 80px;\r\n`;\r\n\r\nconst UnsubscribeButton = styled(ChannelActionButton)`\r\n  background: #674c9f;\r\n  min-width: 80px;\r\n`;\r\n\r\nconst OwnerButton = styled(ChannelActionButton)`\r\n  background: #35c5f3;\r\n`;\r\n\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`;\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`;\r\n\r\n// Export Default\r\nexport default ViewChannelItem;\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport {Section, Content, Item, ItemH, Span, Anchor} from 'components/SharedStyling';\r\n\r\nimport { FaGasPump } from 'react-icons/fa';\r\n\r\n// Faucet URLs\r\nfunction Faucets() {\r\n  // render\r\n  return (\r\n    <Section margin=\"5px 0px 0px 0px\">\r\n      <Content>\r\n        <ItemH\r\n          self=\"flex-end\"\r\n          bg=\"#fff\"\r\n          radius=\"8px\"\r\n          padding=\"30px 10px 10px 10px\"\r\n          border=\"1px solid #ededed\"\r\n          overflow=\"hidden\"\r\n          align=\"stretch\"\r\n        >\r\n          <Span\r\n            pos=\"absolute\"\r\n            top=\"10px\"\r\n            right=\"0px\"\r\n            padding=\"5px 10px\"\r\n            bg=\"#e20880\"\r\n            color=\"#fff\"\r\n            size=\"12px\"\r\n            weight=\"600\"\r\n          >\r\n            Get Free Kovan Ether\r\n          </Span>\r\n\r\n          <Item margin=\"5px\">\r\n            <Anchor\r\n              direction=\"column\"\r\n              href=\"https://faucet.metamask.io/\"\r\n              target=\"_blank\"\r\n              rel=\"nofollow\"\r\n            >\r\n              <FaGasPump size={30} color=\"#674c9f\"/>\r\n              <Span\r\n                bg=\"#000\"\r\n                color=\"#fff\"\r\n                size=\"10px\"\r\n                weight=\"600\"\r\n                spacing=\"0.1em\"\r\n                textAlign=\"center\"\r\n                padding=\"5px 10px\"\r\n                margin=\"10px 0px 0px 0px\"\r\n                textTransform=\"uppercase\"\r\n                radius=\"8px\"\r\n              >\r\n                Metamask Faucet\r\n              </Span>\r\n            </Anchor>\r\n          </Item>\r\n          <Item margin=\"5px\">\r\n            <Anchor\r\n              direction=\"column\"\r\n              href=\"https://gitter.im/kovan-testnet/faucet\"\r\n              target=\"_blank\"\r\n              rel=\"nofollow\"\r\n            >\r\n              <FaGasPump size={30} color=\"#674c9f\"/>\r\n              <Span\r\n                bg=\"#000\"\r\n                color=\"#fff\"\r\n                size=\"10px\"\r\n                weight=\"600\"\r\n                spacing=\"0.1em\"\r\n                textAlign=\"center\"\r\n                padding=\"5px 10px\"\r\n                margin=\"10px 0px 0px 0px\"\r\n                textTransform=\"uppercase\"\r\n                radius=\"8px\"\r\n              >\r\n                Faucet Kovan\r\n              </Span>\r\n            </Anchor>\r\n          </Item>\r\n\r\n        </ItemH>\r\n      </Content>\r\n    </Section>\r\n  );\r\n}\r\n\r\n// Export Default\r\nexport default Faucets;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { postReq } from \"api\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { envConfig } from \"@project/contracts\";\r\n\r\nimport DisplayNotice from \"components/DisplayNotice\";\r\nimport ViewChannelItem from \"components/ViewChannelItem\";\r\nimport Faucets from \"components/Faucets\";\r\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\r\nimport { setChannelMeta, incrementPage } from \"redux/slices/channelSlice\";\r\n\r\nconst CHANNELS_PER_PAGE = 30; //pagination parameter which indicates how many channels to return over one iteration\r\nconst SEARCH_TRIAL_LIMIT = 5; //ONLY TRY SEARCHING 5 TIMES BEFORE GIVING UP\r\nconst DEBOUNCE_TIMEOUT = 500; //time in millisecond which we want to wait for then to finish typing\r\n\r\n// Create Header\r\nfunction ViewChannels() {\r\n  const dispatch = useDispatch();\r\n  const { account, chainId } = useWeb3React();\r\n  const { channels, page, ZERO_ADDRESS } = useSelector(\r\n    (state: any) => state.channels\r\n  );\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [moreLoading, setMoreLoading] = React.useState(false);\r\n  const [search, setSearch] = React.useState(\"\");\r\n  const [channelToShow, setChannelToShow] = React.useState([]);\r\n  const [loadingChannel, setLoadingChannel] = React.useState(false);\r\n  const [trialCount, setTrialCount] = React.useState(0);\r\n\r\n  const channelsVisited = page * CHANNELS_PER_PAGE;\r\n  const isMainnet = chainId == 1;\r\n\r\n  // fetch channel data if we are just getting to this pae\r\n  React.useEffect(() => {\r\n    setLoading(!channels.length); //if there are no channels initially then, set the loader\r\n    fetchInitialsChannelMeta();\r\n  }, [account, chainId]);\r\n\r\n  // to update a page\r\n  const updateCurrentPage = () => {\r\n    if (loading || moreLoading) return;\r\n    // fetch more channel information\r\n    setMoreLoading(true);\r\n    dispatch(incrementPage());\r\n    loadMoreChannelMeta(page + 1); //load the meta for the next page\r\n  };\r\n\r\n  // to fetch initial channels and logged in user data\r\n  const fetchInitialsChannelMeta = async () => {\r\n    // fetch the meta of the first `CHANNELS_PER_PAGE` channels\r\n    const channelsMeta = await ChannelsDataStore.instance.getChannelFromApi(\r\n      channelsVisited,\r\n      CHANNELS_PER_PAGE\r\n    );\r\n    dispatch(incrementPage());\r\n    if (!channels.length) {\r\n      dispatch(setChannelMeta(channelsMeta));\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // load more channels when we get to the bottom of the page\r\n  const loadMoreChannelMeta = async (newPageNumber: any) => {\r\n    const startingPoint = newPageNumber * CHANNELS_PER_PAGE;\r\n    const moreChannels = await ChannelsDataStore.instance.getChannelFromApi(\r\n      startingPoint,\r\n      CHANNELS_PER_PAGE\r\n    );\r\n    dispatch(setChannelMeta([...channels, ...moreChannels]));\r\n    setMoreLoading(false);\r\n  };\r\n\r\n  // conditionally display the waymore bar which loads more information\r\n  // load more channels when we are at the bottom of the page\r\n  const showWayPoint = (index: any) => {\r\n    return Number(index) === channels.length - 1;\r\n  };\r\n\r\n  // Search Channels Feature\r\n  React.useEffect(() => {\r\n    if (!channels.length) return;\r\n    setChannelToShow(channels);\r\n  }, [channels]);\r\n\r\n  function searchForChannel() {\r\n    if (loadingChannel) return; //if we are already loading, do nothing\r\n    if (search) {\r\n      setLoadingChannel(true); //begin loading here\r\n      setChannelToShow([]); //maybe remove later\r\n      postReq(\"/channels/search\", {\r\n        query: search,\r\n        op: \"read\",\r\n      })\r\n        .then((data) => {\r\n          setChannelToShow(data.data.channels || []);\r\n          setLoadingChannel(false);\r\n        })\r\n        .catch(() => {\r\n          // if there's an error search for three times before giving up and displaying the normal channels\r\n          if (trialCount < SEARCH_TRIAL_LIMIT) {\r\n            setTrialCount((t) => t + 1);\r\n            searchForChannel(); //if theres an error, recursively search\r\n          } else {\r\n            setChannelToShow(channels);\r\n            setLoadingChannel(false);\r\n          }\r\n        });\r\n    } else {\r\n      // if no search item, then set it back to the channels\r\n      setLoadingChannel(false);\r\n      setChannelToShow(channels);\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    // debounce request\r\n    // this is done so that we only make a request after the user stops typing\r\n    const timeout = setTimeout(searchForChannel, DEBOUNCE_TIMEOUT);\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [search]);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        {!loading && channels.length == 0 ? (\r\n          <ContainerInfo>\r\n            <DisplayNotice\r\n              title=\"That's weird, No Channels in EPNS... world is ending... right?\"\r\n              theme=\"primary\"\r\n            />\r\n          </ContainerInfo>\r\n        ) : (\r\n          <Items\r\n            id=\"scrollstyle-secondary\"\r\n            style={{ position: \"relative\", padding: \"0 1rem\" }}\r\n          >\r\n            {!loading && (\r\n              <Header style={{ minHeight: \"140px\" }}>\r\n                {/* if on mainnet then occupy full width*/}\r\n                <InputWrapper style={{ width: isMainnet ? \"100%\" : \"50%\" }}>\r\n                  <SearchBar\r\n                    type=\"text\"\r\n                    value={search}\r\n                    onChange={(e: any) => setSearch(e.target.value)}\r\n                    className=\"input\"\r\n                    placeholder=\"Search By Name/Address\"\r\n                  />\r\n                  <SearchIconImage src=\"/searchicon.svg\" alt=\"\" />\r\n                </InputWrapper>\r\n                {!isMainnet && <Faucets />}\r\n                {/* only display faucets on mainnet */}\r\n              </Header>\r\n            )}\r\n\r\n            {/* render all channels depending on if we are searching or not */}\r\n            {(search ? channelToShow : channels).map(\r\n              (channel: any, index: any) =>\r\n                channel &&\r\n                channel.addr !== ZERO_ADDRESS && (\r\n                  <>\r\n                    <div key={channel.addr}>\r\n                      <ViewChannelItem channelObjectProp={channel} />\r\n                    </div>\r\n                    {showWayPoint(index) && (\r\n                      <div style={{ width: \"100%\", height: \"40px\" }}>\r\n                        <Waypoint onEnter={updateCurrentPage} />\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )\r\n            )}\r\n            {/* render all channels depending on if we are searching or not */}\r\n\r\n            {/* if we are in search mode and there are no channels then display error message */}\r\n            {search && !channelToShow?.length && !loadingChannel && (\r\n              <CenteredContainerInfo>\r\n                <DisplayNotice\r\n                  title=\"No channels match your query, please search for another name/address\"\r\n                  theme=\"third\"\r\n                />\r\n              </CenteredContainerInfo>\r\n            )}\r\n            {/* display loader if pagination is loading next batch of channelTotalList */}\r\n            {((moreLoading && channels.length) ||\r\n              loading ||\r\n              loadingChannel) && (\r\n              <CenterContainer>\r\n                <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\r\n              </CenterContainer>\r\n            )}\r\n          </Items>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  top: 0px;\r\n  z-index: 2;\r\n  background: #fafafa;\r\n\r\n  @media (max-width: 600px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\nconst InputWrapper = styled.div`\r\n  width: 50%;\r\n  position: relative;\r\n\r\n  @media (max-width: 600px) {\r\n    width: 100%;\r\n    margin: 2rem 0;\r\n  }\r\n`;\r\n\r\nconst SearchBar = styled.input`\r\n  width: 100%;\r\n  padding-right: 50px;\r\n  height: 60px;\r\n  padding-left: 40px;\r\n\r\n  background: rgb(255, 255, 255);\r\n  border: 1px solid rgba(169, 169, 169, 0.5);\r\n  box-sizing: border-box;\r\n  border-radius: 10px;\r\n  transition: 500ms;\r\n  text-transform: capitalize;\r\n  font-size: 16px;\r\n\r\n  input[type=\"reset\"] {\r\n    display: none;\r\n  }\r\n  &::placeholder {\r\n    letter-spacing: 0.15em;\r\n  }\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:focus {\r\n    border: 1px solid #ec008c;\r\n  }\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n\r\n  font-weight: 200;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  max-height: 92vh;\r\n`;\r\n\r\nconst ContainerInfo = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst CenteredContainerInfo = styled.div`\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CenterContainer = styled(ContainerInfo)`\r\n  width: fit-content;\r\n  margin: auto;\r\n`;\r\n\r\nconst Items = styled.div`\r\n  display: block;\r\n  align-self: stretch;\r\n  padding: 10px 20px;\r\n  overflow-y: scroll;\r\n  background: #fafafa;\r\n`;\r\n\r\nconst SearchIconImage = styled.img`\r\n  position: absolute;\r\n  right: 4px;\r\n  top: 4px;\r\n`;\r\n\r\n// Export Default\r\nexport default ViewChannels;\r\n","import React from 'react'\r\n\r\nexport const CloseIcon = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.243\" height=\"10.243\" viewBox=\"0 0 16.243 16.243\">\r\n        <g id=\"Group_4723\" data-name=\"Group 4723\" transform=\"translate(2.121 2.121)\">\r\n            <g id=\"Group_4716\" data-name=\"Group 4716\" transform=\"translate(0)\">\r\n            <line id=\"Line_1079\" data-name=\"Line 1079\" x2=\"16.97\" transform=\"translate(0 12) rotate(-45)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"3\"/>\r\n            <line id=\"Line_1080\" data-name=\"Line 1080\" y2=\"16.97\" transform=\"translate(0 0) rotate(-45)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"3\"/>\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport { FiLink } from \"react-icons/fi\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport styled from \"styled-components\";\r\nimport { BsFillImageFill } from \"react-icons/bs\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { postReq } from \"api\";\r\nimport {\r\n  Section,\r\n  Content,\r\n  Item,\r\n  ItemH,\r\n  H2,\r\n  H3,\r\n  Span,\r\n  Button,\r\n  FormSubmision,\r\n  Input,\r\n  TextField,\r\n} from \"components/SharedStyling\";\r\n\r\nimport \"react-dropdown/style.css\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\n\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nimport { CloseIcon } from \"assets/icons\";\r\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\r\nimport CryptoHelper from \"helpers/CryptoHelper\";\r\nconst ethers = require(\"ethers\");\r\n\r\n// Set Notification Form Type | 0 is reserved for protocol storage\r\nconst NFTypes = [\r\n  { value: \"1\", label: \"Broadcast (IPFS Payload)\" },\r\n  { value: \"2\", label: \"Secret (IPFS Payload)\" },\r\n  { value: \"3\", label: \"Targetted (IPFS Payload)\" },\r\n  // { value: \"4\", label: \"Subset (IPFS Payload)\" },\r\n  // { value: \"5\", label: \"Offchain (Push)\" },\r\n];\r\nconst LIMITER_KEYS = [\"Enter\", \",\"];\r\n\r\n// Create Header\r\nfunction SendNotifications() {\r\n  const { account, library, chainId } = useWeb3React();\r\n  const { epnsCommWriteProvider, epnsCommReadProvider } = useSelector(\r\n    (state: any) => state.contracts\r\n  );\r\n  const { channelDetails, delegatees } = useSelector(\r\n    (state: any) => state.admin\r\n  );\r\n  const { CHANNNEL_DEACTIVATED_STATE } = useSelector(\r\n    (state: any) => state.channels\r\n  );\r\n\r\n  const [nfProcessing, setNFProcessing] = React.useState(0);\r\n  const [channelAddress, setChannelAddress] = React.useState(\"\");\r\n  const [nfRecipient, setNFRecipient] = React.useState(\"\");\r\n  const [multipleRecipients, setMultipleRecipients] = React.useState([]);\r\n  const [tempRecipeint, setTempRecipient] = React.useState(\"\"); // to temporarily hold the address of one recipient who would be entered into the recipeints array above.\r\n  const [nfType, setNFType] = React.useState(\"\");\r\n  const [nfSub, setNFSub] = React.useState(\"\");\r\n  const [nfSubEnabled, setNFSubEnabled] = React.useState(false);\r\n  const [nfMsg, setNFMsg] = React.useState(\"\");\r\n  const [nfCTA, setNFCTA] = React.useState(\"\");\r\n  const [nfCTAEnabled, setNFCTAEnabled] = React.useState(false);\r\n  const [nfMedia, setNFMedia] = React.useState(\"\");\r\n  const [nfMediaEnabled, setNFMediaEnabled] = React.useState(false);\r\n  const [nfInfo, setNFInfo] = React.useState(\"\");\r\n  const [delegateeOptions, setDelegateeOptions] = React.useState([]);\r\n\r\n  const isChannelDeactivated = channelDetails\r\n    ? channelDetails.channelState === CHANNNEL_DEACTIVATED_STATE\r\n    : false;\r\n  const cannotDisplayDelegatees =\r\n    (delegatees.length === 1 && delegatees[0].address === account) ||\r\n    !delegatees.length; //do not display delegatees dropdown if you are the only delegatee to yourself or there are no delegatess\r\n  // construct a list of channel delegators\r\n  React.useEffect(() => {\r\n    if (!account) return;\r\n    if (!delegatees || !delegatees.length) {\r\n      setChannelAddress(account);\r\n    } else {\r\n      setDelegateeOptions(\r\n        delegatees.map((oneDelegatee: any) => ({\r\n          value: oneDelegatee.address,\r\n          label: (\r\n            <CustomDropdownItem>\r\n              <img src={oneDelegatee.icon} alt=\"\" />\r\n              <div>{oneDelegatee.name}</div>\r\n            </CustomDropdownItem>\r\n          ),\r\n        }))\r\n      );\r\n      // default the channel address to the first one on the list which should be that of the user if they have a channel\r\n      setChannelAddress(delegatees[0].address);\r\n    }\r\n  }, [delegatees, account]);\r\n  console.log(delegateeOptions);\r\n\r\n  // on change for the subset type notifications input\r\n  const handleSubsetInputChange = (e: any) => {\r\n    // if the user enters in a comma or an enter then seperate the addresses\r\n    if (LIMITER_KEYS.includes(e.key)) {\r\n      e.preventDefault();\r\n      // if they enter a limiter key, then add the temp value to the recipeints list\r\n      // then clear the value of the temp text\r\n      setMultipleRecipients((oldRecipients) =>\r\n        // use this combination to remove duplicates\r\n        Array.from(new Set([...oldRecipients, tempRecipeint]))\r\n      );\r\n      setTempRecipient(\"\");\r\n    }\r\n  };\r\n  // when to remove a subscriber\r\n  const removeRecipient = (recipientAddress: any) => {\r\n    const filteredRecipients = multipleRecipients.filter(\r\n      (rec) => rec !== recipientAddress\r\n    );\r\n    setMultipleRecipients(filteredRecipients);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const broadcastIds = [\"1\", \"4\"]; //id's of notifications which qualify as broadcast\r\n    setMultipleRecipients([]); //reset array when type changes/\r\n    if (broadcastIds.includes(nfType)) {\r\n      // This is broadcast, nfRecipient will be the same\r\n      setNFRecipient(account);\r\n    } else {\r\n      setNFRecipient(\"\");\r\n    }\r\n  }, [nfType]);\r\n\r\n  // validate the body being sent, return true if no errors\r\n  const bodyValidated = (notificationToast) => {\r\n    let validated = true;\r\n    // if we are sending for a subset and there\r\n    if (nfType === \"4\" && !multipleRecipients.length) {\r\n      toast.update(notificationToast, {\r\n        render:\r\n          \"Please enter at least two recipients in order to use subset notifications type\",\r\n        type: toast.TYPE.ERROR,\r\n        autoClose: 5000,\r\n      });\r\n      validated = false;\r\n    }\r\n    return validated;\r\n  };\r\n\r\n  const handleSendMessage = async (e) => {\r\n    // Check everything in order\r\n    e.preventDefault();\r\n\r\n    // Toastify\r\n    let notificationToast = toast.dark(\r\n      <LoaderToast msg=\"Preparing Notification\" color=\"#fff\" />,\r\n      {\r\n        position: \"bottom-right\",\r\n        autoClose: false,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      }\r\n    );\r\n\r\n    // do some validation\r\n    if (!bodyValidated(notificationToast)) return;\r\n\r\n    // Set to processing\r\n    setNFProcessing(1);\r\n\r\n    // Form signer and contract connection\r\n    const communicatorContract = epnsCommWriteProvider;\r\n    // define the epns comms contracts\r\n\r\n    // For payload basic\r\n    let nsub = nfSub;\r\n    let nmsg = nfMsg;\r\n    let secretEncrypted;\r\n\r\n    let asub = nfSub;\r\n    let amsg = nfMsg;\r\n    let acta = nfCTA;\r\n    let aimg = nfMedia;\r\n\r\n    // Decide type and storage\r\n    switch (nfType) {\r\n      // Broadcast Notification\r\n      case \"1\":\r\n        break;\r\n\r\n      // Targetted Notification\r\n      case \"3\":\r\n        break;\r\n\r\n      // Secret Notification\r\n      case \"2\":\r\n        // Create secret\r\n        let secret = CryptoHelper.makeid(14);\r\n\r\n        // Encrypt payload and change sub and nfMsg in notification\r\n        nsub = \"You have a secret message!\";\r\n        nmsg = \"Open the app to see your secret message!\";\r\n\r\n        // get public key from EPNSCoreHelper\r\n        let k = await EPNSCoreHelper.getPublicKey(\r\n          nfRecipient,\r\n          epnsCommWriteProvider\r\n        );\r\n        if (k == null) {\r\n          // No public key, can't encrypt\r\n          setNFInfo(\"Public Key Registration is required for encryption!\");\r\n          setNFProcessing(2);\r\n\r\n          toast.update(notificationToast, {\r\n            render: \"Unable to encrypt for this user, no public key registered\",\r\n            type: toast.TYPE.ERROR,\r\n            autoClose: 5000,\r\n          });\r\n\r\n          return;\r\n        }\r\n\r\n        let publickey = k.toString().substring(2);\r\n        //console.log(\"This is public Key: \" + publickey);\r\n\r\n        secretEncrypted = await CryptoHelper.encryptWithECIES(\r\n          secret,\r\n          publickey\r\n        );\r\n        asub = CryptoHelper.encryptWithAES(nfSub, secret);\r\n        amsg = CryptoHelper.encryptWithAES(nfMsg, secret);\r\n        acta = CryptoHelper.encryptWithAES(nfCTA, secret);\r\n        aimg = CryptoHelper.encryptWithAES(nfMedia, secret);\r\n        break;\r\n\r\n      // Targetted Notification\r\n      case \"4\":\r\n        break;\r\n\r\n      // Offchain Notification\r\n      case \"5\":\r\n        console.log(nsub, nmsg, nfType, asub, amsg, acta, aimg, \"case 5\");\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // Handle Storage\r\n    let storagePointer = \"\";\r\n\r\n    // IPFS PAYLOAD --> 1, 2, 3\r\n    if (nfType === \"1\" || nfType === \"2\" || nfType === \"3\" || nfType === \"4\") {\r\n      // Checks for optional fields\r\n      if (nfSubEnabled && isEmpty(nfSub)) {\r\n        setNFInfo(\"Enter Subject or Disable it\");\r\n        setNFProcessing(2);\r\n\r\n        toast.update(notificationToast, {\r\n          render: \"Incorrect Payload\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      if (nfMediaEnabled && isEmpty(nfMedia)) {\r\n        setNFInfo(\"Enter Media URL or Disable it\");\r\n        setNFProcessing(2);\r\n\r\n        toast.update(notificationToast, {\r\n          render: \"Incorrect Payload\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (nfCTAEnabled && isEmpty(nfCTA)) {\r\n        setNFInfo(\"Enter Call to Action Link or Disable it\");\r\n        setNFProcessing(2);\r\n\r\n        toast.update(notificationToast, {\r\n          render: \"Incorrect Payload\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (isEmpty(nfMsg)) {\r\n        setNFInfo(\"Message cannot be empty\");\r\n        setNFProcessing(2);\r\n\r\n        toast.update(notificationToast, {\r\n          render: \"Incorrect Payload\",\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n        return;\r\n      }\r\n\r\n      const jsonPayload = {\r\n        notification: {\r\n          title: nsub,\r\n          body: nmsg,\r\n        },\r\n        data: {\r\n          type: nfType,\r\n          secret: secretEncrypted,\r\n          asub: asub,\r\n          amsg: amsg,\r\n          acta: acta,\r\n          aimg: aimg,\r\n        },\r\n      };\r\n\r\n      // if we are sending a subset type, then include recipients\r\n      if (nfType === \"4\") {\r\n        jsonPayload[\"recipients\"] = [...multipleRecipients];\r\n      }\r\n\r\n      const input = JSON.stringify(jsonPayload);\r\n\r\n      console.log(\"Uploding to IPFS...\");\r\n      toast.update(notificationToast, {\r\n        render: \"Preparing Payload for upload\",\r\n      });\r\n\r\n      const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\r\n\r\n      try {\r\n        storagePointer = await ipfs.add(input);\r\n      } catch (e) {\r\n        setNFProcessing(2);\r\n        setNFInfo(\"IPFS Upload Error\");\r\n      }\r\n\r\n      console.log(\"IPFS cid: %o\", storagePointer);\r\n    }\r\n    if (nfType === \"1\" || nfType === \"2\" || nfType === \"3\" || nfType === \"4\") {\r\n      // Prepare Identity and send notification\r\n      const identity = nfType + \"+\" + storagePointer;\r\n      const identityBytes = ethers.utils.toUtf8Bytes(identity);\r\n\r\n      const EPNS_DOMAIN = {\r\n        name: \"EPNS COMM V1\",\r\n        chainId: chainId,\r\n        verifyingContract: epnsCommReadProvider.address,\r\n      };\r\n\r\n      const type = {\r\n        Data: [\r\n          { name: \"acta\", type: \"string\" },\r\n          { name: \"aimg\", type: \"string\" },\r\n          { name: \"amsg\", type: \"string\" },\r\n          { name: \"asub\", type: \"string\" },\r\n          { name: \"type\", type: \"string\" },\r\n          { name: \"secret\", type: \"string\" },\r\n        ],\r\n      };\r\n\r\n      const payload = {\r\n        data: {\r\n          acta: acta,\r\n          aimg: aimg,\r\n          amsg: amsg,\r\n          asub: asub,\r\n          type: nfType,\r\n          secret: \"\",\r\n        },\r\n\r\n        notification: {\r\n          body: amsg,\r\n          title: asub,\r\n        },\r\n      };\r\n\r\n      const message = payload.data;\r\n      console.log(payload, \"payload\");\r\n      console.log(\"chainId\", chainId);\r\n      const signature = await library\r\n        .getSigner(account)\r\n        ._signTypedData(EPNS_DOMAIN, type, message);\r\n      console.log(\"case5 signature\", signature);\r\n      try {\r\n        postReq(\"/payloads/add_manual_payload\", {\r\n          signature,\r\n          op: \"write\",\r\n          chainId: chainId.toString(),\r\n          channel: channelAddress,\r\n          recipient: nfRecipient,\r\n          deployedContract: epnsCommReadProvider.address,\r\n          payload: payload,\r\n          type: nfType,\r\n        }).then(async (res) => {\r\n          toast.update(notificationToast, {\r\n            render: \"Notification Sent\",\r\n            type: toast.TYPE.INFO,\r\n            autoClose: 5000,\r\n          });\r\n\r\n          setNFProcessing(2);\r\n          setNFType(\"\");\r\n          setNFInfo(\"Offchain Notification Sent\");\r\n\r\n          toast.update(notificationToast, {\r\n            render: \"Offchain Notification Sent\",\r\n            type: toast.TYPE.SUCCESS,\r\n            autoClose: 5000,\r\n          });\r\n          console.log(res);\r\n        });\r\n      } catch (err) {\r\n        setNFInfo(\"Offchain Notification Failed, please try again\");\r\n\r\n        toast.update(notificationToast, {\r\n          render: \"Offchain Notification Failed: \" + err,\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n        setNFProcessing(0);\r\n        console.log(err);\r\n      }\r\n\r\n      // var anotherSendTxPromise;\r\n\r\n      // anotherSendTxPromise = communicatorContract.sendNotification(\r\n      //   channelAddress,\r\n      //   nfRecipient,\r\n      //   identityBytes\r\n      // );\r\n\r\n      // console.log(\"Sending Transaction... \");\r\n      // toast.update(notificationToast, {\r\n      //   render: \"Sending Notification...\",\r\n      // });\r\n\r\n      // anotherSendTxPromise\r\n      //   .then(async (tx) => {\r\n      //     console.log(tx);\r\n      //     console.log(\"Transaction Sent!\");\r\n\r\n      //     toast.update(notificationToast, {\r\n      //       render: \"Notification Sent\",\r\n      //       type: toast.TYPE.INFO,\r\n      //       autoClose: 5000,\r\n      //     });\r\n\r\n      //     await tx.wait(1);\r\n      //     console.log(\"Transaction Mined!\");\r\n\r\n      //     setNFProcessing(2);\r\n      //     setNFType(\"\");\r\n      //     setNFInfo(\"Notification Sent\");\r\n\r\n      //     toast.update(notificationToast, {\r\n      //       render: \"Transaction Mined / Notification Sent\",\r\n      //       type: toast.TYPE.SUCCESS,\r\n      //       autoClose: 5000,\r\n      //     });\r\n      //   })\r\n      //   .catch((err) => {\r\n      //     console.log(\"!!!Error handleSendMessage() --> %o\", err);\r\n      //     setNFInfo(\"Transaction Failed, please try again\");\r\n\r\n      //     toast.update(notificationToast, {\r\n      //       render: \"Transacion Failed: \" + err,\r\n      //       type: toast.TYPE.ERROR,\r\n      //       autoClose: 5000,\r\n      //     });\r\n      //     setNFProcessing(0);\r\n      //   });\r\n    }\r\n    if (nfType === \"5\") {\r\n      // const jsonPayload = {\r\n      //   notification: {\r\n      //     title: nsub,\r\n      //     body: nmsg,\r\n      //   },\r\n      //   data: {\r\n      //     type: nfType,\r\n      //     secret: secretEncrypted,\r\n      //     asub: asub,\r\n      //     amsg: amsg,\r\n      //     acta: acta,\r\n      //     aimg: aimg,\r\n      //   },\r\n      // };\r\n\r\n      const EPNS_DOMAIN = {\r\n        name: \"EPNS COMM V1\",\r\n        chainId: chainId,\r\n        verifyingContract: epnsCommReadProvider.address,\r\n      };\r\n\r\n      const type = {\r\n        Data: [\r\n          { name: \"acta\", type: \"string\" },\r\n          { name: \"aimg\", type: \"string\" },\r\n          { name: \"amsg\", type: \"string\" },\r\n          { name: \"asub\", type: \"string\" },\r\n          { name: \"type\", type: \"string\" },\r\n          { name: \"secret\", type: \"string\" },\r\n        ],\r\n      };\r\n\r\n      const payload = {\r\n        data: {\r\n          acta: acta,\r\n          aimg: aimg,\r\n          amsg: amsg,\r\n          asub: asub,\r\n          type: nfType,\r\n          secret: \"\",\r\n        },\r\n\r\n        notification: {\r\n          body: amsg,\r\n          title: asub,\r\n        },\r\n      };\r\n\r\n      const message = payload.data;\r\n      console.log(payload, \"payload\");\r\n      console.log(\"chainId\", chainId);\r\n      const signature = await library\r\n        .getSigner(account)\r\n        ._signTypedData(EPNS_DOMAIN, type, message);\r\n      console.log(\"case5 signature\", signature);\r\n      try {\r\n        postReq(\"/payloads/add_manual_payload\", {\r\n          signature,\r\n          op: \"write\",\r\n          chainId: chainId.toString(),\r\n          channel: channelAddress,\r\n          recipient: nfRecipient,\r\n          deployedContract: epnsCommReadProvider.address,\r\n          payload: payload,\r\n          type: \"3\",\r\n        }).then(async (res) => {\r\n          toast.update(notificationToast, {\r\n            render: \"Notification Sent\",\r\n            type: toast.TYPE.INFO,\r\n            autoClose: 5000,\r\n          });\r\n\r\n          setNFProcessing(2);\r\n          setNFType(\"\");\r\n          setNFInfo(\"Offchain Notification Sent\");\r\n\r\n          toast.update(notificationToast, {\r\n            render: \"Offchain Notification Sent\",\r\n            type: toast.TYPE.SUCCESS,\r\n            autoClose: 5000,\r\n          });\r\n          console.log(res);\r\n        });\r\n      } catch (err) {\r\n        setNFInfo(\"Offchain Notification Failed, please try again\");\r\n\r\n        toast.update(notificationToast, {\r\n          render: \"Offchain Notification Failed: \" + err,\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n        setNFProcessing(0);\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  const isEmpty = (field: any) => {\r\n    if (field.trim().length == 0) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  // toast customize\r\n  const LoaderToast = ({ msg, color }) => (\r\n    <Toaster>\r\n      <Loader type=\"Oval\" color={color} height={30} width={30} />\r\n      <ToasterMsg>{msg}</ToasterMsg>\r\n    </Toaster>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Content padding=\"10px 20px 20px\">\r\n          <Item align=\"flex-start\">\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n              <Span weight=\"200\">Send </Span>\r\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">\r\n                Notification\r\n              </Span>\r\n            </H2>\r\n            {!isChannelDeactivated ? (\r\n              <H3>\r\n                EPNS supports three types of notifications (for now!).{\" \"}\r\n                <b>Groups</b>, <b>Secrets</b>, and <b>Targetted</b>\r\n                 {/* and{\" \"} <b>Subsets</b>. */}\r\n              </H3>\r\n            ) : (\r\n              <H3>This channel has been deactivated, please reactivate it!.</H3>\r\n            )}\r\n          </Item>\r\n        </Content>\r\n      </Section>\r\n\r\n      {!isChannelDeactivated && (\r\n        <Section>\r\n          <ModifiedContent>\r\n            <Item align=\"stretch\">\r\n              <FormSubmision\r\n                flex=\"1\"\r\n                direction=\"column\"\r\n                margin=\"0px\"\r\n                justify=\"center\"\r\n                size=\"1.1rem\"\r\n                onSubmit={handleSendMessage}\r\n              >\r\n                <Item margin=\"0px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                  {!cannotDisplayDelegatees && (\r\n                    <Item\r\n                      flex=\"5\"\r\n                      justify=\"flex-start\"\r\n                      align=\"stretch\"\r\n                      minWidth=\"280px\"\r\n                    >\r\n                      <DropdownStyledParentWhite>\r\n                        <DropdownHeader>\r\n                          SEND NOTIFICATION ON BEHALF OF\r\n                        </DropdownHeader>\r\n                        <DropdownStyledWhite\r\n                          options={delegateeOptions}\r\n                          onChange={(option: any) => {\r\n                            setChannelAddress(option.value);\r\n                          }}\r\n                          value={delegateeOptions.find(\r\n                            (d) => d.value == channelAddress\r\n                          )}\r\n                        />\r\n                      </DropdownStyledParentWhite>\r\n                    </Item>\r\n                  )}\r\n\r\n                  <Input\r\n                    display=\"none\"\r\n                    value={nfType}\r\n                    onChange={(e) => {\r\n                      setNFType(e.target.value);\r\n                    }}\r\n                  />\r\n\r\n                  <Item\r\n                    flex=\"5\"\r\n                    justify=\"flex-start\"\r\n                    align=\"stretch\"\r\n                    minWidth=\"280px\"\r\n                  >\r\n                    <DropdownStyledParent>\r\n                      <DropdownStyled\r\n                        options={NFTypes}\r\n                        onChange={(option) => {\r\n                          setNFType(option.value);\r\n                          console.log(option);\r\n                        }}\r\n                        value={nfType}\r\n                        placeholder=\"Select Type of Notification to Send\"\r\n                      />\r\n                    </DropdownStyledParent>\r\n                  </Item>\r\n                  <Input\r\n                    display=\"none\"\r\n                    value={nfType}\r\n                    onChange={(e) => {\r\n                      setNFType(e.target.value);\r\n                    }}\r\n                  />\r\n\r\n                  {nfType && (\r\n                    <ItemH\r\n                      margin=\"0px 15px 15px 15px\"\r\n                      bg=\"#f1f1f1\"\r\n                      flex=\"1\"\r\n                      self=\"stretch\"\r\n                      justify=\"space-between\"\r\n                    >\r\n                      <ItemH margin=\"15px 10px\" flex=\"inital\">\r\n                        <Span\r\n                          margin=\"0px 10px 0px 0px\"\r\n                          weight=\"400\"\r\n                          spacing=\"0.1em\"\r\n                          textTransform=\"uppercase\"\r\n                          size=\"0.8em\"\r\n                          bg=\"#e20880\"\r\n                          color=\"#fff\"\r\n                          padding=\"5px 15px\"\r\n                          radius=\"30px\"\r\n                        >\r\n                          Enable Subject\r\n                        </Span>\r\n                        <Switch\r\n                          color=\"primary\"\r\n                          size=\"small\"\r\n                          checked={nfSubEnabled}\r\n                          onChange={() => setNFSubEnabled(!nfSubEnabled)}\r\n                        />\r\n                      </ItemH>\r\n\r\n                      <ItemH margin=\"15px 10px\" flex=\"inital\">\r\n                        <Span\r\n                          margin=\"0px 10px 0px 0px\"\r\n                          weight=\"400\"\r\n                          spacing=\"0.1em\"\r\n                          textTransform=\"uppercase\"\r\n                          size=\"0.8em\"\r\n                          bg=\"#e20880\"\r\n                          color=\"#fff\"\r\n                          padding=\"5px 15px\"\r\n                          radius=\"30px\"\r\n                        >\r\n                          Enable Media\r\n                        </Span>\r\n                        <Switch\r\n                          color=\"primary\"\r\n                          size=\"small\"\r\n                          checked={nfMediaEnabled}\r\n                          onChange={() => setNFMediaEnabled(!nfMediaEnabled)}\r\n                        />\r\n                      </ItemH>\r\n\r\n                      <ItemH margin=\"15px 10px\" flex=\"inital\">\r\n                        <Span\r\n                          margin=\"0px 10px 0px 0px\"\r\n                          weight=\"400\"\r\n                          spacing=\"0.1em\"\r\n                          textTransform=\"uppercase\"\r\n                          size=\"0.8em\"\r\n                          bg=\"#e20880\"\r\n                          color=\"#fff\"\r\n                          padding=\"5px 15px\"\r\n                          radius=\"30px\"\r\n                        >\r\n                          Enable CTA\r\n                        </Span>\r\n                        <Switch\r\n                          color=\"primary\"\r\n                          size=\"small\"\r\n                          checked={nfCTAEnabled}\r\n                          onChange={() => setNFCTAEnabled(!nfCTAEnabled)}\r\n                        />\r\n                      </ItemH>\r\n                    </ItemH>\r\n                  )}\r\n                </Item>\r\n\r\n                {(nfType === \"2\" || nfType === \"3\" || nfType === \"5\") && (\r\n                  <Item\r\n                    margin=\"15px 20px 15px 20px\"\r\n                    flex=\"1\"\r\n                    self=\"stretch\"\r\n                    align=\"stretch\"\r\n                  >\r\n                    <Input\r\n                      required\r\n                      placeholder=\"Enter recipient wallet address\"\r\n                      radius=\"4px\"\r\n                      padding=\"12px\"\r\n                      border=\"1px solid #674c9f\"\r\n                      bg=\"#fff\"\r\n                      value={nfRecipient}\r\n                      onChange={(e) => {\r\n                        setNFRecipient(e.target.value);\r\n                      }}\r\n                    />\r\n                    {nfRecipient.trim().length == 0 && (\r\n                      <Span\r\n                        padding=\"4px 10px\"\r\n                        right=\"0px\"\r\n                        top=\"0px\"\r\n                        pos=\"absolute\"\r\n                        color=\"#fff\"\r\n                        bg=\"#000\"\r\n                        size=\"0.7rem\"\r\n                        z=\"1\"\r\n                      >\r\n                        Recipient Wallet\r\n                      </Span>\r\n                    )}\r\n                  </Item>\r\n                )}\r\n\r\n                {nfType === \"4\" && (\r\n                  <>\r\n                    <MultiRecipientsContainer>\r\n                      {multipleRecipients.map((oneRecipient) => (\r\n                        <span key={oneRecipient}>\r\n                          {oneRecipient}\r\n                          <i onClick={() => removeRecipient(oneRecipient)}>\r\n                            <CloseIcon />\r\n                          </i>\r\n                        </span>\r\n                      ))}\r\n                    </MultiRecipientsContainer>\r\n                    <Item\r\n                      margin=\"15px 20px 15px 20px\"\r\n                      flex=\"1\"\r\n                      self=\"stretch\"\r\n                      align=\"stretch\"\r\n                    >\r\n                      <Input\r\n                        required={multipleRecipients.length === 0}\r\n                        placeholder=\"Enter recipients wallet addresses seperated by a comma or by pressing the enter key\"\r\n                        radius=\"4px\"\r\n                        padding=\"12px\"\r\n                        border=\"1px solid #674c9f\"\r\n                        bg=\"#fff\"\r\n                        value={tempRecipeint}\r\n                        onKeyPress={handleSubsetInputChange}\r\n                        onChange={(e) => {\r\n                          const text = e.target.value;\r\n                          if (!LIMITER_KEYS.includes(text)) {\r\n                            setTempRecipient(e.target.value);\r\n                          }\r\n                        }}\r\n                      />\r\n                      {nfRecipient.trim().length == 0 && (\r\n                        <Span\r\n                          padding=\"4px 10px\"\r\n                          right=\"0px\"\r\n                          top=\"0px\"\r\n                          pos=\"absolute\"\r\n                          color=\"#fff\"\r\n                          bg=\"#000\"\r\n                          size=\"0.7rem\"\r\n                          z=\"1\"\r\n                        >\r\n                          Recipient Wallet\r\n                        </Span>\r\n                      )}\r\n                    </Item>\r\n                  </>\r\n                )}\r\n\r\n                {nfType && nfSubEnabled && (\r\n                  <Item\r\n                    margin=\"15px 20px 15px 20px\"\r\n                    flex=\"1\"\r\n                    self=\"stretch\"\r\n                    align=\"stretch\"\r\n                  >\r\n                    <Input\r\n                      required\r\n                      placeholder=\"Subject of Notification\"\r\n                      padding=\"12px\"\r\n                      borderBottom=\"1px solid #000\"\r\n                      weight=\"400\"\r\n                      size=\"1.2em\"\r\n                      bg=\"#fff\"\r\n                      value={nfSub}\r\n                      onChange={(e) => {\r\n                        setNFSub(e.target.value);\r\n                      }}\r\n                    />\r\n                    {nfSub.trim().length == 0 && (\r\n                      <Span\r\n                        padding=\"4px 10px\"\r\n                        right=\"0px\"\r\n                        top=\"0px\"\r\n                        pos=\"absolute\"\r\n                        color=\"#fff\"\r\n                        bg=\"#000\"\r\n                        size=\"0.7rem\"\r\n                        z=\"1\"\r\n                      >\r\n                        Subject\r\n                      </Span>\r\n                    )}\r\n                  </Item>\r\n                )}\r\n\r\n                {nfType && (\r\n                  <Item\r\n                    margin=\"15px 20px 15px 20px\"\r\n                    flex=\"1\"\r\n                    self=\"stretch\"\r\n                    align=\"stretch\"\r\n                  >\r\n                    <TextField\r\n                      required\r\n                      placeholder=\"Notification Message\"\r\n                      rows=\"6\"\r\n                      radius=\"4px\"\r\n                      padding=\"12px\"\r\n                      weight=\"400\"\r\n                      border=\"1px solid #000\"\r\n                      bg=\"#fff\"\r\n                      value={nfMsg}\r\n                      onChange={(e) => {\r\n                        setNFMsg(e.target.value);\r\n                      }}\r\n                      autocomplete=\"off\"\r\n                    />\r\n                  </Item>\r\n                )}\r\n\r\n                {nfType && nfMediaEnabled && (\r\n                  <ItemH\r\n                    padding=\"15px 20px 15px 20px\"\r\n                    flex=\"1\"\r\n                    self=\"stretch\"\r\n                    align=\"center\"\r\n                  >\r\n                    <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\r\n                      <BsFillImageFill size={24} color=\"#000\" />\r\n                    </Item>\r\n                    <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\r\n                      <Input\r\n                        required\r\n                        placeholder=\"Media URL for Notification\"\r\n                        padding=\"12px\"\r\n                        border=\"1px solid #000\"\r\n                        radius=\"4px\"\r\n                        weight=\"400\"\r\n                        bg=\"#f1f1f1\"\r\n                        value={nfMedia}\r\n                        onChange={(e) => {\r\n                          setNFMedia(e.target.value);\r\n                        }}\r\n                      />\r\n                      {nfMedia.trim().length == 0 && (\r\n                        <Span\r\n                          padding=\"4px 10px\"\r\n                          right=\"0px\"\r\n                          top=\"0px\"\r\n                          pos=\"absolute\"\r\n                          color=\"#fff\"\r\n                          bg=\"#000\"\r\n                          size=\"0.7rem\"\r\n                          z=\"1\"\r\n                        >\r\n                          Media URL\r\n                        </Span>\r\n                      )}\r\n                    </Item>\r\n                  </ItemH>\r\n                )}\r\n\r\n                {nfType && nfCTAEnabled && (\r\n                  <ItemH\r\n                    margin=\"15px 20px 15px 20px\"\r\n                    flex=\"1\"\r\n                    self=\"stretch\"\r\n                    align=\"center\"\r\n                  >\r\n                    <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\r\n                      <FiLink size={24} color=\"#000\" />\r\n                    </Item>\r\n                    <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\r\n                      <Input\r\n                        required\r\n                        placeholder=\"Call to Action Link\"\r\n                        padding=\"12px\"\r\n                        border=\"1px solid #000\"\r\n                        radius=\"4px\"\r\n                        weight=\"400\"\r\n                        bg=\"#f1f1f1\"\r\n                        value={nfCTA}\r\n                        onChange={(e) => {\r\n                          setNFCTA(e.target.value);\r\n                        }}\r\n                      />\r\n                      {nfCTA.trim().length == 0 && (\r\n                        <Span\r\n                          padding=\"4px 10px\"\r\n                          right=\"0px\"\r\n                          top=\"0px\"\r\n                          pos=\"absolute\"\r\n                          color=\"#fff\"\r\n                          bg=\"#000\"\r\n                          size=\"0.7rem\"\r\n                          z=\"1\"\r\n                        >\r\n                          Call to Action URL\r\n                        </Span>\r\n                      )}\r\n                    </Item>\r\n                  </ItemH>\r\n                )}\r\n\r\n                {nfInfo && nfProcessing != 1 && (\r\n                  <Item\r\n                    color=\"#fff\"\r\n                    bg=\"#e1087f\"\r\n                    padding=\"10px 15px\"\r\n                    margin=\"15px 0px\"\r\n                  >\r\n                    <Span\r\n                      color=\"#fff\"\r\n                      textTransform=\"uppercase\"\r\n                      spacing=\"0.1em\"\r\n                      weight=\"400\"\r\n                      size=\"1em\"\r\n                    >\r\n                      {nfInfo}\r\n                    </Span>\r\n                  </Item>\r\n                )}\r\n\r\n                {nfType && (\r\n                  <Item\r\n                    margin=\"15px 0px 0px 0px\"\r\n                    flex=\"1\"\r\n                    self=\"stretch\"\r\n                    align=\"stretch\"\r\n                  >\r\n                    <Button\r\n                      bg=\"#e20880\"\r\n                      color=\"#fff\"\r\n                      flex=\"1\"\r\n                      radius=\"0px\"\r\n                      padding=\"20px 10px\"\r\n                      disabled={nfProcessing == 1 ? true : false}\r\n                    >\r\n                      {nfProcessing == 1 && (\r\n                        <Loader\r\n                          type=\"Oval\"\r\n                          color=\"#fff\"\r\n                          height={24}\r\n                          width={24}\r\n                        />\r\n                      )}\r\n                      {nfProcessing != 1 && (\r\n                        <Input\r\n                          cursor=\"hand\"\r\n                          textTransform=\"uppercase\"\r\n                          color=\"#fff\"\r\n                          weight=\"400\"\r\n                          size=\"0.8em\"\r\n                          spacing=\"0.2em\"\r\n                          type=\"submit\"\r\n                          value=\"Send Notification\"\r\n                        />\r\n                      )}\r\n                    </Button>\r\n                  </Item>\r\n                )}\r\n              </FormSubmision>\r\n            </Item>\r\n          </ModifiedContent>\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`;\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`;\r\n\r\nconst DropdownStyledParent = styled.div`\r\n  .is-open {\r\n    margin-bottom: 130px;\r\n  }\r\n`;\r\n\r\nconst MultiRecipientsContainer = styled.div`\r\n  width: 100%;\r\n  padding: 0px 20px;\r\n  padding-top: 10px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 7px 15px;\r\n\r\n  span {\r\n    color: white;\r\n    background: #e20880;\r\n    padding: 6px 10px;\r\n    border-radius: 5px;\r\n\r\n    i {\r\n      cursor: pointer;\r\n      margin-left: 25px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ModifiedContent = styled(Content)`\r\n  padding-top: 20px;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst DropdownHeader = styled.div`\r\n  color: black;\r\n  padding: 10px;\r\n  letter-spacing: 3px;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst DropdownStyled = styled(Dropdown)`\r\n  .Dropdown-control {\r\n    background-color: #000;\r\n    color: #fff;\r\n    padding: 12px 52px 12px 10px;\r\n    border: 1px solid #000;\r\n    border-radius: 4px;\r\n  }\r\n\r\n  .Dropdown-placeholder {\r\n    text-transform: uppercase;\r\n    font-weight: 400;\r\n    letter-spacing: 0.2em;\r\n    font-size: 0.8em;\r\n  }\r\n\r\n  .Dropdown-arrow {\r\n    top: 18px;\r\n    bottom: 0;\r\n    border-color: #fff transparent transparent;\r\n  }\r\n\r\n  .Dropdown-menu {\r\n    border: 1px solid #000;\r\n    box-shadow: none;\r\n    background-color: #000;\r\n    border-radius: 0px;\r\n    margin-top: -2px;\r\n    border-bottom-right-radius: 4px;\r\n    border-bottom-left-radius: 4px;\r\n  }\r\n\r\n  .Dropdown-option {\r\n    background-color: rgb(35 35 35);\r\n    color: #ffffff99;\r\n\r\n    text-transform: uppercase;\r\n    letter-spacing: 0.2em;\r\n    font-size: 0.7em;\r\n    padding: 15px 20px;\r\n  }\r\n\r\n  .Dropdown-option:hover {\r\n    background-color: #000000;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst DropdownStyledWhite = styled(DropdownStyled)`\r\n  .Dropdown-control {\r\n    color: #000;\r\n    background: #fafafa;\r\n    border: 0px;\r\n    padding: 15px 52px 15px 10px;\r\n  }\r\n  .Dropdown-arrow {\r\n    border-color: #000 transparent transparent;\r\n    top: 30px;\r\n  }\r\n  .Dropdown-menu {\r\n    border: 0px;\r\n    background-color: #fafafa;\r\n  }\r\n  .Dropdown-option {\r\n    background-color: #fafafa;\r\n    color: black;\r\n    transition: 300ms;\r\n  }\r\n  .Dropdown-option:hover {\r\n    background-color: #e7e6e6;\r\n  }\r\n  .Dropdown-option.is-selected {\r\n    background-color: #f1efef;\r\n  }\r\n`;\r\n\r\nconst DropdownStyledParentWhite = styled(DropdownStyledParent)`\r\n  margin-bottom: 20px;\r\n  border: 1px solid rgba(169, 169, 169, 0.5);\r\n`;\r\n\r\nconst CustomDropdownItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  img {\r\n    height: 30px;\r\n    width: 30px;\r\n    border-radius: 50%;\r\n    margin-right: 10px;\r\n  }\r\n  div {\r\n    color: black;\r\n    font-size: 16px;\r\n    letter-spacing: 2px;\r\n  }\r\n`;\r\n\r\n// Export Default\r\nexport default SendNotifications;\r\n","import React, {useRef, useState} from 'react';\r\nimport { useClick, useClickAway } from 'react-use';\r\nimport styled from 'styled-components';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport {Item, H2, H3, Span, Button, Input} from 'components/SharedStyling';\r\n\r\nconst ethers = require('ethers');\r\n\r\n\r\nexport default function AddDelegateModal({\r\n    onClose,onSuccess, addDelegate\r\n}) {\r\n\r\n    const modalRef = useRef(null);\r\n    const [mainAdress, setMainAddress] = useState('');\r\n    const [loading, setLoading] = useState('');\r\n\r\n    // Form signer and contract connection\r\n    useClickAway(modalRef, onClose);\r\n\r\n    const addDelegateFunction = () => {\r\n        setLoading('loading')\r\n        addDelegate(mainAdress)\r\n        .then(async (tx) => {\r\n            console.log(tx);\r\n            setLoading(\"Transaction Sent!\");\r\n\r\n            setTimeout(() => {\r\n                onSuccess();\r\n                onClose();\r\n            }, 2000);\r\n\r\n        })\r\n        .catch((err) => {\r\n            console.log({\r\n                err\r\n            })\r\n            setLoading('There was an error');\r\n            setTimeout(() => {\r\n                setLoading('')\r\n            }, 2000)\r\n        })\r\n    };\r\n    \r\n\r\n    return (\r\n        <Overlay>\r\n            <AliasModal ref={modalRef}>\r\n                <Item align=\"flex-start\">\r\n                    <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n                    <Span weight=\"200\">Add </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Delegate</Span>\r\n                    </H2>\r\n                    <H3>Add an account who can send notifications on your behalf.</H3>\r\n                </Item>\r\n                <Item align=\"flex-start\">\r\n                    <CustomInput\r\n                        required\r\n                        placeholder=\"Enter the ethereum address\"\r\n                        radius=\"4px\"\r\n                        padding=\"12px\"\r\n                        border=\"1px solid #674c9f\"\r\n                        bg=\"#fff\"\r\n                        value={mainAdress}\r\n                        onChange={(e) => {setMainAddress(e.target.value)}}\r\n                    />\r\n                </Item>\r\n                <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                    <Button\r\n                        bg='#e20880'\r\n                        color='#fff'\r\n                        flex=\"1\"\r\n                        radius=\"0px\"\r\n                        padding=\"20px 10px\"\r\n                        disabled={mainAdress.length !== 42}\r\n                        onClick={addDelegateFunction}\r\n                    >\r\n                        { loading && <Loader\r\n                            type=\"Oval\"\r\n                            color=\"#FFF\"\r\n                            height={16}\r\n                            width={16}\r\n                            />\r\n                        }\r\n                        <StyledInput\r\n                            cursor=\"hand\"\r\n                            textTransform=\"uppercase\"\r\n                            color=\"#fff\" weight=\"400\"\r\n                            size=\"0.8em\" spacing=\"0.2em\"\r\n                            value={loading ? loading : \"Add Delegate\"}\r\n                        />\r\n                    </Button>\r\n                </Item>\r\n            </AliasModal>\r\n        </Overlay>\r\n    )\r\n}\r\n\r\nconst StyledInput = styled(Input)`\r\n    width: 100%;\r\n    text-align: center;\r\n    caret-color: transparent;\r\n`\r\n\r\nconst CustomInput = styled(Input)`\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    margin: 20px 0px;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background: rgba(0,0,0,0.85);\r\n    height: 100%;\r\n    width: 100%;\r\n    z-index: 1000;\r\n    position: fixed;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst AliasModal = styled.div`\r\n    padding: 20px 30px;\r\n    background: white;\r\n`;","import React, {useRef, useState} from 'react';\r\nimport { useClickAway } from 'react-use';\r\nimport styled from 'styled-components';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport {Item, H2, H3, Span, Button, Input} from 'components/SharedStyling';\r\n\r\n\r\n\r\nexport default function RemoveDelegateModal({\r\n    onClose,onSuccess, removeDelegate\r\n}) {\r\n\r\n    const modalRef = useRef(null);\r\n    const [mainAdress, setMainAddress] = useState('');\r\n    const [loading, setLoading] = useState('');\r\n\r\n    // Form signer and contract connection\r\n    useClickAway(modalRef, onClose);\r\n\r\n    const addDelegateFunction = () => {\r\n        setLoading('loading')\r\n        removeDelegate(mainAdress)\r\n        .then(async (tx) => {\r\n            console.log(tx);\r\n            setLoading(\"Transaction Sent!\");\r\n\r\n            setTimeout(() => {\r\n                onSuccess();\r\n                onClose();\r\n            }, 2000);\r\n\r\n        })\r\n        .catch((err) => {\r\n            console.log({\r\n                err\r\n            })\r\n            setLoading('There was an error');\r\n            setTimeout(() => {\r\n                setLoading('')\r\n            }, 2000)\r\n        })\r\n    };\r\n    \r\n\r\n    return (\r\n        <Overlay>\r\n            <AliasModal ref={modalRef}>\r\n                <Item align=\"flex-start\">\r\n                    <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n                    <Span weight=\"200\">Remove </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Delegate</Span>\r\n                    </H2>\r\n                    <H3>Remove an account who can send notifications on your behalf.</H3>\r\n                </Item>\r\n                <Item align=\"flex-start\">\r\n                    <CustomInput\r\n                        required\r\n                        placeholder=\"Enter the ethereum address\"\r\n                        radius=\"4px\"\r\n                        padding=\"12px\"\r\n                        border=\"1px solid #674c9f\"\r\n                        bg=\"#fff\"\r\n                        value={mainAdress}\r\n                        onChange={(e) => {setMainAddress(e.target.value)}}\r\n                    />\r\n                </Item>\r\n                <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\r\n                    <Button\r\n                        bg='#e20880'\r\n                        color='#fff'\r\n                        flex=\"1\"\r\n                        radius=\"0px\"\r\n                        padding=\"20px 10px\"\r\n                        disabled={mainAdress.length !== 42}\r\n                        onClick={addDelegateFunction}\r\n                    >\r\n                        { loading && <Loader\r\n                            type=\"Oval\"\r\n                            color=\"#FFF\"\r\n                            height={16}\r\n                            width={16}\r\n                            />\r\n                        }\r\n                        <StyledInput\r\n                            cursor=\"hand\"\r\n                            textTransform=\"uppercase\"\r\n                            color=\"#fff\" weight=\"400\"\r\n                            size=\"0.8em\" spacing=\"0.2em\"\r\n                            value={loading ? loading : \"Remove Delegate\"}\r\n                        />\r\n                    </Button>\r\n                </Item>\r\n            </AliasModal>\r\n        </Overlay>\r\n    )\r\n}\r\n\r\nconst StyledInput = styled(Input)`\r\n    width: 100%;\r\n    text-align: center;\r\n    caret-color: transparent;\r\n`\r\n\r\nconst CustomInput = styled(Input)`\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    margin: 20px 0px;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background: rgba(0,0,0,0.85);\r\n    height: 100%;\r\n    width: 100%;\r\n    z-index: 1000;\r\n    position: fixed;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst AliasModal = styled.div`\r\n    padding: 20px 30px;\r\n    background: white;\r\n`;","import React, { useRef, useState } from \"react\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { useClickAway } from \"react-use\";\r\nimport {\r\n  Section,\r\n  Content,\r\n  Item,\r\n  H3,\r\n  Span,\r\n  Button,\r\n} from \"components/SharedStyling\";\r\n\r\nconst MIN_STAKE_FEES = 50;\r\n\r\nexport default function ActivateChannelModal({\r\n  activateChannel,\r\n  loading,\r\n  setChannelStakeFees,\r\n  channelStakeFees,\r\n  onClose,\r\n}) {\r\n  const popupRef = React.useRef(null);\r\n  useClickAway(popupRef, onClose); //close the popoup when we click away\r\n  return (\r\n    <PopupOverlay>\r\n      <PopupSlider ref={popupRef}>\r\n        <Section>\r\n          <Content padding=\"50px 0px 0px 0px\">\r\n            <Item align=\"flex-start\" margin=\"0px 20px\">\r\n              <H3 color=\"#e20880\">Set your staking fees in DAI</H3>\r\n            </Item>\r\n\r\n            <Item\r\n              margin=\"-10px 20px 20px 20px\"\r\n              padding=\"20px 20px 10px 20px\"\r\n              bg=\"#f1f1f1\"\r\n            >\r\n              <Slider\r\n                defaultValue={MIN_STAKE_FEES}\r\n                onChangeCommitted={(_, value) =>\r\n                  setChannelStakeFees(Number(value))\r\n                }\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                step={MIN_STAKE_FEES}\r\n                marks\r\n                min={MIN_STAKE_FEES}\r\n                max={25000}\r\n              />\r\n              <Span\r\n                weight=\"400\"\r\n                size=\"1.0em\"\r\n                textTransform=\"uppercase\"\r\n                spacing=\"0.2em\"\r\n              >\r\n                Amount Staked: {channelStakeFees} DAI\r\n              </Span>\r\n            </Item>\r\n\r\n            <Item self=\"stretch\" align=\"stretch\" margin=\"20px 0px 0px 0px\">\r\n              <Button\r\n                bg=\"#e20880\"\r\n                color=\"#fff\"\r\n                flex=\"1\"\r\n                radius=\"0px\"\r\n                padding=\"20px 10px\"\r\n                onClick={activateChannel}\r\n              >\r\n                {loading ? (\r\n                  <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\r\n                ) : (\r\n                  <Span\r\n                    color=\"#fff\"\r\n                    weight=\"400\"\r\n                    textTransform=\"uppercase\"\r\n                    spacing=\"0.1em\"\r\n                  >\r\n                    Reactivate Channel\r\n                  </Span>\r\n                )}\r\n              </Button>\r\n            </Item>\r\n          </Content>\r\n        </Section>\r\n      </PopupSlider>\r\n    </PopupOverlay>\r\n  );\r\n}\r\n\r\nconst PopupOverlay = styled.div`\r\n  background: rgba(0, 0, 0, 0.5);\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst PopupSlider = styled.div`\r\n  height: 200px;\r\n  width: 70vw;\r\n  background: white;\r\n`;\r\n","/**\r\n * This file helps us to maintain the state of the logged in user user(if they have an account)\r\n * as well as the privilidges the logged in user has\r\n */\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    channelDetails: null,\r\n    canVerify: false,\r\n    delegatees: []\r\n};\r\n\r\nexport const contractSlice = createSlice({\r\n    name: \"admin\",\r\n    initialState,\r\n    reducers: {\r\n        setUserChannelDetails: (state, action) => {\r\n            state.channelDetails = action.payload;\r\n        },\r\n        setCanVerify: (state, action) => {\r\n            state.canVerify = action.payload;\r\n        },\r\n        setDelegatees: (state, action) => {\r\n            state.delegatees = action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    setUserChannelDetails,\r\n    setCanVerify,\r\n    setDelegatees\r\n} = contractSlice.actions;\r\n\r\nexport default contractSlice.reducer;","import React from \"react\";\r\nimport { Section, Content, Item } from \"components/SharedStyling\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { toast as toaster } from \"react-toastify\";\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { postReq } from \"api\";\r\n\r\nimport { ALLOWED_CORE_NETWORK } from \"pages/Home\";\r\nimport AddDelegateModal from \"./AddDelegateModal\";\r\nimport RemoveDelegateModal from \"./RemoveDelegateModal\";\r\nimport ActivateChannelModal from \"./ActivateChannelModal\";\r\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\r\nimport { setUserChannelDetails } from \"redux/slices/adminSlice\";\r\n\r\nimport \"react-dropdown/style.css\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nconst ethers = require(\"ethers\");\r\n\r\nconst MIN_STAKE_FEES = 50;\r\n\r\n// Create Header\r\nfunction ChannelSettings() {\r\n  const dispatch = useDispatch();\r\n  const { account, library, chainId } = useWeb3React();\r\n  const { epnsWriteProvider, epnsCommWriteProvider } = useSelector(\r\n    (state: any) => state.contracts\r\n  );\r\n  const { channelDetails } = useSelector((state: any) => state.admin);\r\n  const {\r\n    CHANNNEL_DEACTIVATED_STATE,\r\n    CHANNEL_BLOCKED_STATE,\r\n    CHANNEL_ACTIVE_STATE,\r\n  } = useSelector((state: any) => state.channels);\r\n\r\n  const { channelState } = channelDetails;\r\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [\r\n    showActivateChannelPopup,\r\n    setShowActivateChannelPopup,\r\n  ] = React.useState(false);\r\n  const [channelStakeFees, setChannelStakeFees] = React.useState(\r\n    MIN_STAKE_FEES\r\n  );\r\n  const [poolContrib, setPoolContrib] = React.useState(0);\r\n  const [addDelegateLoading, setAddDelegateLoading] = React.useState(false);\r\n  const [addModalOpen, setAddModalOpen] = React.useState(false);\r\n  const [removeDelegateLoading, setRemoveDelegateLoading] = React.useState(\r\n    false\r\n  );\r\n  const [removeModalOpen, setRemoveModalOpen] = React.useState(false);\r\n\r\n  // toaster customize\r\n  const LoaderToast = ({ msg, color }) => (\r\n    <Toaster>\r\n      <Loader type=\"Oval\" color={color} height={30} width={30} />\r\n      <ToasterMsg>{msg}</ToasterMsg>\r\n    </Toaster>\r\n  );\r\n\r\n  // Toastify\r\n  let notificationToast = () =>\r\n    toaster.dark(<LoaderToast msg=\"Preparing Notification\" color=\"#fff\" />, {\r\n      position: \"bottom-right\",\r\n      autoClose: false,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n  const isChannelDeactivated = channelState === CHANNNEL_DEACTIVATED_STATE;\r\n  const isChannelBlocked = channelState === CHANNEL_BLOCKED_STATE;\r\n  const channelInactive = isChannelBlocked || isChannelDeactivated;\r\n\r\n  React.useEffect(() => {\r\n    // To set channel info from a channel details\r\n    // setChannelState(channelDetails.channelState);\r\n    setPoolContrib(\r\n      +EPNSCoreHelper.formatBigNumberToMetric(\r\n        channelDetails.poolContribution,\r\n        true\r\n      )\r\n    );\r\n  }, [account]);\r\n\r\n  const toggleChannelActivationState = () => {\r\n    if (isChannelBlocked) return;\r\n    if (isChannelDeactivated) {\r\n      setShowActivateChannelPopup(true);\r\n    } else {\r\n      deactivateChannel();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Function to activate a channel that has been deactivated\r\n   */\r\n  const activateChannel = async () => {\r\n    // First Approve DAI\r\n    setLoading(true);\r\n    var signer = library.getSigner(account);\r\n    let daiContract = new ethers.Contract(addresses.dai, abis.erc20, signer);\r\n    const fees = ethers.utils.parseUnits(channelStakeFees.toString(), 18);\r\n    var sendTransactionPromise = daiContract.approve(addresses.epnscore, fees);\r\n    const tx = await sendTransactionPromise;\r\n\r\n    console.log(tx);\r\n    console.log(\"waiting for tx to finish\");\r\n\r\n    await library.waitForTransaction(tx.hash);\r\n    await epnsWriteProvider\r\n      .reactivateChannel(fees)\r\n      .then(async (tx: any) => {\r\n        console.log(tx);\r\n        console.log(\"Transaction Sent!\");\r\n\r\n        toaster.update(notificationToast(), {\r\n          render: \"Reactivating Channel\",\r\n          type: toaster.TYPE.INFO,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        await tx.wait(1);\r\n        toaster.update(notificationToast(), {\r\n          render: \"Channel Reactivated\",\r\n          type: toaster.TYPE.INFO,\r\n          autoClose: 5000,\r\n        });\r\n        dispatch(\r\n          setUserChannelDetails({\r\n            ...channelDetails,\r\n            channelState: CHANNEL_ACTIVE_STATE,\r\n          })\r\n        );\r\n      })\r\n      .catch((err: any) => {\r\n        console.log(\"!!!Error reactivateChannel() --> %o\", err);\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transacion Failed: \" + err.error?.message || err.message,\r\n          type: toaster.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n        setShowActivateChannelPopup(false);\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Function to deactivate a channel that has been deactivated\r\n   */\r\n  const deactivateChannel = async () => {\r\n    setLoading(true);\r\n    if (!poolContrib) return;\r\n\r\n    const amountToBeConverted = parseInt(\"\" + poolContrib) - 10;\r\n    console.log(\"Amount To be converted==>\", amountToBeConverted);\r\n\r\n    const { data: response } = await postReq(\"/channels/get_dai_to_push\", {\r\n      value: amountToBeConverted,\r\n    });\r\n\r\n    const pushValue = response.response.data.quote.PUSH.price;\r\n    const amountsOut = pushValue * Math.pow(10, 18);\r\n\r\n    await epnsWriteProvider\r\n      // .deactivateChannel(amountsOut.toString().replace(/0+$/, \"\")) //use this to remove trailing zeros 1232323200000000 -> 12323232\r\n      .deactivateChannel(Math.floor(pushValue)) \r\n      .then(async (tx: any) => {\r\n        console.log(tx);\r\n        console.log(\"Transaction Sent!\");\r\n\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transaction sending\",\r\n          type: toaster.TYPE.INFO,\r\n          autoClose: 5000,\r\n        });\r\n\r\n        await tx.wait(1);\r\n        console.log(\"Transaction Mined!\");\r\n        dispatch(\r\n          setUserChannelDetails({\r\n            ...channelDetails,\r\n            channelState: CHANNNEL_DEACTIVATED_STATE,\r\n          })\r\n        );\r\n      })\r\n      .catch((err: any) => {\r\n        console.log(\"!!!Error deactivateChannel() --> %o\", err);\r\n        console.log({\r\n          err,\r\n        });\r\n        toaster.update(notificationToast(), {\r\n          render: \"Transacion Failed: \" + err.error?.message || err,\r\n          type: toaster.TYPE.ERROR,\r\n          autoClose: 5000,\r\n        });\r\n      })\r\n      .finally(() => {\r\n        // post op\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const addDelegate = async (walletAddress: string) => {\r\n    setAddDelegateLoading(true);\r\n    return epnsCommWriteProvider.addDelegate(walletAddress).finally(() => {\r\n      setAddDelegateLoading(false);\r\n    });\r\n  };\r\n\r\n  const removeDelegate = (walletAddress: string) => {\r\n    setRemoveDelegateLoading(true);\r\n    return epnsCommWriteProvider.removeDelegate(walletAddress).finally(() => {\r\n      setRemoveDelegateLoading(false);\r\n    });\r\n  };\r\n\r\n  if (!onCoreNetwork) {\r\n    //temporarily deactivate the deactivate button if not on core network\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <DropdownWrapper>\r\n        <DeactivateButton\r\n          isChannelDeactivated={isChannelDeactivated}\r\n          onClick={toggleChannelActivationState}\r\n        >\r\n          <ActionTitle>\r\n            {loading ? (\r\n              \"Loading ...\"\r\n            ) : isChannelBlocked ? (\r\n              \"Channel Blocked\"\r\n            ) : isChannelDeactivated ? (\r\n              \"Activate Channel\"\r\n            ) : (\r\n              \"Deactivate Channel\"\r\n            )}\r\n          </ActionTitle>\r\n        </DeactivateButton>\r\n        <ActiveChannelWrapper>\r\n          <ChannelActionButton\r\n            disabled={channelInactive}\r\n            onClick={() => !channelInactive && setAddModalOpen(true)}\r\n          >\r\n            <ActionTitle>\r\n              {addDelegateLoading ? (\r\n                <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\r\n              ) : (\r\n                \"Add Delegate\"\r\n              )}\r\n            </ActionTitle>\r\n          </ChannelActionButton>\r\n\r\n          <ChannelActionButton\r\n            disabled={channelInactive}\r\n            onClick={() => !channelInactive && setRemoveModalOpen(true)}\r\n          >\r\n            <ActionTitle>\r\n              {removeDelegateLoading ? (\r\n                <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\r\n              ) : (\r\n                \"Remove Delegate\"\r\n              )}\r\n            </ActionTitle>\r\n          </ChannelActionButton>\r\n        </ActiveChannelWrapper>\r\n      </DropdownWrapper>\r\n      {/* modal to display the activate channel popup */}\r\n      {showActivateChannelPopup && (\r\n        <ActivateChannelModal\r\n          onClose={() => {\r\n            if (showActivateChannelPopup) {\r\n              setShowActivateChannelPopup(false);\r\n            }\r\n          }}\r\n          activateChannel={activateChannel}\r\n          loading={loading}\r\n          setChannelStakeFees={setChannelStakeFees}\r\n          channelStakeFees={channelStakeFees}\r\n        />\r\n      )}\r\n      {/* modal to add a delegate */}\r\n      {addModalOpen && (\r\n        <AddDelegateModal\r\n          onClose={() => setAddModalOpen(false)}\r\n          onSuccess={() => {\r\n            toaster.update(notificationToast(), {\r\n              render: \"Delegate Added\",\r\n              type: toaster.TYPE.INFO,\r\n              autoClose: 5000,\r\n            });\r\n          }}\r\n          addDelegate={addDelegate}\r\n        />\r\n      )}\r\n      {/* modal to remove a delegate */}\r\n      {removeModalOpen && (\r\n        <RemoveDelegateModal\r\n          onClose={() => {\r\n            setRemoveModalOpen(false);\r\n          }}\r\n          onSuccess={() => {\r\n            toaster.update(notificationToast(), {\r\n              render: \"Delegate Removed\",\r\n              type: toaster.TYPE.INFO,\r\n              autoClose: 5000,\r\n            });\r\n          }}\r\n          removeDelegate={removeDelegate}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst DropdownWrapper = styled.div`\r\n  position: absolute;\r\n  right: 20px;\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  width: 220px;\r\n  height: 230px;\r\n  padding: 20px;\r\n  padding-top: 30px;\r\n\r\n  background: #ffffff;\r\n  border: 1px solid #a9a9a9;\r\n  box-sizing: border-box;\r\n  box-shadow: 0px 4px 30px rgba(0, 0, 0, 0.1);\r\n  border-radius: 10px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ActiveChannelWrapper = styled.div`\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  display: ${(props) => (props.inactive ? \"none\" : \"flex\")};\r\n`;\r\n\r\nconst Toaster = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0px 10px;\r\n`;\r\n\r\nconst ActionTitle = styled.span`\r\n  ${(props: any) =>\r\n    props.hideit &&\r\n    css`\r\n      visibility: hidden;\r\n    `};\r\n`;\r\n\r\nconst ToasterMsg = styled.div`\r\n  margin: 0px 10px;\r\n`;\r\n\r\nconst DeactivateButton = styled.div`\r\n  text-decoration: underline;\r\n  color: ${(props) => (props.isChannelDeactivated ? \"#674C9F\" : \"#e20880\")};\r\n  text-align: center;\r\n  font-size: 16px;\r\n  line-height: 20px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ChannelActionButton = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  background-color: #674c9f;\r\n  &:hover {\r\n    opacity: ${(props) => (props.disabled ? 0.5 : 0.9)};\r\n    cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: ${(props) => (props.disabled ? 0.5 : 0.75)};\r\n    cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\r\n    pointer: hand;\r\n  }\r\n  opacity: ${(props) => (props.disabled ? 0.5 : 1)};\r\n`;\r\n\r\nconst Settings = styled.img`\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-left: auto;\r\n  margin-right: 30px;\r\n`;\r\n\r\n// Export Default\r\nexport default ChannelSettings;\r\n","import React from \"react\";\r\nimport { useClickAway } from \"react-use\";\r\nimport styled from \"styled-components\";\r\nimport ChannelSettingsDropdown from \"./ChannelSettingsDropdown\";\r\n\r\nexport default function ChannelSettings() {\r\n  const [active, setActive] = React.useState(false);\r\n  const modalRef = React.useRef(null);\r\n  const toggleActive = () => {\r\n    setActive((a) => !a);\r\n  };\r\n\r\n  useClickAway(modalRef, () => active && setActive(false));\r\n\r\n  return (\r\n    <SettingsWrapper ref={modalRef}>\r\n      <Settings\r\n        active={active}\r\n        onClick={toggleActive}\r\n        src=\"/Settings.svg\"\r\n        alt=\"\"\r\n      ></Settings>\r\n      {active && <ChannelSettingsDropdown />}\r\n    </SettingsWrapper>\r\n  );\r\n}\r\n\r\nconst SettingsWrapper = styled.div`\r\n  position: absolute;\r\n  top: 30px;\r\n  right: 30px;\r\n`;\r\n\r\nconst Settings = styled.img`\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-left: auto;\r\n  margin-right: 30px;\r\n  cursor: pointer;\r\n  transition: 400ms;\r\n  transform: ${(props) => (props.active ? \"rotateZ(35deg)\" : \"none\")};\r\n`;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\r\nimport { ALLOWED_CORE_NETWORK } from \"pages/Home\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { postReq } from \"api\";\r\nconst DATE_FORMAT = \"DD/MM/YYYY\";\r\nexport default function ChannelDetails() {\r\n  const { channelDetails, canVerify } = useSelector((state) => state.admin);\r\n  const { CHANNEL_ACTIVE_STATE, CHANNNEL_DEACTIVATED_STATE } = useSelector(\r\n    (state) => state.channels\r\n  );\r\n  const [verifyingChannel, setVerifyingChannel] = React.useState([]);\r\n  const [creationDate, setCreationDate] = React.useState(\"\");\r\n  const [ethAliasAccount, setEthAliasAccount] = React.useState(null);\r\n  const [aliasVerified, setAliasVerified] = React.useState(null); // null means error, false means unverified and true means verified\r\n  const { channelState } = channelDetails;\r\n  const channelIsActive = channelState === CHANNEL_ACTIVE_STATE;\r\n  const channelIsDeactivated = channelState === CHANNNEL_DEACTIVATED_STATE;\r\n  const { account, library, chainId } = useWeb3React();\r\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\r\n\r\n  React.useEffect(() => {\r\n    if (!channelDetails || !canVerify) return;\r\n    (async function() {\r\n      let channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(\r\n        channelDetails.verifiedBy\r\n      );\r\n      setVerifyingChannel(channelJson);\r\n    })();\r\n  }, [channelDetails, canVerify]);\r\n\r\n  React.useEffect(() => {\r\n    if (!channelDetails) return;\r\n    (async function() {\r\n      const bn = channelDetails.channelStartBlock.toString();\r\n      const block = await library.getBlock(+bn);\r\n      const date = moment(block?.timestamp * 1000);//convert from millisecs\r\n      setCreationDate(block ? date.format(DATE_FORMAT) : \"\");\r\n    })();\r\n  }, [channelDetails]);\r\n\r\n  React.useEffect(() => {\r\n    if (!onCoreNetwork) return;\r\n    (async function() {\r\n      await postReq(\"/channels/get_alias_details\", {\r\n        channel : account,\r\n        op: \"read\",\r\n      }).then(async ({ data }) => {\r\n        const aliasAccount = data;\r\n        console.log(aliasAccount);\r\n        if (aliasAccount.aliasAddress) {\r\n          setEthAliasAccount(aliasAccount.aliasAddress);\r\n            await postReq(\"/channels/get_alias_verification_status\", {\r\n              aliasAddress: account,\r\n              op: \"read\",\r\n            }).then(({ data }) => {\r\n              // if it returns undefined then we need to let them know to verify their channel\r\n              if (!data) {\r\n                setAliasVerified(false);\r\n                return;\r\n              }\r\n              const { status } = data;\r\n              setAliasVerified(status || false);\r\n              return data;\r\n            });\r\n        }\r\n      });\r\n    })();\r\n  }, [account , chainId]);\r\n\r\n  return (\r\n    <ChannelDetailsWrapper>\r\n      <SectionTop>\r\n        <ImageSection src={channelDetails.icon}></ImageSection>\r\n\r\n        <Details>\r\n          <ChannelName>\r\n            {channelDetails.name}\r\n            {canVerify && <VerifyImage src=\"/verify.png\"></VerifyImage>}\r\n          </ChannelName>\r\n          <ChanneStateText active={channelIsActive}>\r\n            {channelIsActive\r\n              ? \"ACTIVE\"\r\n              : channelIsDeactivated\r\n              ? \"DEACTIVATED\"\r\n              : \"BLOCKED\"}\r\n          </ChanneStateText>\r\n          <Subscribers>\r\n            <img src=\"/people.svg\"></img>\r\n            <SubscribersCount>\r\n              {channelDetails.subscribers.length}\r\n            </SubscribersCount>\r\n          </Subscribers>\r\n        </Details>\r\n      </SectionTop>\r\n\r\n      <SectionDes>{channelDetails.info}</SectionDes>\r\n        {aliasVerified === false && <span style={{ fontSize : \"16px\" , fontWeight : 500, color : \"red\"}}>Please Verify Alias on Polygon</span>}\r\n      <SectionDate>\r\n        {canVerify && (\r\n          <Verified>\r\n            <span>verified by:</span>\r\n\r\n            <VerifyingIcon src={verifyingChannel.icon}></VerifyingIcon>\r\n            <VerifyingName>{verifyingChannel.name}</VerifyingName>\r\n          </Verified>\r\n        )}\r\n\r\n        <Date>\r\n          <span>created on:</span>\r\n          <span style={{ marginLeft: \"10px\" }}>{creationDate}</span>\r\n        </Date>\r\n      </SectionDate>\r\n\r\n      <hr />\r\n    </ChannelDetailsWrapper>\r\n  );\r\n}\r\n\r\nconst ChannelDetailsWrapper = styled.div`\r\n  padding: 30px;\r\n  padding-bottom: 0;\r\n`;\r\n\r\nconst SectionTop = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst ImageSection = styled.img`\r\n  width: 120px;\r\n  height: 120px;\r\n  border-radius: 50%;\r\n  margin-right: 20px;\r\n`;\r\nconst VerifyImage = styled.img`\r\n  width: 20px;\r\n  height: 25px;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  margin-left: 8px;\r\n`;\r\n\r\nconst VerifyingIcon = styled.img`\r\n  height: 20px;\r\n  width: 20px;\r\n  border-radius: 50%;\r\n  margin-left: 6px;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst VerifyingName = styled.div``;\r\n\r\nconst Subscribers = styled.div`\r\n  height: fit-content;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst ActiveIcon = styled.span`\r\n  width: 8px;\r\n  height: 8px;\r\n  background: #57c255;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst ChanneStateText = styled.span`\r\n  color: #57c255;\r\n  font-family: Source Sans Pro;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 18px;\r\n  line-height: 23px;\r\n  letter-spacing: 0.1em;\r\n  text-transform: uppercase;\r\n  color: ${(props) => (props.active ? \"#57c255\" : \"red\")};\r\n  margin-bottom: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  ${(props) =>\r\n    props.active &&\r\n    `\r\n        &::after {\r\n            width:8px;\r\n            height: 8px;\r\n            background: #57c255;\r\n            border-radius: 50%;\r\n            content: \"\";\r\n            display: inline-flex;\r\n            align-items: center;\r\n            margin-left: 6px;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst SubscribersCount = styled.span`\r\n  margin-left: 5px;\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n  height: 16px;\r\n  background: #35c5f3;\r\n  border-radius: 10px;\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  line-height: 17px;\r\n  display: inline-block;\r\n  color: #ffffff;\r\n`;\r\n\r\nconst Details = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst SectionLine = styled.div`\r\n  margin-left: 30px;\r\n  margin-right: 30px;\r\n`;\r\n\r\nconst Date = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 240px;\r\n  color: #674c9f;\r\n`;\r\n\r\nconst Verified = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  & > span {\r\n    color: #ec008c;\r\n    fontsize: 1em;\r\n    fontweight: bolder;\r\n  }\r\n`;\r\n\r\nconst ChannelName = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-family: Source Sans Pro;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 30px;\r\n  line-height: 38px;\r\n  margin-right: 8px;\r\n  text-transform: capitalize;\r\n  color: #e20880;\r\n`;\r\n\r\nconst SectionDate = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  line-height: 25px;\r\n  letter-spacing: 0.1em;\r\n  text-transform: uppercase;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst SectionDes = styled.div`\r\n  font-family: Source Sans Pro;\r\n  font-style: normal;\r\n  font-weight: 300;\r\n  font-size: 24px;\r\n  line-height: 30px;\r\n  letter-spacing: 0.1em;\r\n  text-transform: uppercase;\r\n  color: #000000;\r\n  margin-bottom: 40px;\r\n`;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Section, Content } from \"components/SharedStyling\";\r\n\r\nimport SendNotifications from \"components/SendNotifications\";\r\nimport ChannelSettings from \"components/ChannelSettings\";\r\nimport ChannelDetails from \"components/ChannelDetails\";\r\nimport CreateChannel from \"components/CreateChannel\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// CREATE CHANNEL OWNER DASHBOARD\r\nfunction ChannelOwnerDashboard() {\r\n  const { channelDetails, delegatees } = useSelector((state) => state.admin);\r\n  return (\r\n    <>\r\n      <Section>\r\n        <ModifiedContent>\r\n          {/* display the create channel page if there are no details */}\r\n          {!channelDetails ? <CreateChannel /> : \"\"}\r\n          {/* display the create channel page if there are no details */}\r\n          {/* display the channel settings */}\r\n          {channelDetails ? <ChannelSettings /> : \"\"}\r\n          {/* display the channel settings */}\r\n          {/* display the details about the profile of the channel */}\r\n          {channelDetails ? <ChannelDetails /> : \"\"}\r\n          {/* display the details about the profile of the channel */}\r\n          {/* display the notifications settings */}\r\n          {channelDetails || delegatees?.length ? <SendNotifications /> : \"\"}\r\n          {/* display the notifications settings */}\r\n        </ModifiedContent>\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst ModifiedContent = styled(Content)`\r\n  padding: 0;\r\n  position: relative;\r\n`;\r\n\r\n// Export Default\r\nexport default ChannelOwnerDashboard;\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport {Section, Content} from 'components/SharedStyling';\r\n\r\nimport CreateChannel from 'components/CreateChannel';\r\n\r\n// CREATE CHANNEL OWNER DASHBOARD\r\nfunction ChannelCreationDashboard() {\r\n  React.useEffect(() => {\r\n\r\n  });\r\n\r\n  // RRENDER\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Content padding=\"0px\">\r\n          <CreateChannel />\r\n        </Content>\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\n\r\n\r\n// Export Default\r\nexport default ChannelCreationDashboard;\r\n","import EPNSCoreHelper from 'helpers/EPNSCoreHelper';\r\nimport { ethers } from \"ethers\";\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\n\r\n// STATIC SINGLETON\r\nexport const UserEvents = {\r\n    SUBSCRIBED: \"Subscribed\",\r\n    UNSUBSCRIBED: \"Unsubscribed\",\r\n    PUBLIC_KEY_BROADCASTED: \"PublicKeyBroadcasted\",\r\n    CREATED_CHANNEL: \"CreatedChannel\",\r\n    DEACTIVATE_CHANNEL: \"DeactivateChannel\",\r\n}\r\n\r\nexport default class UsersDataStore {\r\n    static instance = UsersDataStore.instance || new UsersDataStore();\r\n\r\n    state = {\r\n      usersCount: -1,\r\n      userMeta: null,\r\n      ownerMeta: null,\r\n\r\n      callbacks: [],\r\n\r\n      account: null,\r\n      epnsReadProvider: null,\r\n      epnsCommReadProvider: null\r\n    }\r\n\r\n    // init\r\n    init = (account, epnsReadProvider, epnsCommReadProvider) => {\r\n      // set account\r\n      this.state.account = account;\r\n\r\n      // First attach listeners then overwrite the old one if any\r\n      this.resetUsersListeners();\r\n      this.state.epnsReadProvider = epnsReadProvider;\r\n      this.state.epnsCommReadProvider = epnsCommReadProvider;\r\n      this.initUsersListenersAsync();\r\n\r\n      // next get store user count & user meta\r\n      this.getOwnerMetaAsync();\r\n      this.getUsersCountAsync();\r\n      this.getUserMetaAsync();\r\n    }\r\n\r\n    // RESET LISTENERS\r\n    resetUsersListeners = () => {\r\n      // only proceed if a read provider is attached\r\n      if (this.state.epnsReadProvider) {\r\n        this.state.epnsCommReadProvider.removeAllListeners(\"Subscribe\");\r\n        this.state.epnsCommReadProvider.removeAllListeners(\"Unsubscribe\");\r\n        this.state.epnsCommReadProvider.removeAllListeners(\"PublicKeyRegistered\");\r\n        this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\r\n        this.state.epnsReadProvider.removeAllListeners(\"DeactivateChannel\");\r\n      }\r\n\r\n      // reset user meta as well\r\n      this.state.userMeta = null;\r\n    }\r\n\r\n    // init LISTENERS\r\n    initUsersListenersAsync = async () => {\r\n      // Add Listeners\r\n      await this.listenForSubscribedAsync();\r\n      await this.listenForUnsubscribedAsync();\r\n\r\n      if (!this.state.userMeta || (this.state.userMeta && !this.state.userMeta.publicKeyRegistered)) {\r\n        await this.listenForPublicKeyBroadcastAsync();\r\n      }\r\n    }\r\n\r\n    // 1. Listen for Subscribe Async\r\n    listenForSubscribedAsync = async () => {\r\n      // TODO use the right contract comms\r\n      // const contract = this.state.epnsReadProvider;\r\n      // let filter = contract.filters.Subscribe(null, this.state.account);\r\n\r\n      // if (this.state.userMeta) {\r\n      //   this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.add(1);\r\n      // }\r\n\r\n      // contract.on(filter, async (channel, user) => {\r\n      //   // then perform callbacks\r\n      //   if (this.state.callbacks[UserEvents.SUBSCRIBED]) {\r\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.SUBSCRIBED])) {\r\n      //       if (callback) { callback(channel, user); }\r\n      //     }\r\n      //   }\r\n      // });\r\n    }\r\n\r\n    // 2. Listen for Unsubscribe Async\r\n    listenForUnsubscribedAsync = async () => {\r\n      // TODO Use the COMMUNICATOR CONTRACT\r\n      // const contract = this.state.epnsReadProvider;\r\n      // let filter = contract.filters.Unsubscribe(null, this.state.account);\r\n\r\n      // if (this.state.userMeta) {\r\n      //   this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.sub(1);\r\n      // }\r\n\r\n      // contract.on(filter, async (channel, user) => {\r\n      //   // then perform callbacks\r\n      //   if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\r\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\r\n      //       if (callback) { callback(channel, user); }\r\n      //     }\r\n      //   }\r\n      // });\r\n    }\r\n\r\n    // 3. Listen For Public Key Broadcast\r\n    listenForPublicKeyBroadcastAsync = async () => {\r\n        // TODO Use the COMMUNICATOR CONTRACT\r\n      // const contract = this.state.epnsReadProvider;\r\n      // let filter = contract.filters.PublicKeyRegistered(this.state.account, null);\r\n\r\n      // if (this.state.userMeta) {\r\n      //   this.state.userMeta.publicKeyRegistered = true;\r\n      // }\r\n\r\n      // contract.once(filter, async (channel, user) => {\r\n      //   // then perform callbacks\r\n      //   if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\r\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\r\n      //       if (callback) { callback(channel, user); }\r\n      //     }\r\n      //   }\r\n      // });\r\n    }\r\n\r\n    // FOR CALLBACKS\r\n    addCallbacks = (callbackType, callbackID, callback) => {\r\n      // first check if callback already exists\r\n      if (!this.state.callbacks[callbackType]) {\r\n        this.state.callbacks[callbackType] = {};\r\n      }\r\n\r\n      if (!this.state.callbacks[callbackType][callbackID]) {\r\n        this.state.callbacks[callbackType][callbackID] = callback;\r\n      }\r\n    }\r\n\r\n    removeCallbacks = (callbackType, callbackID) => {\r\n      // first check if callback already exists\r\n      if (this.state.callbacks[callbackType][callbackID]) {\r\n        this.state.callbacks[callbackType][callbackID] = null;\r\n      }\r\n    }\r\n\r\n    // GET OWNER META\r\n    getOwnerMetaAsync = async () => {\r\n      const enableLogs = 0;\r\n\r\n      return new Promise ((resolve, reject) => {\r\n        if (this.state.ownerMeta) {\r\n          if (enableLogs) console.log(\"getOwnerMetaAsync() [CACHED] --> %o\", this.state.ownerMeta);\r\n          resolve(this.state.ownerMeta);\r\n        }\r\n        else {\r\n          EPNSCoreHelper.getOwnerInfo(this.state.epnsReadProvider)\r\n            .then(response => {\r\n              this.state.ownerMeta = response;\r\n\r\n              if (enableLogs) console.log(\"getOwnerMetaAsync() --> %o\", response);\r\n              resolve(this.state.ownerMeta);\r\n            })\r\n            .catch(err => {\r\n              console.log(\"!!!Error, getOwnerMetaAsync() --> %o\", err);\r\n              reject(err);\r\n            });\r\n        }\r\n      });\r\n    }\r\n\r\n    // USERS COUNT\r\n    getUsersCountAsync = async () => {\r\n      return new Promise (async (resolve, reject) => {\r\n        if (this.state.channelsCount == -1) {\r\n          // Count not set, get and set it first\r\n          const count = EPNSCoreHelper.getTotalNumberOfUsers(this.state.epnsReadProvider)\r\n            .then(response => {\r\n              this.state.usersCount = response;\r\n              console.log(\"getUsersCountAsync() --> %o\", response);\r\n              resolve(this.state.usersCount)\r\n            })\r\n            .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\r\n        }\r\n        else {\r\n          resolve(this.state.usersCount);\r\n        }\r\n      });\r\n    }\r\n\r\n    incrementUsersCountAsync = async (incrementCount) => {\r\n      return new Promise ((resolve, reject) => {\r\n        this.getUsersCountAsync()\r\n          .then(response => {\r\n            this.state.usersCount = response + incrementCount;\r\n            console.log(\"incrementChannelsCountAsync() --> %d\", this.state.usersCount);\r\n            resolve(this.state.usersCount);\r\n          })\r\n          .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\r\n      });\r\n    }\r\n\r\n    // GET USER META\r\n    getUserMetaAsync = async () => {\r\n      const enableLogs = 0;\r\n\r\n      return new Promise ((resolve, reject) => {\r\n        if (this.state.userMeta) {\r\n          if (enableLogs) console.log(\"getUserMetaAsync() [CACHED] --> %o\", this.state.userMeta);\r\n          resolve(this.state.userMeta);\r\n        }\r\n        else {\r\n          EPNSCoreHelper.getUserInfo(this.state.account, this.state.epnsCommReadProvider)\r\n            .then(response => {\r\n              this.state.userMeta = response;\r\n\r\n              if (enableLogs) console.log(\"getUserMetaAsync() --> %o\", this.state.userMeta);\r\n              resolve(this.state.userMeta);\r\n            })\r\n            .catch(err => {\r\n              console.log(\"!!!Error, getUserMetaAsync() --> %o\", err);\r\n              reject(err);\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n}\r\n","/**\r\n * This file helps us maintain a global state of all contracts to be used across the application\r\n * This is used to prevent duplication of logic and instantiating contracts multiple times\r\n * This is also used to prevent passing props everywhere and making the code ugly\r\n */\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  ZERO_ADDRESS: \"0x0000000000000000000000000000000000000000\",\r\n  epnsReadProvider: null, // the core contract reader\r\n  epnsWriteProvider: null, // the core contract with signer\r\n  epnsCommReadProvider: null, // the communicator contract reader\r\n  epnsCommWriteProvider: null, // the communicator write contract with signer\r\n  pushAdminAddress: null, // the address of the push admin\r\n};\r\n\r\nexport const contractSlice = createSlice({\r\n  name: \"contracts\",\r\n  initialState,\r\n  reducers: {\r\n    setCoreReadProvider: (state, action) => {\r\n      state.epnsReadProvider = action.payload;\r\n    },\r\n    setCoreWriteProvider: (state, action) => {\r\n      state.epnsWriteProvider = action.payload;\r\n    },\r\n    setCommunicatorReadProvider: (state, action) => {\r\n      state.epnsCommReadProvider = action.payload;\r\n    },\r\n    setCommunicatorWriteProvider: (state, action) => {\r\n      state.epnsCommWriteProvider = action.payload;\r\n    },\r\n    setPushAdmin: (state, action) => {\r\n      state.pushAdminAddress = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {\r\n  setCoreReadProvider,\r\n  setCoreWriteProvider,\r\n  setCommunicatorReadProvider,\r\n  setCommunicatorWriteProvider,\r\n  setPushAdmin\r\n} = contractSlice.actions;\r\n\r\nexport default contractSlice.reducer;\r\n","import React from \"react\";\r\nimport ReactGA from \"react-ga\";\r\nimport { ethers } from \"ethers\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport hex2ascii from \"hex2ascii\";\r\nimport { addresses, abis, envConfig } from \"@project/contracts\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nimport config from \"config\";\r\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\r\nimport NotificationToast from \"components/NotificationToast\";\r\nimport AliasVerificationodal from \"components/AliasVerificationModal\";\r\nimport Info from \"segments/Info\";\r\nimport SpamBox from \"segments/spam\";\r\nimport Feedbox from \"segments/Feedbox\";\r\nimport ViewChannels from \"segments/ViewChannels\";\r\nimport ChannelOwnerDashboard from \"segments/ChannelOwnerDashboard\";\r\nimport ChannelCreationDashboard from \"segments/ChannelCreationDashboard\";\r\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\r\nimport UsersDataStore from \"singletons/UsersDataStore\";\r\nimport { postReq } from \"api\";\r\nimport {\r\n  setCoreReadProvider,\r\n  setCoreWriteProvider,\r\n  setCommunicatorReadProvider,\r\n  setCommunicatorWriteProvider,\r\n  setPushAdmin,\r\n} from \"redux/slices/contractSlice\";\r\nimport {\r\n  setUserChannelDetails,\r\n  setCanVerify,\r\n  setDelegatees,\r\n} from \"redux/slices/adminSlice\";\r\nimport { addNewNotification, toggleToggler, resetState } from \"redux/slices/notificationSlice\";\r\n\r\nexport const ALLOWED_CORE_NETWORK = envConfig.coreContractChain; //chainId of network which we have deployed the core contract on\r\nconst CHANNEL_TAB = 1; //Default to 1 which is the channel tab\r\n\r\n// Create Header\r\nfunction Home() {\r\n  ReactGA.pageview(\"/home\");\r\n\r\n  const dispatch = useDispatch();\r\n  const { account, library, chainId } = useWeb3React();\r\n  const {\r\n    epnsReadProvider,\r\n    epnsWriteProvider,\r\n    epnsCommReadProvider,\r\n  } = useSelector((state) => state.contracts);\r\n\r\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\r\n  const INITIAL_OPEN_TAB = CHANNEL_TAB; //if they are not on a core network.redirect then to the notifications page\r\n\r\n  const [controlAt, setControlAt] = React.useState(0);\r\n  const [modalOpen, setModalOpen] = React.useState(false);\r\n  const [adminStatusLoaded, setAdminStatusLoaded] = React.useState(false);\r\n  const [aliasEthAccount, setAliasEthAccount] = React.useState(null);\r\n  const [aliasVerified, setAliasVerified] = React.useState(null); // null means error, false means unverified and true means verified\r\n  const [channelAdmin, setChannelAdmin] = React.useState(false);\r\n  const [channelJson, setChannelJson] = React.useState([]);\r\n\r\n  // toast related section\r\n  const [toast, showToast] = React.useState(null);\r\n  const clearToast = () => showToast(null);\r\n  const showNetworkToast = () => {\r\n    showToast({\r\n      notificationTitle: (\r\n        <span style={{ color: \"#e20880\" }}> Invalid Network </span>\r\n      ),\r\n      notificationBody:\r\n        \"Please connect to the Main network to access channels\",\r\n    });\r\n  };\r\n\r\n  //clear toast variable after it is shown\r\n  React.useEffect(() => {\r\n    if (toast) {\r\n      clearToast();\r\n    }\r\n  }, [toast]);\r\n  // toast related section\r\n\r\n  React.useEffect(() => {\r\n    dispatch(resetState());\r\n    setTimeout(() => dispatch(toggleToggler()), 300)\r\n  }, [account]);\r\n\r\n  /**\r\n   * Logic to get channel alias and alias verification status as well as create instances of core and comunicator contract\r\n   */\r\n  React.useEffect(() => {\r\n    (async function init() {\r\n      const coreProvider = onCoreNetwork\r\n        ? library\r\n        : ethers.getDefaultProvider(ALLOWED_CORE_NETWORK, {\r\n            etherscan: config.etherscanToken,\r\n          });\r\n      // if we are not on the core network then check for if this account is an alias for another channel\r\n      if (!onCoreNetwork) {\r\n        // get the eth address of the alias address, in order to properly render information about the channel\r\n        const aliasEth = await postReq(\"/channels/get_eth_address\", {\r\n          aliasAddress: account,\r\n          op: \"read\",\r\n        }).then(({ data }) => {\r\n          console.log({ data });\r\n          const ethAccount = data;\r\n          if (ethAccount) {\r\n            setAliasEthAccount(ethAccount.ethAddress);\r\n          }\r\n          return data;\r\n        });\r\n        if (aliasEth) {\r\n          // if an alias exists, check if its verified.\r\n          await postReq(\"/channels/get_alias_verification_status\", {\r\n            aliasAddress: account,\r\n            op: \"read\",\r\n          }).then(({ data }) => {\r\n            // if it returns undefined then we need to let them know to verify their channel\r\n            if (!data) {\r\n              setAliasVerified(false);\r\n              return;\r\n            }\r\n            const { status } = data;\r\n            setAliasVerified(status || false);\r\n            return data;\r\n          });\r\n        }\r\n      }\r\n      // if we are not on the core network then fetch if there is an alias address from the api\r\n      // inititalise the read contract for the core network\r\n      const coreContractInstance = new ethers.Contract(\r\n        addresses.epnscore,\r\n        abis.epnscore,\r\n        coreProvider\r\n      );\r\n      // initialise the read contract for the communicator function\r\n      const commAddress = onCoreNetwork\r\n        ? addresses.epnsEthComm\r\n        : addresses.epnsPolyComm;\r\n      const commContractInstance = new ethers.Contract(\r\n        commAddress,\r\n        abis.epnsComm,\r\n        library\r\n      );\r\n      dispatch(setCommunicatorReadProvider(commContractInstance));\r\n      dispatch(setCoreReadProvider(coreContractInstance));\r\n      // initialise the read contract for the communicator function\r\n      if (!!(library && account)) {\r\n        let signer = library.getSigner(account);\r\n        const coreSignerInstance = new ethers.Contract(\r\n          addresses.epnscore,\r\n          abis.epnscore,\r\n          signer\r\n        );\r\n        const communicatorSignerInstance = new ethers.Contract(\r\n          commAddress,\r\n          abis.epnsComm,\r\n          signer\r\n        );\r\n        dispatch(setCoreWriteProvider(coreSignerInstance));\r\n        dispatch(setCommunicatorWriteProvider(communicatorSignerInstance));\r\n      }\r\n    })();\r\n  }, [account, chainId]);\r\n\r\n  /**\r\n   * When we instantiate the contract instances, fetch basic information about the user\r\n   * Corresponding channel owned.\r\n   */\r\n  React.useEffect(() => {\r\n    if (!epnsReadProvider || !epnsCommReadProvider) return;\r\n    // Reset when account refreshes\r\n    setChannelAdmin(false);\r\n    dispatch(setUserChannelDetails(null));\r\n    setAdminStatusLoaded(false);\r\n    userClickedAt(INITIAL_OPEN_TAB);\r\n    setChannelJson([]);\r\n    // save push admin to global state\r\n    epnsReadProvider.pushChannelAdmin().then((response) => {\r\n      dispatch(setPushAdmin(response));\r\n    });\r\n\r\n    // EPNS Read Provider Set\r\n    if (epnsReadProvider != null && epnsCommReadProvider != null) {\r\n      // Instantiate Data Stores\r\n      UsersDataStore.instance.init(\r\n        account,\r\n        epnsReadProvider,\r\n        epnsCommReadProvider\r\n      );\r\n      ChannelsDataStore.instance.init(\r\n        account,\r\n        epnsReadProvider,\r\n        epnsCommReadProvider\r\n      );\r\n      checkUserForChannelOwnership();\r\n      fetchDelegators();\r\n    }\r\n  }, [epnsReadProvider, epnsCommReadProvider]);\r\n\r\n  // handle user action at control center\r\n  const userClickedAt = (controlIndex) => {\r\n    setControlAt(controlIndex);\r\n  };\r\n\r\n  // fetch all the channels who have delegated to this account\r\n  const fetchDelegators = () => {\r\n    postReq(\"/channels/delegatee/get_channels\", {\r\n      delegateAddress: account,\r\n      op: \"read\",\r\n    })\r\n      .then(async ({ data: delegators }) => {\r\n        // if there are actual delegators\r\n        // fetch basic information abouot the channels and store it to state\r\n        if (delegators && delegators.channelOwners) {\r\n          const channelInformationPromise = [\r\n            ...new Set([account, ...delegators.channelOwners])//make the accounts unique\r\n          ].map((channelAddress) =>\r\n            ChannelsDataStore.instance\r\n              .getChannelJsonAsync(channelAddress)\r\n              .then((res) => ({ ...res, address: channelAddress }))\r\n              .catch(() => false)\r\n          );\r\n          const channelInformation = await Promise.all(\r\n            channelInformationPromise\r\n          );\r\n          dispatch(setDelegatees(channelInformation.filter(Boolean)));\r\n          // fetch the json information about this delegatee channel and add to global state\r\n        } else {\r\n          dispatch(setDelegatees([]));\r\n        }\r\n      })\r\n      .catch(async (err) => {\r\n        console.log({ err });\r\n      });\r\n  };\r\n\r\n  // Check if a user is a channel or not\r\n  const checkUserForChannelOwnership = async () => {\r\n    // Check if account is admin or not and handle accordingly\r\n    const ownerAccount = !onCoreNetwork ? aliasEthAccount : account;\r\n    EPNSCoreHelper.getChannelJsonFromUserAddress(ownerAccount, epnsReadProvider)\r\n      .then(async (response) => {\r\n        // if channel admin, then get if the channel is verified or not, then also fetch more details about the channel\r\n        const verificationStatus = await epnsReadProvider.getChannelVerfication(\r\n          ownerAccount\r\n        );\r\n        const channelJson = await epnsReadProvider.channels(ownerAccount);\r\n        const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(\r\n          ownerAccount\r\n        );\r\n        dispatch(\r\n          setUserChannelDetails({\r\n            ...response,\r\n            ...channelJson,\r\n            subscribers: channelSubscribers,\r\n          })\r\n        );\r\n        dispatch(setCanVerify(Boolean(verificationStatus)));\r\n        setChannelJson(response);\r\n        setChannelAdmin(true);\r\n        setAdminStatusLoaded(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\r\n          \"There was an error [checkUserForChannelOwnership]:\",\r\n          err.message\r\n        );\r\n        setChannelAdmin(false);\r\n        setAdminStatusLoaded(true);\r\n      })\r\n      .finally(() => {\r\n        setAdminStatusLoaded(true);\r\n      });\r\n  };\r\n\r\n  // Render\r\n  return (\r\n    <Container>\r\n      <Controls>\r\n        <ControlButton\r\n          index={0}\r\n          active={controlAt == 0 ? 1 : 0}\r\n          border=\"#e20880\"\r\n          onClick={() => {\r\n            userClickedAt(0);\r\n          }}\r\n        >\r\n          <ControlImage\r\n            src=\"./svg/feedbox.svg\"\r\n            active={controlAt == 0 ? 1 : 0}\r\n          />\r\n          <ControlText active={controlAt == 0 ? 1 : 0}>Inbox</ControlText>\r\n        </ControlButton>\r\n\r\n        <ControlButton\r\n          index={1}\r\n          active={controlAt == 1 ? 1 : 0}\r\n          border=\"#35c5f3\"\r\n          onClick={() => {\r\n            userClickedAt(1);\r\n          }}\r\n        >\r\n          <ControlImage\r\n            src=\"./svg/channel.svg\"\r\n            active={controlAt == 1 ? 1 : 0}\r\n          />\r\n          <ControlText active={controlAt == 1 ? 1 : 0}>Channels</ControlText>\r\n        </ControlButton>\r\n\r\n        <ControlButton\r\n          index={2}\r\n          active={controlAt == 2 ? 1 : 0}\r\n          border=\"#674c9f\"\r\n          disabled={!adminStatusLoaded}\r\n          onClick={() => {\r\n            if (adminStatusLoaded) {\r\n              // if youre not on kovan and you dont have a channel, you cannot create except on kovan, so throw error\r\n              if (!channelAdmin && !onCoreNetwork) {\r\n                return showNetworkToast();\r\n              }\r\n              if (channelAdmin && !aliasVerified && !onCoreNetwork) {\r\n                return setModalOpen(true);\r\n              }\r\n              userClickedAt(2);\r\n            }\r\n          }}\r\n        >\r\n          {!adminStatusLoaded && (\r\n            <Loader type=\"Oval\" color=\"#674c9f\" height={32} width={32} />\r\n          )}\r\n          {channelAdmin &&\r\n            adminStatusLoaded &&\r\n            (onCoreNetwork ? true : aliasVerified) && (\r\n              <ControlChannelContainer>\r\n                <ControlChannelImage\r\n                  src={`${channelJson.icon}`}\r\n                  active={controlAt == 2 ? 1 : 0}\r\n                />\r\n                <ControlChannelText active={controlAt == 2 ? 1 : 0}>\r\n                  {channelJson.name}\r\n                </ControlChannelText>\r\n              </ControlChannelContainer>\r\n            )}\r\n          {channelAdmin &&\r\n            adminStatusLoaded &&\r\n            aliasVerified === false &&\r\n            !onCoreNetwork && (\r\n              <ControlChannelContainer>\r\n                <ControlChannelImage\r\n                  src={`${channelJson.icon}`}\r\n                  active={controlAt == 2 ? 1 : 0}\r\n                />\r\n                <ControlChannelText active={controlAt == 2 ? 1 : 0}>\r\n                  Verify channel alias\r\n                </ControlChannelText>\r\n              </ControlChannelContainer>\r\n            )}\r\n          {channelAdmin &&\r\n            adminStatusLoaded &&\r\n            aliasVerified === null &&\r\n            !onCoreNetwork && (\r\n              <ControlChannelContainer>\r\n                <ControlChannelImage\r\n                  src={`${channelJson.icon}`}\r\n                  active={controlAt == 2 ? 1 : 0}\r\n                />\r\n                <ControlChannelText active={controlAt == 2 ? 1 : 0}>\r\n                  Contact the admin\r\n                </ControlChannelText>\r\n              </ControlChannelContainer>\r\n            )}\r\n          {!channelAdmin && adminStatusLoaded && (\r\n            <>\r\n              <ControlImage\r\n                src=\"./svg/channeladmin.svg\"\r\n                active={controlAt == 2 ? 1 : 0}\r\n              />\r\n              <ControlText active={controlAt == 2 ? 1 : 0}>\r\n                Create Your Channel\r\n              </ControlText>\r\n            </>\r\n          )}\r\n        </ControlButton>\r\n\r\n        <ControlButton\r\n          index={3}\r\n          active={controlAt == 3 ? 1 : 0}\r\n          border=\"#e20880\"\r\n          onClick={() => {\r\n            userClickedAt(3);\r\n          }}\r\n        >\r\n          <ControlImage src=\"./svg/share.svg\" active={controlAt == 3 ? 1 : 0} />\r\n          <ControlText active={controlAt == 3 ? 1 : 0}>\r\n            Receive Notifs\r\n          </ControlText>\r\n        </ControlButton>\r\n      </Controls>\r\n      <Interface>\r\n        {controlAt == 0 && <Feedbox />}\r\n        {controlAt == 1 && <ViewChannels />}\r\n        {controlAt == 2 && adminStatusLoaded && <ChannelOwnerDashboard />}\r\n        {controlAt == 3 && <Info />}\r\n        {toast && (\r\n          <NotificationToast notification={toast} clearToast={clearToast} />\r\n        )}\r\n        {modalOpen && (\r\n          <AliasVerificationodal\r\n            onClose={(val) => setModalOpen(val)}\r\n            onSuccess={() => setAliasVerified(true)}\r\n            verificationStatus={aliasVerified}\r\n            aliasEthAccount={aliasEthAccount}\r\n          />\r\n        )}\r\n      </Interface>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css style\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: block;\r\n  flex-direction: column;\r\n  min-height: calc(100vh - 100px);\r\n`;\r\n\r\nconst Controls = styled.div`\r\n  flex: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ControlButton = styled.div`\r\n  flex: 1 1 21%;\r\n  height: 120px;\r\n  min-width: 200px;\r\n  background: #fff;\r\n\r\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\r\n  border-radius: 15px;\r\n  border: 1px solid rgb(225, 225, 225);\r\n\r\n  border-bottom: 10px solid rgb(180, 180, 180);\r\n  margin: 20px;\r\n  overflow: hidden;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  border-bottom: 10px solid\r\n    ${(props) => (props.active ? props.border : \"rgb(180,180,180)\")};\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`;\r\n\r\nconst ControlImage = styled.img`\r\n  height: 30%;\r\n  margin-right: 15px;\r\n  filter: ${(props) => (props.active ? \"brightness(1)\" : \"brightness(0)\")};\r\n  opacity: ${(props) => (props.active ? \"1\" : \"0.25\")};\r\n\r\n  transition: transform 0.2s ease-out;\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      transform: scale(3.5) translate(-20px, 0px);\r\n      opacity: 0.4;\r\n    `};\r\n`;\r\n\r\nconst ControlText = styled.label`\r\n  font-size: 16px;\r\n  font-weight: 200;\r\n  opacity: ${(props) => (props.active ? \"1\" : \"0.75\")};\r\n\r\n  transition: transform 0.2s ease-out;\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      transform: scale(1.3) translate(-10px, 0px);\r\n    `};\r\n`;\r\n\r\nconst ControlChannelContainer = styled.div`\r\n  margin: 0px 20px;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst ControlChannelImage = styled.img`\r\n  width: 20%;\r\n  margin-bottom: 10px;\r\n  transition: transform 0.2s ease-out;\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      transform: scale(3.5) translate(-40px, 5px);\r\n      opacity: 0.2;\r\n      z-index: 1;\r\n    `};\r\n`;\r\n\r\nconst ControlChannelText = styled.label`\r\n  font-size: 16px;\r\n  font-weight: 300;\r\n  opacity: ${(props) => (props.active ? \"1\" : \"0.75\")};\r\n  transition: transform 0.2s ease-out;\r\n  background: -webkit-linear-gradient(#db268a, #34c6f3);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  z-index: 2;\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      transform: scale(1.1) translate(0px, -20px);\r\n    `};\r\n`;\r\n\r\nconst Interface = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n\r\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\r\n  border-radius: 20px;\r\n  border: 1px solid rgb(225, 225, 225);\r\n\r\n  margin: 15px;\r\n  overflow: hidden;\r\n`;\r\n\r\n// Export Default\r\nexport default Home;\r\n","// Usage:\r\n//   create component file (e.g. BlockiesIdenticon.js) using uncommented code below\r\n//   npm install blockies-identicon\r\n//   in the file you want to use the component (e.g. BlockiesIdenticon.js):\r\n//   import Blockies from \"blockies/react-component\";\r\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\r\n\r\nimport React from 'react';\r\nimport blockies from \"./blockies\";\r\n\r\nexport default class BlockiesIdenticon extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  getOpts () {\r\n    return {\r\n      seed: this.props.opts.seed || \"foo\",\r\n      color: this.props.opts.color || \"#dfe\",\r\n      bgcolor: this.props.opts.bgcolor || \"#a71\",\r\n      size: this.props.opts.size || 15,\r\n      scale: this.props.opts.scale || 3,\r\n      spotcolor: this.props.opts.spotcolor || \"#000\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.draw();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    // Check for prop change\r\n    if (this.props.seed !== prevProps.seed) {\r\n      this.draw();\r\n    }\r\n  }\r\n  draw() {\r\n    blockies.render({\r\n      seed: this.props.opts.seed,\r\n      size: this.props.opts.size,\r\n      scale: this.props.opts.scale\r\n    }, this.canvas);\r\n  }\r\n  render() {\r\n    return React.createElement(\"canvas\", {ref: canvas => this.canvas = canvas});\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\n\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport Loader from 'react-loader-spinner'\r\nimport Blockies from \"components/BlockiesIdenticon\";\r\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\r\n\r\n// Create Header\r\nfunction Profile() {\r\n  const { active, error, account, library, chainId } = useWeb3React();\r\n\r\n  const [address, setAddress] = React.useState('');\r\n  const [ens, setENS] = React.useState('');\r\n  const [ensFetched, setENSFetched] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (account && account != '') {\r\n      // Check if the address is the same\r\n      if (address !== account) {\r\n        setENS('');\r\n        setENSFetched(false);\r\n\r\n        // get ens\r\n        library\r\n          .lookupAddress(account).then(function(name) {\r\n            setENS(name);\r\n            setENSFetched(true);\r\n            setAddress(account);\r\n          })\r\n          .catch(() => {\r\n            setENSFetched(true);\r\n            setAddress(account);\r\n          })\r\n      }\r\n\r\n    }\r\n  }, [account]);\r\n\r\n  // to create blockies\r\n\r\n  return (\r\n    <>\r\n    {account && account !== '' && !error &&\r\n      <Container>\r\n        <Blocky>\r\n          <BlockyInner>\r\n             <Blockies seed={account.toLowerCase()} opts={{seed: account.toLowerCase(), size: 7, scale: 7}}/>\r\n          </BlockyInner>\r\n        </Blocky>\r\n        <Wallet>\r\n        {!ensFetched &&\r\n          <Loader\r\n      \t     type=\"Oval\"\r\n      \t     color=\"#FFF\"\r\n      \t     height={16}\r\n      \t     width={16}\r\n      \t  />\r\n        }\r\n        {ensFetched && ens &&\r\n          <>{ens}</>\r\n        }\r\n        {ensFetched && !ens &&\r\n          <>{account.substring(0, 6)}.....{account.substring(account.length - 6)}</>\r\n        }\r\n        </Wallet>\r\n      </Container>\r\n    }\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.button`\r\n  margin: 0;\r\n  padding: 0;\r\n  background: none;\r\n  border: 0;\r\n  outline: 0;\r\n  justify-content: flex-start;\r\n  flex: 1,\r\n  flex-direction: row;\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst Blocky = styled.div`\r\n  position: relative;\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 100%;\r\n  overflow: hidden;\r\n  transform: scale(0.85);\r\n  outline-width: 2px;\r\n  outline-color: rgba(225,225,225,1);\r\n`\r\n\r\nconst BlockyInner = styled.div`\r\n`\r\n\r\nconst Wallet = styled.span`\r\n  margin: 0px 10px;\r\n  padding: 8px 15px;\r\n  height: 16px;\r\n  display: flex;\r\n  align-items: baseline;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  color: #fff;\r\n  border-radius: 15px;\r\n  background: rgb(226,8,128);\r\n  background: linear-gradient(107deg, rgba(226,8,128,1) 30%, rgba(103,76,159,1) 70%, rgba(53,197,243,1) 100%);\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\n\r\n// Export Default\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { AnimateOnChange } from 'react-animation';\r\n\r\n// Create Header\r\nfunction Bell({ badgeCount, bellPressedCB, width, height }) {\r\n  const [badge, setBadge] = React.useState(0);\r\n  const [ring, setRing] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    // Set new badge count and ring the bell\r\n    setBadge(badgeCount);\r\n\r\n    if (badge > 0) {\r\n      setResetRinger();\r\n    }\r\n  }, [badgeCount]);\r\n\r\n  const setResetRinger = () => {\r\n    setRing(true);\r\n\r\n    setTimeout(() => {\r\n        setRing(false)\r\n    }, 500);\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      onClick={() => {\r\n        if (bellPressedCB) {bellPressedCB();}\r\n      }}\r\n      width={width}\r\n      height={height}\r\n    >\r\n      <BellImage ring={ring} src=\"./bell.png\" className=\"tadaaa\" ringme={ring} width={width} height={height} />\r\n      <BellImageAbs src=\"./bellball.png\" width={width} height={height} />\r\n      <BellImageAbs src=\"./ring.png\" width={width} height={height} />\r\n      {badge != 0 &&\r\n        <AnimateOnChange\r\n          animationIn=\"fadeIn\"\r\n          animationOut=\"fadeOut\"\r\n          durationOut={200}\r\n        >\r\n          <Badge>{badge}</Badge>\r\n        </AnimateOnChange>\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Container = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  background: transparent;\r\n  border: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0 10px;\r\n  position: relative;\r\n  height: ${props => props.height || 40}px;\r\n  width: ${props => props.width || 40}px;\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    pointer: hand;\r\n  }\r\n`\r\n\r\nconst tadaaa = keyframes`\r\n  0% {\r\n    -webkit-transform: scale3d(1, 1, 1);\r\n    -ms-transform: scale3d(1, 1, 1);\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n\r\n  10%, 20% {\r\n    -webkit-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\r\n    -ms-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\r\n    transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\r\n  }\r\n\r\n  30%, 50%, 70%, 90% {\r\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\r\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\r\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\r\n  }\r\n\r\n  40%, 60%, 80% {\r\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\r\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\r\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\r\n  }\r\n\r\n  100% {\r\n    -webkit-transform: scale3d(1, 1, 1);\r\n    -ms-transform: scale3d(1, 1, 1);\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n`;\r\n\r\nconst BellImage = styled.img`\r\n  position: absolute;\r\n  height: ${props => props.height || 40}px;\r\n  width: ${props => props.width || 40}px;\r\n\r\n  transition: transform .2s ease-out;\r\n  ${ props => props.ringme && css`\r\n    animation: ${tadaaa} 1s ease-out;\r\n  `};\r\n\r\n\r\n`\r\n\r\nconst BellImageAbs = styled(BellImage)`\r\n  left: 0,\r\n`\r\n\r\nconst Badge = styled.span`\r\n  position: absolute;\r\n  font-size: 10px;\r\n  color: #fff;\r\n  padding: 2px 4px;\r\n  border-radius: 100%;\r\n  background: rgba(208.0, 44.0, 30.0, 1.0);\r\n  top: 0px;\r\n  left: 5px;\r\n  font-weight: bold;\r\n`\r\n\r\n// Export Default\r\nexport default Bell;\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport {Section, Item, ItemH, Button} from 'components/SharedStyling';\r\n\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\r\n} from '@web3-react/injected-connector'\r\nimport { Web3Provider } from 'ethers/providers'\r\n\r\nimport Profile from 'components/Profile';\r\nimport Bell from 'components/Bell';\r\n\r\n\r\n// Create Header\r\nfunction Header() {\r\n  const context = useWeb3React<Web3Provider>()\r\n\r\n  const { active, error } = useWeb3React();\r\n  const { deactivate } = context\r\n\r\n  const [showLoginControls, setShowLoginControls] = React.useState(false);\r\n\r\n  function getErrorMessage(error: Error) {\r\n    if (error instanceof NoEthereumProviderError) {\r\n      return 'Web3 not enabled, install MetaMask on desktop or visit from a dApp browser on mobile'\r\n    } else if (error instanceof UnsupportedChainIdError) {\r\n      return \"Unsupported Network, please connect to the Main or Polygon network\"\r\n    } else if (\r\n      error instanceof UserRejectedRequestErrorInjected\r\n    ) {\r\n      return 'Please authorize this website to access the dApp'\r\n    } else {\r\n      console.error(error)\r\n      return 'An unknown error occurred. Check the console for more details'\r\n    }\r\n  }\r\n\r\n  const bellPressed = () => {\r\n    setShowLoginControls(!showLoginControls);\r\n  }\r\n\r\n  const disconnect = () => {\r\n    setShowLoginControls(false);\r\n    deactivate();\r\n  }\r\n\r\n  return (\r\n    <HeaderContainer\r\n      direction=\"row\"\r\n      padding=\"10px 15px\"\r\n    >\r\n      <ItemH\r\n        justify=\"flex-start\"\r\n        flex=\"0\"\r\n      >\r\n        {active && !error &&\r\n          <Profile />\r\n        }\r\n        {!active &&\r\n          <Logo src=\"epns.png\" />\r\n        }\r\n      </ItemH>\r\n\r\n      <ItemH\r\n        justify=\"flex-end\"\r\n      >\r\n        {active && !error &&\r\n          <Bell\r\n            badgeCount={0}\r\n            bellPressedCB={bellPressed}\r\n            width={32}\r\n            height={32}\r\n          />\r\n        }\r\n\r\n        {showLoginControls &&\r\n          <Item\r\n            position=\"absolute\"\r\n          >\r\n            <Button\r\n              bg=\"#000\"\r\n              size=\"12px\"\r\n              spacing=\"0.2em\"\r\n              textTransform=\"uppercase\"\r\n              weight=\"600\"\r\n              radius=\"20px\"\r\n              onClick={() => disconnect()}\r\n            >\r\n              Disconnect\r\n            </Button>\r\n          </Item>\r\n        }\r\n\r\n        <ItemH\r\n          justify=\"flex-end\"\r\n          flex=\"initial\"\r\n        >\r\n          {!!error &&\r\n            <PrimaryTheme>{getErrorMessage(error)}</PrimaryTheme>\r\n          }\r\n          {!active && !error &&\r\n            <ThirdTheme>Please connect to a Web3 Network</ThirdTheme>\r\n          }\r\n          <Connection phase={active ? 'active' : error ? 'error' : 'waiting'} />\r\n        </ItemH>\r\n      </ItemH>\r\n    </HeaderContainer>\r\n  );\r\n}\r\n\r\n// CSS Styles\r\nconst HeaderContainer = styled(Section)`\r\n  @media (max-width: 1440px) {\r\n    background: rgb(255,255,255);\r\n  }\r\n`\r\n\r\nconst Logo = styled.img`\r\n  height: 40px;\r\n`\r\n\r\nconst Notice = styled.span`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px 15px;\r\n  margin: 10px;\r\n  color: #fff;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n`\r\n\r\nconst PrimaryTheme = styled(Notice)`\r\n  background: #e20880;\r\n`\r\n\r\nconst ThirdTheme = styled(Notice)`\r\n  background: #674c9f;\r\n`\r\n\r\nconst Connection = styled.span`\r\n  height: 10px;\r\n  width: 10px;\r\n  border-radius: 100%;\r\n  flex-shrink: 0;\r\n\r\n  ${props => props.phase === 'active' && css`\r\n    background: #77DD77;\r\n  `};\r\n\r\n  ${props => props.phase === 'waiting' && css`\r\n    background: #FFAE42;\r\n  `};\r\n\r\n  ${props => props.phase === 'error' && css`\r\n    background: #DC143C;\r\n  `};\r\n`\r\n\r\n// Export Default\r\nexport default Header;\r\n","import React from \"react\";\r\nimport ReactGA from \"react-ga\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Web3Provider } from \"ethers/providers\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { AbstractConnector } from \"@web3-react/abstract-connector\";\r\nimport { useEagerConnect, useInactiveListener } from \"hooks\";\r\nimport { envConfig } from \"@project/contracts\";\r\nimport { injected, walletconnect, portis, ledger } from \"connectors\";\r\nimport Home from \"pages/Home\";\r\nimport Header from \"segments/Header\";\r\nimport styled from \"styled-components\";\r\nimport { Item, ItemH, Span, H2, B, A,C } from \"components/SharedStyling\";\r\nimport UnderProgressModal from './components/UnderProgressModal';\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport TimerComponent from './segments/TimerComponent';\r\nimport countdown from './config/countdown';\r\nimport * as dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\n// define the different type of connectors which we use\r\nconst web3Connectors = {\r\n  Injected: {\r\n    obj: injected,\r\n    logo: \"./svg/login/metamask.svg\",\r\n    title: \"MetaMask\",\r\n  },\r\n  WalletConnect: {\r\n    obj: walletconnect,\r\n    logo: \"./svg/login/walletconnect.svg\",\r\n    title: \"Wallet Connect\",\r\n  },\r\n  // Trezor: {obj: trezor, logo: './svg/login/trezor.svg', title: 'Trezor'},\r\n  // Ledger: { obj: ledger, logo: \"./svg/login/ledger.svg\", title: \"Ledger\" },\r\n  Portis: { obj: portis, logo: \"./svg/login/portis.svg\", title: \"Portis\" },\r\n};\r\n\r\nexport default function App() {\r\n  const { connector, activate, active, error } = useWeb3React<Web3Provider>();\r\n  const [activatingConnector, setActivatingConnector] = React.useState<\r\n    AbstractConnector\r\n  >();\r\n  const [currentTime,setcurrentTime]=React.useState(0);\r\n  \r\n\r\n  React.useEffect(()=>{\r\n    const now = Date.now()/ 1000;\r\n    setcurrentTime(now)\r\n  },[])\r\n  React.useEffect(() => {\r\n    if (activatingConnector && activatingConnector === connector) {\r\n      setActivatingConnector(undefined);\r\n    }\r\n  }, [activatingConnector, connector]);\r\n\r\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\r\n  const triedEager = useEagerConnect();\r\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\r\n  useInactiveListener(!triedEager || !!activatingConnector);\r\n  // Initialize GA\r\n  ReactGA.initialize(envConfig.googleAnalyticsId);\r\n  ReactGA.pageview(\"/login\");\r\n  \r\n  // Production \r\n  console.log = function(){}\r\n  return (\r\n    <>\r\n    \r\n      <HeaderContainer>\r\n        <Header/>\r\n      </HeaderContainer>\r\n\r\n      <ParentContainer>\r\n        \r\n        {active && !error && (\r\n          <HomeContainer>\r\n\r\n            <Home />\r\n          </HomeContainer>\r\n        )}\r\n\r\n        {!active && (\r\n          <Item>\r\n            {/* <UnderProgressModal/> */}\r\n\r\n            <ProviderLogo\r\n              src=\"./epnshomelogo.png\"\r\n              srcSet={\"./epnshomelogo@2x.png 2x, ./epnshomelogo@2x.png 3x\"}\r\n            />\r\n            <Item\r\n              bg=\"#fafafa\"\r\n              border=\"1px solid #ddd\"\r\n              padding=\"15px\"\r\n              radius=\"12px\"\r\n            >\r\n              <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n                <Span bg=\"#e20880\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">\r\n                  Connect\r\n                </Span>\r\n                <Span weight=\"200\"> Your Wallet</Span>\r\n              </H2>\r\n\r\n              <ItemH maxWidth=\"800px\" align=\"stretch\">\r\n                {Object.keys(web3Connectors).map((name) => {\r\n                  const currentConnector = web3Connectors[name].obj;\r\n                  const connected = currentConnector === connector;\r\n                  const disabled =\r\n                    !triedEager ||\r\n                    !!activatingConnector ||\r\n                    connected ||\r\n                    !!error;\r\n                  const image = web3Connectors[name].logo;\r\n                  const title = web3Connectors[name].title;\r\n\r\n                  return (\r\n                    <ProviderButton\r\n                      disabled={disabled}\r\n                      key={name}\r\n                      onClick={() => {\r\n                        setActivatingConnector(currentConnector);\r\n                        activate(currentConnector);\r\n                      }}\r\n                      border=\"#35c5f3\"\r\n                    >\r\n                      <ProviderImage src={image} />\r\n\r\n                      <Span\r\n                        spacing=\"0.1em\"\r\n                        textTransform=\"uppercase\"\r\n                        size=\"12px\"\r\n                        weight=\"600\"\r\n                        padding=\"10px\"\r\n                      >\r\n                        {title}\r\n                      </Span>\r\n                    </ProviderButton>\r\n                  );\r\n                })}\r\n              </ItemH>\r\n            </Item>\r\n\r\n            <Span margin=\"10px\" size=\"14px\">\r\n              By unlocking your wallet, <B>You agree</B> to our{\" \"}\r\n              <A href=\"https://epns.io/tos\" target=\"_blank\">\r\n                Terms of Service\r\n              </A>{\" \"}\r\n              and our{\" \"}\r\n              <A href=\"https://epns.io/privacy\" target=\"_blank\">\r\n                Privacy Policy\r\n              </A>\r\n              .\r\n            </Span>\r\n            <Item\r\n              bg=\"#fafafa\"\r\n              border=\"1px solid #ddd\"\r\n              padding=\"30px 15px\"\r\n              radius=\"12px\"\r\n              width=\"50rem\"\r\n            >\r\n              <StyledItem>\r\n              <span> Note: </span> The EPNS protocol has been under development for 1+ year,  and completed a <C href=\"https://epns.io/EPNS-Protocol-Audit2021.pdf\" target=\"_blank\"> ChainSafe audit </C> in October 2021. However, the mainnet is still a new product milestone.  Always DYOR, and anticipate bugs and UI improvements.  Learn how to report any bugs in our  <C href=\"https://discord.com/invite/YVPB99F9W5\" target=\"_blank\">Discord.</C>\r\n              </StyledItem>\r\n            </Item>\r\n          </Item>\r\n        )}\r\n      </ParentContainer>\r\n\r\n      <ToastContainer\r\n        position=\"bottom-right\"\r\n        autoClose={false}\r\n        newestOnTop\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n// CSS STYLES\r\nconst StyledItem = styled(Item)`\r\n  font-size: 14px;\r\n  letter-spacing: 0.4px;\r\n  display: block;\r\n  span{\r\n    color: #e20880;\r\n  }\r\n`;\r\nconst HeaderContainer = styled.header`\r\n  left: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  z-index: 999;\r\n`;\r\n\r\nconst ParentContainer = styled.div`\r\n  flex-wrap: wrap;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  margin: 80px 20px 50px 20px;\r\n  flex: 1;\r\n`;\r\n\r\nconst HomeContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  align-self: center;\r\n  width: 100%;\r\n  max-width: 1100px;\r\n`;\r\n\r\nconst ProviderLogo = styled.img`\r\n  width: 15vw;\r\n  align-self: center;\r\n  display: flex;\r\n  margin: 10px 20px 20px 20px;\r\n  min-width: 200px;\r\n`;\r\n\r\nconst ProviderButton = styled.button`\r\n  flex: 1 1 0;\r\n  min-width: 280px;\r\n  background: #fff;\r\n  outline: 0;\r\n\r\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\r\n  border-radius: 15px;\r\n  border: 1px solid rgb(225, 225, 225);\r\n\r\n  margin: 20px;\r\n  overflow: hidden;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 10px;\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    border: 1px solid ${(props) => props.border};\r\n  }\r\n  &:active {\r\n    opacity: 0.75;\r\n    cursor: pointer;\r\n    border: 1px solid ${(props) => props.border};\r\n  }\r\n`;\r\n\r\nconst ProviderImage = styled.img`\r\n  width: 32px;\r\n  max-height: 32px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst ProviderLabel = styled.span`\r\n  font-size: 12px;\r\n  margin: 5px;\r\n`;\r\n\r\nconst StyledContainer = styled(ToastContainer).attrs({\r\n  // custom props\r\n})`\r\n  .Toastify__toast-container {\r\n  }\r\n  .Toastify__toast {\r\n  }\r\n  .Toastify__toast--error {\r\n  }\r\n  .Toastify__toast--warning {\r\n  }\r\n  .Toastify__toast--success {\r\n  }\r\n  .Toastify__toast-body {\r\n    font-size: 12px;\r\n  }\r\n  .Toastify__progress-bar {\r\n  }\r\n`;\r\n","import {configureStore, combineReducers, getDefaultMiddleware} from '@reduxjs/toolkit';\r\nimport contractReducer from './slices/contractSlice';\r\nimport channelReducer from './slices/channelSlice';\r\nimport adminReducer from './slices/adminSlice';\r\nimport notificationReducer from './slices/notificationSlice';\r\nimport spamReducer from './slices/spamSlice';\r\n\r\nconst rootReducer = combineReducers({\r\n\tcontracts: contractReducer,\r\n    channels: channelReducer,\r\n    admin: adminReducer,\r\n\tnotifications: notificationReducer,\r\n\tspam: spamReducer\r\n});\r\n\r\nconst store = configureStore({\r\n\treducer: rootReducer,\r\n\tmiddleware: getDefaultMiddleware({\r\n\t\tserializableCheck: false,\r\n\t\timmutableCheck: false\r\n\t})\r\n});\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ethers } from \"ethers\";\r\nimport { Provider } from \"react-redux\";\r\nimport { Web3ReactProvider } from \"@web3-react/core\";\r\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\r\n\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport * as dotenv from \"dotenv\";\r\n\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\nimport \"./index.css\";\r\n\r\n// enable environmental variables across the entire application\r\ndotenv.config();\r\n// You should replace this uri with your own and put it into a .env file\r\nconst client = new ApolloClient({\r\n  uri: \"https://api.thegraph.com/subgraphs/name/epnsproject/epnsstaging\",\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\n/**\r\n * A utility function used to get the provider\r\n */\r\nfunction getLibrary(provider) {\r\n  const gottenProvider = new ethers.providers.Web3Provider(provider, \"any\");\r\n  // adding this is important to deal with changing networks\r\n  gottenProvider.on(\"network\", (_, oldNetwork) => {\r\n    if (oldNetwork) {\r\n      // when network has been changed, refresh the page\r\n      window.location.reload();\r\n    }\r\n  });\r\n  return gottenProvider;\r\n}\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ApolloProvider client={client}>\r\n      <Web3ReactProvider getLibrary={getLibrary}>\r\n        <App />\r\n      </Web3ReactProvider>\r\n    </ApolloProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// environmental configurations for the dapp for different environments\r\nconst config = {\r\n    apiUrl: \"https://backend-prod.epns.io/apis\", //the right backend URL to be used\r\n    allowedNetworks: [\r\n        1, //for eth\r\n        137 //for polygon\r\n    ],\r\n    coreContractChain: 1, //the chain id of the network which the core contract relies on\r\n    coreRPC: \"https://mainnet.infura.io/v3/4ff53a5254144d988a8318210b56f47a\",\r\n    googleAnalyticsId: \"UA-165415629-1\"\r\n};\r\n\r\nexport default config;","// This address points to a dummy ERC20 contract deployed on Ethereum Mainnet,\r\n// Goerli, Kovan, Rinkeby and Ropsten. Replace it with your smart contracts.\r\nconst addresses = {\r\n  ceaErc20: \"0xc1C0472c0C80bCcDC7F5D01A376Bd97a734B8815\",\r\n  epnscore: \"0x66329Fdd4042928BfCAB60b179e1538D56eeeeeE\",\r\n  epnsEthComm: \"0xb3971BCef2D791bc4027BbfedFb47319A4AAaaAa\", // the ropsten core contract\r\n  epnsPolyComm: \"0xb3971BCef2D791bc4027BbfedFb47319A4AAaaAa\", // the ploygon comm contract\r\n  dai: \"0x6B175474E89094C44Da98b954EedeAC495271d0F\", //address for dai\r\n  aDai: \"0xcB1Fe6F440c49E9290c3eb7f158534c2dC374201\",\r\n  staking: \"0xd9218bb2a7Ff0131555A9b6F179fF5103a27a286\",\r\n  yieldFarmPUSH: \"0xFe0bcF750d4042480943CC8bA818CA3482DDf691\",\r\n  yieldFarmLP: \"0xE65fE4a8BCEB8A71D6A8D06dF2D91a9637081c61\",\r\n  epnsToken: \"0x38c4A4C7fa26eA48E34C45a9F6bDb5DA3f599c55\",\r\n  epnsLPToken: \"0x69E12FfD1170d851c096FfEC6A8eF27D26D96c0f\",\r\n  rockstar: \"0xCD1B6C8DDB9A735AA5961Ab4aa5B513fba23A3a3\", //ropsten address\r\n  batchMintNFT: \"0x9A20272669BBAa6254358ba4BB0520fFc813691C\", //ropsten address\r\n  NFTRewards: \"0x1f4CA0b2B0541b942A440A3f6673883eEacb2cb3\", //ropsten address\r\n  distributor: \"0x4Cd9Fe2E0acb9BC28fA51106b99825bd7a02309e\", //ropsten address\r\n};\r\n\r\nexport default addresses;\r\n","import erc20Abi from \"./abis/erc20\";\r\nimport ownableAbi from \"./abis/ownable\";\r\nimport epnscoreAbi from \"./abis/epnscore\";\r\nimport daiAbi from \"./abis/dai\";\r\nimport epnsTokenAbi from \"./abis/EPNS.json\";\r\nimport stakingAbi from \"./abis/Staking.json\";\r\nimport yieldFarmingAbi from \"./abis/YieldFarm.json\";\r\nimport rockstarAbi from \"./abis/Rockstar.json\";\r\nimport ec721Abi from \"./abis/ERC721.json\";\r\nimport NFTRewards from \"./abis/NFTRewards.json\";\r\nimport epnsCommAbi from \"./abis/epnsCommunicator.json\";\r\nimport MerkleDistributorAbi from \"./abis/MerkleDistributor.json\";\r\n\r\nexport const abis = {\r\n  erc20: erc20Abi,\r\n  ownable: ownableAbi,\r\n  epnscore: epnscoreAbi,\r\n  epnsPolyComm: epnsCommAbi,\r\n  epnsComm: epnsCommAbi,\r\n  dai: daiAbi,\r\n  epnsToken: epnsTokenAbi,\r\n  staking: stakingAbi,\r\n  yieldFarming: yieldFarmingAbi,\r\n  rockstar: rockstarAbi,\r\n  erc721: ec721Abi,\r\n  NFTRewards: NFTRewards,\r\n  distributor: MerkleDistributorAbi,\r\n};\r\n\r\nexport { default as envConfig } from \"./config\";\r\nexport { default as addresses } from \"./addresses\";\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport styled, { css } from \"styled-components\";\r\nimport {\r\n  Section,\r\n  Content,\r\n  Item,\r\n  ItemH,\r\n  ItemBreak,\r\n  H1,\r\n  H2,\r\n  H3,\r\n  Image,\r\n  P,\r\n  Span,\r\n  Anchor,\r\n  Button,\r\n  Showoff,\r\n  FormSubmision,\r\n  Input,\r\n  TextField,\r\n} from \"components/SharedStyling\";\r\n\r\nimport { FiLink } from \"react-icons/fi\";\r\n\r\nimport \"react-dropzone-uploader/dist/styles.css\";\r\nimport Dropzone from \"react-dropzone-uploader\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nconst ethers = require(\"ethers\");\r\n\r\nconst ipfs = require(\"ipfs-api\")();\r\n\r\nconst minStakeFees = 50;\r\nconst ALIAS_CHAINS = [{ value: \"POLYGON_TEST_MUMBAI:80001\", label: \"Polygon\" }];\r\n\r\n// Create Header\r\nfunction CreateChannel() {\r\n  const { active, error, account, library, chainId } = useWeb3React();\r\n\r\n  const [processing, setProcessing] = React.useState(0);\r\n  const [processingInfo, setProcessingInfo] = React.useState(\"\");\r\n\r\n  const [uploadDone, setUploadDone] = React.useState(false);\r\n  const [stakeFeesChoosen, setStakeFeesChoosen] = React.useState(false);\r\n  const [channelInfoDone, setChannelInfoDone] = React.useState(false);\r\n\r\n  const [chainDetails, setChainDetails] = React.useState(\"\");\r\n  const [channelName, setChannelName] = React.useState(\"\");\r\n  const [channelAlias, setChannelAlias] = React.useState(\"\");\r\n  const [channelInfo, setChannelInfo] = React.useState(\"\");\r\n  const [channelURL, setChannelURL] = React.useState(\"\");\r\n  const [channelFile, setChannelFile] = React.useState(undefined);\r\n  const [channelStakeFees, setChannelStakeFees] = React.useState(minStakeFees);\r\n\r\n  const [stepFlow, setStepFlow] = React.useState(1);\r\n\r\n  React.useEffect(() => {});\r\n\r\n  // called every time a file's `status` changes\r\n  const handleChangeStatus = ({ meta, file }, status) => {\r\n    console.log(status, meta, file);\r\n  };\r\n\r\n  const onDropHandler = (files) => {\r\n    //   var file = files[0]\r\n    //   const reader = new FileReader();\r\n    //   reader.onload = (event) => {\r\n    //     console.log(event.target.result);\r\n    //   };\r\n    //   reader.readAsDataURL(file);\r\n    // setChannelFile(file);\r\n    // console.log(\"Drop Handler\");\r\n    // console.log(file);\r\n  };\r\n\r\n  // receives array of files that are done uploading when submit button is clicked\r\n  const handleLogoSubmit = (files, allFiles) => {\r\n    // console.log(files.map(f => f.meta))\r\n    allFiles.forEach((f) => {\r\n      var file = f.file;\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      // console.log(f.file);\r\n\r\n      reader.onloadend = function(e) {\r\n        // console.log(reader.result);\r\n        const response = handleLogoSizeLimitation(reader.result);\r\n        if (response.success) {\r\n          setStepFlow(2);\r\n          setProcessing(0);\r\n          setUploadDone(true);\r\n          setChannelFile(reader.result);\r\n        } else {\r\n          setProcessing(3);\r\n          setProcessingInfo(response.info);\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleLogoSizeLimitation = (base64) => {\r\n    // Setup Error on higher size of 128px\r\n    var sizeOf = require(\"image-size\");\r\n    var base64Data = base64.split(\";base64,\").pop();\r\n    var img = Buffer.from(base64Data, \"base64\");\r\n    var dimensions = sizeOf(img);\r\n\r\n    // Only proceed if image is equal to or less than 128\r\n    if (dimensions.width > 128 || dimensions.height > 128) {\r\n      console.log(\"Image size check failed... returning\");\r\n      return {\r\n        success: 0,\r\n        info: \"Image size check failed, Image should be 128X128PX\",\r\n      };\r\n    }\r\n\r\n    // only proceed if png or jpg\r\n    // This is brilliant: https://stackoverflow.com/questions/27886677/javascript-get-extension-from-base64-image\r\n    // char(0) => '/' : jpg\r\n    // char(0) => 'i' : png\r\n    let fileext;\r\n    console.log(base64Data.charAt(0));\r\n    if (base64Data.charAt(0) == \"/\") {\r\n      return {\r\n        success: 1,\r\n        info: \"Image checks passed\",\r\n      };\r\n    } else if (base64Data.charAt(0) == \"i\") {\r\n      return {\r\n        success: 1,\r\n        info: \"Image checks passed\",\r\n      };\r\n    } else {\r\n      return {\r\n        success: 0,\r\n        info: \"Image extension should be jpg or png\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const handleCreateChannel = async (e) => {\r\n    // Check everything in order\r\n    // skip this for now\r\n    e.preventDefault();\r\n\r\n    if (\r\n      isEmpty(channelName) ||\r\n      isEmpty(channelInfo) ||\r\n      isEmpty(channelURL) ||\r\n      isEmpty(channelFile) ||\r\n      channelAlias\r\n        ? isEmpty(chainDetails)\r\n        : chainDetails\r\n        ? isEmpty(channelAlias)\r\n        : false\r\n    ) {\r\n      setProcessing(3);\r\n      setProcessingInfo(\"Channel Fields are Empty! Please retry!\");\r\n\r\n      return false;\r\n    }\r\n\r\n    // Check complete, start logic\r\n    setChannelInfoDone(true);\r\n    setProcessing(1);\r\n\r\n    console.log({\r\n      chainDetails,\r\n      channelAlias,\r\n    });\r\n    var chainDetailsSplit = chainDetails.split(\":\");\r\n    var blockchain = chainDetailsSplit[0];\r\n    var chain_id = chainDetailsSplit[1];\r\n    var address = channelAlias;\r\n\r\n    const input = JSON.stringify({\r\n      name: channelName,\r\n      info: channelInfo,\r\n      url: channelURL,\r\n      icon: channelFile,\r\n      blockchain: blockchain,\r\n      chain_id: chain_id,\r\n      address: address,\r\n    });\r\n\r\n    const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\r\n\r\n    setProcessingInfo(\"Uploading Payload...\");\r\n    const storagePointer = await ipfs.add(input);\r\n    console.log(\"IPFS storagePointer:\", storagePointer);\r\n    setProcessingInfo(\"Payload Uploaded, Approval to transfer DAI...\");\r\n    //console.log(await ipfs.cat(storagePointer));\r\n\r\n    // Send Transaction\r\n    // First Approve DAI\r\n    var signer = library.getSigner(account);\r\n\r\n    let daiContract = new ethers.Contract(addresses.dai, abis.erc20, signer);\r\n\r\n    // Pick between 50 DAI AND 25K DAI\r\n    const fees = ethers.utils.parseUnits(channelStakeFees.toString(), 18);\r\n\r\n    var sendTransactionPromise = daiContract.approve(addresses.epnscore, fees);\r\n    const tx = await sendTransactionPromise;\r\n\r\n    console.log(tx);\r\n    console.log(\"waiting for tx to finish\");\r\n    setProcessingInfo(\"Waiting for Approval TX to finish...\");\r\n\r\n    await library.waitForTransaction(tx.hash);\r\n\r\n    let contract = new ethers.Contract(\r\n      addresses.epnscore,\r\n      abis.epnscore,\r\n      signer\r\n    );\r\n\r\n    const channelType = 2; // Open Channel\r\n    const identity = \"1+\" + storagePointer; // IPFS Storage Type and HASH\r\n    const identityBytes = ethers.utils.toUtf8Bytes(identity);\r\n\r\n    var anotherSendTxPromise = contract.createChannelWithFees(\r\n      channelType,\r\n      identityBytes,\r\n      fees,\r\n      {\r\n        gasLimit: 1000000\r\n      }\r\n    );\r\n\r\n    setProcessingInfo(\"Creating Channel TX in progress\");\r\n    anotherSendTxPromise\r\n      .then(async function(tx) {\r\n        console.log(tx);\r\n        console.log(\"Check: \" + account);\r\n        try {\r\n          await tx.wait(1);\r\n          setProcessing(3);\r\n          setProcessingInfo(\"Channel Created! Reloading...\");\r\n          setTimeout(() => {\r\n          window.location.reload();\r\n        }, 2000);\r\n        } catch (err) {\r\n          setProcessingInfo(\r\n            `There was an error creating your channel, Please refer to the guide -> \"https://www.notion.so/epns/How-to-EPNS-853afe64839b4cdd8c63209342a783d0\"`\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error --> %o\", err);\r\n        console.log({ err });\r\n        setProcessing(3);\r\n        setProcessingInfo(\r\n          `There was an error creating your channel, Please refer to the guide -> \"https://www.notion.so/epns/How-to-EPNS-853afe64839b4cdd8c63209342a783d0\"`\r\n        );\r\n      });\r\n  };\r\n\r\n  const isEmpty = (field) => {\r\n    if (field.trim().length == 0) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  //mind Dai\r\n  const mintDai = async () => {\r\n    try {\r\n      var signer = library.getSigner(account);\r\n      let daiContract = new ethers.Contract(addresses.dai, abis.dai, signer);\r\n      console.log({\r\n        daiContract,\r\n      });\r\n      console.log(1);\r\n      let daiAmount = 1000;\r\n      const amount = ethers.utils.parseUnits(daiAmount.toString(), 18);\r\n      console.log(2);\r\n      var mintTransactionPromise = daiContract.mint(amount);\r\n      console.log(3);\r\n      const tx = await mintTransactionPromise;\r\n      console.log(tx);\r\n      await library.waitForTransaction(tx.hash);\r\n      console.log(4);\r\n      setProcessingInfo(\"1000 Dai minted successfully!\");\r\n      console.log(\"Transaction Completed\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Content padding=\"10px 20px 20px\">\r\n          <Item align=\"flex-start\">\r\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\r\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">\r\n                Create\r\n              </Span>\r\n              <Span weight=\"200\"> Your Channel!</Span>\r\n            </H2>\r\n            <H3>\r\n              <b>Ethereum Push Notification Service</b> (EPNS) makes it\r\n              extremely easy to open and maintain a genuine channel of\r\n              communication with your users.\r\n            </H3>\r\n          </Item>\r\n        </Content>\r\n      </Section>\r\n\r\n      <Section>\r\n        <Content padding=\"0px 20px 20px\">\r\n          <ItemH justify=\"space-between\">\r\n            <Step\r\n              bg=\"#fff\"\r\n              activeBG=\"#e20880\"\r\n              type={stepFlow >= 1 ? \"active\" : \"inactive\"}\r\n            />\r\n            <Step\r\n              bg=\"#fff\"\r\n              activeBG=\"#e20880\"\r\n              type={stepFlow >= 2 ? \"active\" : \"inactive\"}\r\n            />\r\n            <Step\r\n              bg=\"#fff\"\r\n              activeBG=\"#e20880\"\r\n              type={stepFlow >= 3 ? \"active\" : \"inactive\"}\r\n            />\r\n            <Line />\r\n          </ItemH>\r\n        </Content>\r\n      </Section>\r\n\r\n      {/* Image Upload Section */}\r\n      {!uploadDone && (\r\n        <Section>\r\n          <Content padding=\"50px 20px 20px\">\r\n            <Item align=\"flex-start\">\r\n              <H3 color=\"#e20880\">\r\n                Upload Channel Logo to start the process. Make sure image is\r\n                128x128px.\r\n              </H3>\r\n            </Item>\r\n\r\n            <Item margin=\"-10px 0px 20px 0px\">\r\n              <Dropzone\r\n                onChangeStatus={handleChangeStatus}\r\n                onSubmit={handleLogoSubmit}\r\n                onDrop={onDropHandler}\r\n                maxFiles={1}\r\n                multiple={false}\r\n                accept=\"image/jpeg,image/png\"\r\n              />\r\n            </Item>\r\n            {chainId != 1 ? (\r\n              <Item align=\"flex-end\">\r\n                <Minter\r\n                  onClick={() => {\r\n                    mintDai();\r\n                  }}\r\n                >\r\n                  <Pool>\r\n                    <br></br>\r\n                    <PoolShare>Get Free DAI for Channel</PoolShare>\r\n                  </Pool>\r\n                </Minter>\r\n              </Item>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Content>\r\n        </Section>\r\n      )}\r\n\r\n      {/* Stake Fees Section */}\r\n      {uploadDone && !stakeFeesChoosen && (\r\n        <Section>\r\n          <Content padding=\"50px 0px 0px 0px\">\r\n\r\n            <Item\r\n              margin=\"-10px 20px 20px 20px\"\r\n              padding=\"20px 20px 10px 20px\"\r\n              bg=\"#f1f1f1\"\r\n            >\r\n              <Span\r\n                weight=\"400\"\r\n                size=\"1.0em\"\r\n                textTransform=\"uppercase\"\r\n                spacing=\"0.2em\"\r\n              >\r\n                Amount to be Staked: {channelStakeFees} DAI\r\n              </Span>\r\n            </Item>\r\n\r\n            <Item self=\"stretch\" align=\"stretch\" margin=\"20px 0px 0px 0px\">\r\n              <Button\r\n                bg=\"#e20880\"\r\n                color=\"#fff\"\r\n                flex=\"1\"\r\n                radius=\"0px\"\r\n                padding=\"20px 10px\"\r\n                onClick={() => {\r\n                  setStakeFeesChoosen(true);\r\n                  setStepFlow(3);\r\n                }}\r\n              >\r\n                <Span\r\n                  color=\"#fff\"\r\n                  weight=\"400\"\r\n                  textTransform=\"uppercase\"\r\n                  spacing=\"0.1em\"\r\n                >\r\n                  Continue\r\n                </Span>\r\n              </Button>\r\n            </Item>\r\n          </Content>\r\n        </Section>\r\n      )}\r\n\r\n      {/* Channel Entry */}\r\n      {uploadDone && stakeFeesChoosen && !channelInfoDone && (\r\n        <Section>\r\n          <Content padding=\"50px 0px 0px 0px\">\r\n            <Item align=\"flex-start\" margin=\"0px 20px\">\r\n              <H3 color=\"#e20880\">Setup your Channel Info</H3>\r\n            </Item>\r\n\r\n            <FormSubmision\r\n              flex=\"1\"\r\n              direction=\"column\"\r\n              margin=\"0px\"\r\n              justify=\"center\"\r\n              size=\"1.1rem\"\r\n              onSubmit={handleCreateChannel}\r\n            >\r\n              <Item\r\n                margin=\"-10px 20px 15px 20px\"\r\n                flex=\"1\"\r\n                self=\"stretch\"\r\n                align=\"stretch\"\r\n              >\r\n                <Input\r\n                  required\r\n                  placeholder=\"Your Channel Name\"\r\n                  maxlength=\"40\"\r\n                  padding=\"12px\"\r\n                  border=\"1px solid #000\"\r\n                  weight=\"400\"\r\n                  size=\"1.2em\"\r\n                  bg=\"#fff\"\r\n                  value={channelName}\r\n                  onChange={(e) => {\r\n                    setChannelName(e.target.value);\r\n                  }}\r\n                />\r\n                {channelName.trim().length == 0 && (\r\n                  <Span\r\n                    padding=\"4px 10px\"\r\n                    right=\"0px\"\r\n                    top=\"0px\"\r\n                    pos=\"absolute\"\r\n                    color=\"#fff\"\r\n                    bg=\"#000\"\r\n                    size=\"0.7rem\"\r\n                    z=\"1\"\r\n                  >\r\n                    Name of Channel\r\n                  </Span>\r\n                )}\r\n              </Item>\r\n\r\n              <Item\r\n                margin=\"15px 20px 15px 20px\"\r\n                flex=\"1\"\r\n                self=\"stretch\"\r\n                align=\"stretch\"\r\n                style={{ position: \"relative\" }}\r\n              >\r\n                <Select\r\n                  className=\"basic-single\"\r\n                  classNamePrefix=\"select\"\r\n                  placeholder=\"Alias network\"\r\n                  name=\"color\"\r\n                  options={ALIAS_CHAINS}\r\n                  theme={(theme) => ({\r\n                    ...theme,\r\n                    borderRadius: 0,\r\n                    colors: {\r\n                      ...theme.colors,\r\n                      primary25: \"#e20880\",\r\n                      primary: \"#e20880\",\r\n                    },\r\n                  })}\r\n                  onChange={(selectedOption) => {\r\n                    setChainDetails(selectedOption.value);\r\n                  }}\r\n                />\r\n                <Input\r\n                  placeholder=\"Your Channel's Alias address\"\r\n                  maxlength=\"40\"\r\n                  padding=\"12px\"\r\n                  style={{ paddingLeft: \"22%\" }}\r\n                  border=\"1px solid #000\"\r\n                  weight=\"400\"\r\n                  size=\"1rem\"\r\n                  bg=\"#fff\"\r\n                  value={channelAlias}\r\n                  onChange={(e) => {\r\n                    setChannelAlias(e.target.value);\r\n                  }}\r\n                />\r\n              </Item>\r\n              <Item\r\n                margin=\"15px 20px 15px 20px\"\r\n                flex=\"1\"\r\n                self=\"stretch\"\r\n                align=\"stretch\"\r\n              >\r\n                <TextField\r\n                  required\r\n                  placeholder=\"Your Channel's Short Description (200 Characters)\"\r\n                  rows=\"4\"\r\n                  maxlength=\"200\"\r\n                  radius=\"4px\"\r\n                  padding=\"12px\"\r\n                  weight=\"400\"\r\n                  border=\"1px solid #000\"\r\n                  bg=\"#fff\"\r\n                  value={channelInfo}\r\n                  onChange={(e) => {\r\n                    setChannelInfo(e.target.value);\r\n                  }}\r\n                  autocomplete=\"off\"\r\n                />\r\n              </Item>\r\n\r\n              <ItemH\r\n                margin=\"15px 20px 15px 20px\"\r\n                flex=\"1\"\r\n                self=\"stretch\"\r\n                align=\"center\"\r\n              >\r\n                <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\r\n                  <FiLink size={24} color=\"#000\" />\r\n                </Item>\r\n                <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\r\n                  <Input\r\n                    required\r\n                    placeholder=\"Call to Action Link\"\r\n                    padding=\"12px\"\r\n                    border=\"1px solid #000\"\r\n                    radius=\"4px\"\r\n                    weight=\"400\"\r\n                    bg=\"#f1f1f1\"\r\n                    value={channelURL}\r\n                    onChange={(e) => {\r\n                      setChannelURL(e.target.value);\r\n                    }}\r\n                  />\r\n                  {channelURL.trim().length == 0 && (\r\n                    <Span\r\n                      padding=\"4px 10px\"\r\n                      right=\"0px\"\r\n                      top=\"0px\"\r\n                      pos=\"absolute\"\r\n                      color=\"#fff\"\r\n                      bg=\"#000\"\r\n                      size=\"0.7rem\"\r\n                      z=\"1\"\r\n                    >\r\n                      Channel's Website URL\r\n                    </Span>\r\n                  )}\r\n                </Item>\r\n              </ItemH>\r\n\r\n              <Item\r\n                margin=\"15px 0px 0px 0px\"\r\n                flex=\"1\"\r\n                self=\"stretch\"\r\n                align=\"stretch\"\r\n              >\r\n                <Button\r\n                  bg=\"#e20880\"\r\n                  color=\"#fff\"\r\n                  flex=\"1\"\r\n                  radius=\"0px\"\r\n                  padding=\"20px 10px\"\r\n                  disabled={processing == 1 ? true : false}\r\n                >\r\n                  {processing == 1 && (\r\n                    <Loader type=\"Oval\" color=\"#fff\" height={24} width={24} />\r\n                  )}\r\n                  {processing != 1 && (\r\n                    <Input\r\n                      cursor=\"hand\"\r\n                      textTransform=\"uppercase\"\r\n                      color=\"#fff\"\r\n                      weight=\"400\"\r\n                      size=\"0.8em\"\r\n                      spacing=\"0.2em\"\r\n                      type=\"submit\"\r\n                      value=\"Setup Channel\"\r\n                    />\r\n                  )}\r\n                </Button>\r\n              </Item>\r\n            </FormSubmision>\r\n          </Content>\r\n        </Section>\r\n      )}\r\n\r\n      {/* Channel Setup Progress */}\r\n      {(processing == 1 || processing == 3) && (\r\n        <Section>\r\n          <Content padding=\"0px 0px 0px 0px\">\r\n            {processing == 1 && (\r\n              <Item margin=\"20px 0px 10px 0px\">\r\n                <Loader type=\"Oval\" color=\"#000\" height={24} width={24} />\r\n              </Item>\r\n            )}\r\n\r\n            <Item\r\n              color=\"#fff\"\r\n              bg={processing == 1 ? \"#e1087f\" : \"#000\"}\r\n              padding=\"10px 15px\"\r\n              margin=\"15px 0px\"\r\n            >\r\n              <Span\r\n                color=\"#fff\"\r\n                textTransform=\"uppercase\"\r\n                spacing=\"0.1em\"\r\n                weight=\"400\"\r\n                size=\"1em\"\r\n              >\r\n                {processingInfo}\r\n              </Span>\r\n            </Item>\r\n          </Content>\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\n// css styles\r\nconst Step = styled.div`\r\n  height: 12px;\r\n  width: 12px;\r\n  background: ${(props) => props.bg || \"#fff\"};\r\n  border: 4px solid ${(props) => props.activeBG || \"#000\"};\r\n  border-radius: 100%;\r\n\r\n  ${({ type }) =>\r\n    type == \"active\" &&\r\n    css`\r\n      background: ${(props) => props.activeBG || \"#ddd\"};\r\n      border: 4px solid #00000022;\r\n    `};\r\n`;\r\n\r\nconst Line = styled.div`\r\n  position: absolute;\r\n  height: 5px;\r\n  background: #f1f1f1;\r\n  right: 0;\r\n  left: 0;\r\n  margin: 0px 10px;\r\n  z-index: -1;\r\n`;\r\n\r\nconst Channel = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n`;\r\n\r\nconst Notice = styled.div`\r\n  margin-top: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: #674c9f;\r\n  font-size: 30px;\r\n  font-weight: 300;\r\n  margin-top: 0px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst Info = styled.label`\r\n  padding-bottom: 20px;\r\n  font-size: 14px;\r\n  color: #000;\r\n`;\r\n\r\nconst Info2 = styled(Info)``;\r\nconst Name = styled(Input)`\r\n  border-bottom: 1px solid #e20880;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst ShortInfo = styled.textarea`\r\n  outline: 0;\r\n  border: 0;\r\n  border-bottom: 1px solid #35c5f3;\r\n  margin: 10px;\r\n  font-size: 18px;\r\n  min-height: 80px;\r\n  color: #111;\r\n`;\r\n\r\nconst Url = styled(Input)`\r\n  border-bottom: 1px solid #674c9f;\r\n  font-size: 1=8px;\r\n`;\r\n\r\nconst Text = styled.span``;\r\n\r\nconst Continue = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  background: ${(props) => props.theme || \"#674c9f\"};\r\n  margin: 30px 0px 0px 0px;\r\n  border-radius: 8px;\r\n  padding: 16px;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n`;\r\nconst Minter = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: 13px;\r\n`;\r\n\r\nconst ChannelMetaBox = styled.label`\r\n  margin: 0px 5px;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n  font-size: 15px;\r\n  // font-size: 11px;\r\n`;\r\nconst Pool = styled.div`\r\n  margin: 0px 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst PoolShare = styled(ChannelMetaBox)`\r\n  background: #e20880;\r\n  // background: #674c9f;\r\n`;\r\n\r\n// Export Default\r\nexport default CreateChannel;\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport const Section = styled.section`\r\n  display: flex;\r\n  align-self: stretch;\r\n  justify-content: center;\r\n  align-items: ${props => props.align || 'initial'};\r\n  flex-direction: ${props => props.direction || 'column'};\r\n  background: ${props => props.theme || 'transparent'};\r\n  background: ${props => props.gradient || 'undefined'};\r\n  margin: ${props => props.margin || '0px'};\r\n  padding: ${props => props.padding || '0px'};\r\n  overflow: ${props => props.overflow || 'initial'};\r\n  flex: 1;\r\n  position: relative;\r\n`\r\n\r\nexport const SectionFS = styled(Section)`\r\n  min-height: 100vh;\r\n`\r\n\r\nexport const SectionFSHero = styled(Section)`\r\n  min-height: 100vh;\r\n  background: rgb(31,23,47);\r\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\r\n`\r\n\r\nexport const SectionHero = styled(Section)`\r\n  background: rgb(31,23,47);\r\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\r\n`\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: ${props => props.padding || \"40px 0px\"};\r\n  background: ${props => props.theme || 'transparent'};\r\n  background: ${props => props.gradient || 'undefined'};\r\n  position: relative;\r\n`\r\n\r\nexport const ItemBreak = styled.div`\r\n  flex-basis: 100%;\r\n`\r\n\r\nexport const Item = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: ${props => props.wrap || 'wrap'};\r\n  position: ${props => props.position || 'relative'};\r\n  justify-content: center;\r\n  background: ${props => props.bg || 'transparent'};\r\n  flex: ${props => props.flex || '1'};\r\n  flex-direction: ${props => props.direction || 'column'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  margin: ${props => props.margin || '0px'};\r\n  min-width: ${props => props.minWidth || 'auto'};\r\n  max-width: ${props => props.maxWidth || 'initial'};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-align: ${props => props.textAlign || \"inherit\"};\r\n  filter: ${props => props.filter || \"none\"};\r\n\r\n  width: ${props => props.width || \"auto\" };\r\n  height: ${props => props.height || \"auto\" };\r\n\r\n  border: ${props => props.border || \"none\"};\r\n\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  overflow: ${props => props.overflow || \"initial\"};\r\n\r\n  &:hover & {\r\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\r\n    text-align: ${props => (props.tabletTextAlign ? props.tabletTextAlign : (props.textAlign ? props.textAlign : \"inherit\")) || \"inherit\"};\r\n  }\r\n\r\n  ${ItemBreak} {\r\n    width: 0;\r\n  }\r\n`\r\n\r\nexport const ItemH = styled(Item)`\r\n  flex-direction: row;\r\n  flex: ${props => props.flex || '1'};\r\n\r\n  ${ItemBreak} {\r\n    width: auto;\r\n    height: 0;\r\n  }\r\n`\r\n\r\nexport const WaveOuter = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: ${props => props.bottom || '-70px'};\r\n  top: ${props => props.top || 'auto'};\r\n  transform: ${props => props.transform || 'initial'};\r\n`;\r\n\r\nexport const WaveInner = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  transform: ${props => props.transform || 'initial'};\r\n`;\r\n\r\nexport const Arc = styled.div`\r\n  position: absolute;\r\n\toverflow: hidden;\r\n\twidth: 100%;\r\n\theight: 300px;\r\n\r\n  bottom: ${props => props.bottom || 'auto'};\r\n  top: ${props => props.top || 'auto'};\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n  \twidth: 300%;\r\n  \theight: 300%;\r\n  \ttop: -25%;\r\n  \tleft: -100%;\r\n\r\n\r\n    ${ props => props.arcRGB && css`\r\n      \tbackground: radial-gradient(ellipse at center, ${props.arcRGB}00 0%, ${props.arcRGB}00 50%, ${props.arcRGB}ff 50%, ${props.arcRGB}ff 100%);\r\n    `};\r\n  }\r\n`\r\n\r\nexport const H1 = styled.h1`\r\n  @media (max-width: 480px) {\r\n    font-size: 2.1rem;\r\n  }\r\n`\r\n\r\nexport const H2 = styled.h2`\r\n  color: ${props => props.color || '#000'};\r\n  font-weight: ${props => props.weight || 600};\r\n  font-size: ${props => props.size || \"2rem\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  margin: ${props => props.margin || \"20px 0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\r\n  text-align: ${props => props.textAlign || \"inherit\"};\r\n`\r\n\r\nexport const H3 = styled.h3`\r\n  color: ${props => props.color || 'rgb(0 0 0 / 0.5)'};\r\n  font-weight: ${props => props.weight || 300};\r\n  font-size: ${props => props.size || \"1rem\"};\r\n  text-transform: ${props => props.textTransform || \"uppercase\"};\r\n  margin: ${props => props.margin || \"-15px 0px 20px 0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"0.1em\"};\r\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\r\n  text-align: ${props => props.textAlign || \"inherit\"};\r\n  max-width: ${props => props.maxWidth || 'initial'};\r\n`\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n  display: flex;\r\n`\r\n\r\nexport const P = styled.p`\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n\r\n  color: ${props => props.color || '#000'};\r\n  background: ${props => props.bg || 'transparent'};\r\n  font-weight: ${props => props.weight || 300};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  margin: ${props => props.margin || \"20px 0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  text-align: ${props => props.textAlign || \"initial\"};\r\n`\r\n\r\nexport const Para = styled(P)`\r\n  font-weight: ${props => props.weight || 300};\r\n  letter-spacing: ${props => props.spacing || \"0.02em\"};\r\n  font-size: ${props => props.size || \"1.1em\"};\r\n  color: ${props => props.color || \"#000000ee\"};\r\n`\r\n\r\nexport const Span = styled.span`\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n\r\n  color: ${props => props.color || '#000'};\r\n  background: ${props => props.bg || 'transparent'};\r\n  font-weight: ${props => props.weight || 300};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  margin: ${props => props.margin || \"0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  text-align: ${props => props.textAlign || \"initial\"};\r\n\r\n  position: ${props => props.pos || 'initial'};\r\n  right: ${props => props.right || 'auto'};\r\n  left: ${props => props.left || 'auto'};\r\n  bottom: ${props => props.bottom || 'auto'};\r\n  top: ${props => props.top || 'auto'};\r\n\r\n  z-index: ${props => props.z || 'auto'};\r\n`\r\n\r\nexport const B = styled.span`\r\n  color: ${props => props.color || '#000'};\r\n  font-weight: ${props => props.weight || 'bold'};\r\n`\r\n\r\nexport const UL = styled.ul`\r\n\r\n`\r\n\r\nexport const LI = styled.li`\r\n  margin: 10px 0px;\r\n`\r\n\r\nexport const Anchor = styled.a`\r\n  display: flex;\r\n  flex-direction: ${props => props.direction || 'row'};\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  font-weight: ${props => props.weight || 400};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  color: ${props => props.color || \"#fff\"};\r\n  background: ${props => props.bg || \"transparent\"};\r\n  margin: ${props => props.margin || \"0\"};\r\n  padding: ${props => props.padding || \"10px 15px\"};\r\n  letter-spacing: ${props => props.spacing || \"0.2em\"};\r\n  border: ${props => props.border || \"none\"};\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  width: ${props => props.width || \"initial\" };\r\n\r\n  position: relative;\r\n  text-decoration: none;\r\n  overflow: ${props => props.overflow || \"hidden\"};\r\n  z-index: 3;\r\n\r\n  filter: ${props => props.filter || \"none\"};\r\n\r\n  cursor: pointer;\r\n  pointer: hand;\r\n\r\n  &:hover & {\r\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\r\n  }\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\r\n    display: none;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${props => props.hoverBG || \"#000\"};\r\n    opacity: 0;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:hover:before {\r\n    display: block;\r\n  }\r\n\r\n  &:hover:after {\r\n    opacity: 0.08;\r\n  }\r\n  &:active:after {\r\n    opacity: 0.15;\r\n  }\r\n`\r\n\r\nexport const A = styled(Anchor)`\r\n  display: inline;\r\n  color: #e1087f;\r\n  background: transparent;\r\n  padding: 0px;\r\n  letter-spacing: inherit;\r\n  text-transform: initial;\r\n`\r\n\r\nexport const C = styled(Anchor)`\r\n  display: inline;\r\n  color: #4292e4;\r\n  background: transparent;\r\n  padding: 0px;\r\n  letter-spacing: inherit;\r\n  text-transform: initial;\r\n`\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  font-weight: ${props => props.weight || 400};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  color: ${props => props.color || \"#fff\"};\r\n  background: ${props => props.bg || \"tranparent\"};\r\n  margin: ${props => props.margin || \"0\"};\r\n  padding: ${props => props.padding || \"10px 15px\"};\r\n  letter-spacing: ${props => props.spacing || \"initial\"};\r\n  border: ${props => props.border || \"none\"};\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  text-transform: ${props => props.textTransform || \"initial\"};\r\n\r\n  position: relative;\r\n  text-decoration: none;\r\n  overflow: ${props => props.overflow || \"hidden\"};\r\n  z-index: 3;\r\n\r\n  cursor: pointer;\r\n  pointer: hand;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\r\n    display: none;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${props => props.hoverBG || \"#000\"};\r\n    opacity: 0;\r\n    z-index: -1;\r\n  }\r\n\r\n  &:hover:before {\r\n    display: block;\r\n  }\r\n\r\n  &:hover:after {\r\n    opacity: 0.08;\r\n  }\r\n  &:active:after {\r\n    opacity: 0.15;\r\n  }\r\n\r\n  & > div {\r\n    display: flex;\r\n  }\r\n`\r\n\r\nexport const Showoff = styled.div`\r\n  position: absolute;\r\n  right: ${props => props.right || 'auto'};\r\n  left: ${props => props.left || 'auto'};\r\n  bottom: ${props => props.bottom || 'auto'};\r\n  top: ${props => props.top || 'auto'};\r\n  transform: ${props => props.transform || 'initial'};\r\n  opacity: ${props => props.opacity || 'initial'};\r\n\r\n  @media (max-width: 768px) {\r\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\r\n\r\n    right: ${props => (props.tabletRight ? props.tabletRight : (props.right ? props.right : \"auto\")) || \"auto\"};\r\n    left: ${props => (props.tabletLeft ? props.tabletLeft : (props.left ? props.left : \"auto\")) || \"auto\"};\r\n    top: ${props => (props.tabletTop ? props.tabletTop : (props.top ? props.top : \"auto\")) || \"auto\"};\r\n    bottom: ${props => (props.tabletBottom ? props.tabletBottom : (props.bottom ? props.bottom : \"auto\")) || \"auto\"};\r\n\r\n    transform: ${props => (props.tabletTransform ? props.tabletTransform : (props.transform ? props.transform : \"auto\")) || \"auto\"};\r\n\r\n    opacity: ${props => (props.tabletOpacity ? props.tabletOpacity : (props.opacity ? props.opacity : \"auto\")) || \"initial\"};\r\n  }\r\n`\r\n\r\nexport const FormSubmision = styled.form`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  font-weight: ${props => props.weight || 400};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  color: ${props => props.color || \"#fff\"};\r\n  background: ${props => props.bg || \"transparent\"};\r\n  margin: ${props => props.margin || \"0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  border: ${props => props.border || \"none\"};\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  position: relative;\r\n`\r\n\r\nexport const Input = styled.input`\r\n  display: ${props => props.display || 'flex'};\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  font-weight: ${props => props.weight || 300};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  color: ${props => props.color || \"#000\"};\r\n  background: ${props => props.bg || \"transparent\"};\r\n  margin: ${props => props.margin || \"0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  border: ${props => props.border || \"none\"};\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  outline: ${props => props.outline || \"none\"};\r\n  overflow: ${props => props.overflow || \"hidden\"};\r\n  position: relative;\r\n\r\n  cursor: ${props => props.cursor || \"initial\"};\r\n  pointer: ${props => props.hand || \"initial\"};\r\n\r\n  &:focus + span {\r\n    opacity: 0;\r\n\r\n    -webkit-transition: all 0.2s ease-in-out;\r\n    -moz-transition: all 0.2s ease-in-out;\r\n    -o-transition: all 0.2s ease-in-out;\r\n    transition: all 0.2s ease-in-out;\r\n  }\r\n`\r\n\r\nexport const TextField = styled.textarea`\r\n  display: flex;\r\n  flex: ${props => props.flex || 'initial'};\r\n  align-self: ${props => props.self || 'auto'};\r\n  align-items: ${props => props.align || 'center'};\r\n  justify-content: ${props => props.justify || 'center'};\r\n  font-weight: ${props => props.weight || 300};\r\n  font-size: ${props => props.size || \"inherit\"};\r\n  text-transform: ${props => props.textTransform || \"inherit\"};\r\n  color: ${props => props.color || \"#000\"};\r\n  background: ${props => props.bg || \"transparent\"};\r\n  margin: ${props => props.margin || \"0px\"};\r\n  padding: ${props => props.padding || \"0px\"};\r\n  letter-spacing: ${props => props.spacing || \"inherit\"};\r\n  border: ${props => props.border || \"none\"};\r\n  border-radius: ${props => props.radius || \"0px\"};\r\n  outline: ${props => props.outline || \"none\"};\r\n  overflow: ${props => props.overflow || \"hidden\"};\r\n  position: relative;\r\n  resize: vertical;\r\n\r\n  &:focus + span {\r\n    opacity: 0;\r\n\r\n    -webkit-transition: all 0.2s ease-in-out;\r\n    -moz-transition: all 0.2s ease-in-out;\r\n    -o-transition: all 0.2s ease-in-out;\r\n    transition: all 0.2s ease-in-out;\r\n  }\r\n`\r\n","(function() {\r\n\t// The random number is a js implementation of the Xorshift PRNG\r\n\tvar randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\r\n\r\n\tfunction seedrand(seed) {\r\n\t\tfor (var i = 0; i < randseed.length; i++) {\r\n\t\t\trandseed[i] = 0;\r\n\t\t}\r\n\t\tfor (var i = 0; i < seed.length; i++) {\r\n\t\t\trandseed[i%4] = ((randseed[i%4] << 5) - randseed[i%4]) + seed.charCodeAt(i);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction rand() {\r\n\t\t// based on Java's String.hashCode(), expanded to 4 32bit values\r\n\t\tvar t = randseed[0] ^ (randseed[0] << 11);\r\n\r\n\t\trandseed[0] = randseed[1];\r\n\t\trandseed[1] = randseed[2];\r\n\t\trandseed[2] = randseed[3];\r\n\t\trandseed[3] = (randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8));\r\n\r\n\t\treturn (randseed[3]>>>0) / ((1 << 31)>>>0);\r\n\t}\r\n\r\n\tfunction createColor() {\r\n\t\t//saturation is the whole color spectrum\r\n\t\tvar h = Math.floor(rand() * 360);\r\n\t\t//saturation goes from 40 to 100, it avoids greyish colors\r\n\t\tvar s = ((rand() * 60) + 40) + '%';\r\n\t\t//lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\r\n\t\tvar l = ((rand()+rand()+rand()+rand()) * 25) + '%';\r\n\r\n\t\tvar color = 'hsl(' + h + ',' + s + ',' + l + ')';\r\n\t\treturn color;\r\n\t}\r\n\r\n\tfunction createImageData(size) {\r\n\t\tvar width = size; // Only support square icons for now\r\n\t\tvar height = size;\r\n\r\n\t\tvar dataWidth = Math.ceil(width / 2);\r\n\t\tvar mirrorWidth = width - dataWidth;\r\n\r\n\t\tvar data = [];\r\n\t\tfor(var y = 0; y < height; y++) {\r\n\t\t\tvar row = [];\r\n\t\t\tfor(var x = 0; x < dataWidth; x++) {\r\n\t\t\t\t// this makes foreground and background color to have a 43% (1/2.3) probability\r\n\t\t\t\t// spot color has 13% chance\r\n\t\t\t\trow[x] = Math.floor(rand()*2.3);\r\n\t\t\t}\r\n\t\t\tvar r = row.slice(0, mirrorWidth);\r\n\t\t\tr.reverse();\r\n\t\t\trow = row.concat(r);\r\n\r\n\t\t\tfor(var i = 0; i < row.length; i++) {\r\n\t\t\t\tdata.push(row[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tfunction buildOpts(opts) {\r\n\t\tvar newOpts = {};\r\n\r\n\t\tnewOpts.seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);\r\n\r\n\t\tseedrand(newOpts.seed);\r\n\r\n\t\tnewOpts.size = opts.size || 8;\r\n\t\tnewOpts.scale = opts.scale || 4;\r\n\t\tnewOpts.color = opts.color || createColor();\r\n\t\tnewOpts.bgcolor = opts.bgcolor || createColor();\r\n\t\tnewOpts.spotcolor = opts.spotcolor || createColor();\r\n\r\n\t\treturn newOpts;\r\n\t}\r\n\r\n\tfunction renderIcon(opts, canvas) {\r\n\t\topts = buildOpts(opts || {});\r\n\t\tvar imageData = createImageData(opts.size);\r\n\t\tvar width = Math.sqrt(imageData.length);\r\n\r\n\t\tcanvas.width = canvas.height = opts.size * opts.scale;\r\n\r\n\t\tvar cc = canvas.getContext('2d');\r\n\t\tcc.fillStyle = opts.bgcolor;\r\n\t\tcc.fillRect(0, 0, canvas.width, canvas.height);\r\n\t\tcc.fillStyle = opts.color;\r\n\r\n\t\tfor(var i = 0; i < imageData.length; i++) {\r\n\r\n\t\t\t// if data is 0, leave the background\r\n\t\t\tif(imageData[i]) {\r\n\t\t\t\tvar row = Math.floor(i / width);\r\n\t\t\t\tvar col = i % width;\r\n\r\n\t\t\t\t// if data is 2, choose spot color, if 1 choose foreground\r\n\t\t\t\tcc.fillStyle = (imageData[i] == 1) ? opts.color : opts.spotcolor;\r\n\r\n\t\t\t\tcc.fillRect(col * opts.scale, row * opts.scale, opts.scale, opts.scale);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\tfunction createIcon(opts) {\r\n\t\tvar canvas = document.createElement('canvas');\r\n\r\n\t\trenderIcon(opts, canvas);\r\n\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\tvar api = {\r\n\t\tcreate: createIcon,\r\n\t\trender: renderIcon\r\n\t};\r\n\r\n\tif (typeof module !== \"undefined\") {\r\n\t\tmodule.exports = api;\r\n\t}\r\n\tif (typeof window !== \"undefined\") {\r\n\t\t window.blockies = api;\r\n\t}\r\n\r\n})();\r\n"],"sourceRoot":""}
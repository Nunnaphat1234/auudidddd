{"version":3,"sources":["helpers/CryptoHelper.js","serviceWorker.js","connectors.ts","hooks.ts","config/index.js","helpers/EPNSCoreHelper.js","components/NotificationToast.js","components/AliasVerificationModal.js","components/ViewInfoItem.js","segments/Info.tsx","redux/slices/spamSlice.js","api/index.js","components/DisplayNotice.js","redux/slices/notificationSlice.js","segments/spam.tsx","segments/Feedbox.tsx","assets/Device.js","singletons/ChannelsDataStore.js","redux/slices/channelSlice.js","components/ViewChannelItem.js","components/Faucets.js","segments/ViewChannels.tsx","assets/icons/index.js","components/SendNotifications.tsx","components/AddDelegateModal.js","components/RemoveDelegateModal.js","components/ActivateChannelModal.js","redux/slices/adminSlice.js","components/ChannelSettingsDropdown.tsx","components/ChannelSettings.jsx","components/ChannelDetails.js","segments/ChannelOwnerDashboard.js","segments/ChannelCreationDashboard.js","singletons/UsersDataStore.js","redux/slices/contractSlice.js","pages/Home.js","components/BlockiesIdenticon.js","components/Profile.tsx","components/Bell.js","segments/Header.tsx","config/countdown.js","components/TimerItem.js","segments/TimerComponent.js","App.tsx","redux/store.js","index.js","../../contracts/src/config.js","../../contracts/src/addresses.js","../../contracts/src/index.js","components/CreateChannel.js","components/blockies.js","components/SharedStyling.js"],"names":["CryptoJS","require","CryptoHelper","encryptWithAES","message","key","AES","encrypt","toString","decryptWithAES","decrypt","enc","Utf8","encryptWithECIES","publicKey","a","compressedKey","EthCrypto","compress","this","encryptWithPublicKey","encryptedSecret","decryptWithECIES","privateKey","decryptWithPrivateKey","pubKeyUint8Array","Uint8Array","from","Buffer","convertedKeyAsUint8Array","publicKeyConvert","convertedPublicKeyHex","pubKey","then","encryptedBuffers","cipher","iv","ephemPublicKey","ciphertext","mac","input","keyConvert","concat","buf","encrypted","length","keyConvertBuffer","uncompressedKey","twoStripped","substring","encryptedBuffer","decryptedBuffer","encryptionDecryptionPublicToPrivateTest","startTime","Date","console","log","publicKeyByPrivateKey","msg","encryptionTime","getTime","decryptMsg","decryptionTime","outputMsgPayload","secret","subject","calltoaction","imageurl","pkey","secretEncrypted","asubE","amsgE","actaE","aimgE","makeid","result","toISOString","characters","charactersLength","i","charAt","Math","floor","random","Boolean","window","location","hostname","match","config","SUPPORTED_CHAIN_IDS","envConfig","allowedNetworks","CORE_CHAIN_ID","coreContractChain","CORE_RPC","coreRPC","RPC_URLS","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","ledger","LedgerConnector","chainId","url","portis","TrezorConnector","manifestEmail","manifestAppUrl","PortisConnector","dAppId","networks","dotenv","etherscanToken","process","REACT_APP_INFURA_API_KEY","EPNSCoreHelper","getOwnerInfo","contract","Promise","resolve","reject","governance","response","catch","err","getUserInfo","user","users","mappings","addr","getChannelAddressFromID","channelID","channelById","getChannelInfo","channel","channels","getChannelEvent","startBlock","updateBlock","filter","filters","AddChannel","block","UpdateChannel","queryFilter","filteredResponse","forEach","item","args","ethers","utils","toUtf8String","identity","getJsonFileFromIdentity","ids","split","fetch","json","getChannelJsonFromChannelAddress","channelStartBlock","toNumber","channelUpdateBlock","hash","getChannelJsonFromUserAddress","getTotalNumberOfChannels","channelsCount","getChannelsMetaLatestToOldest","atIndex","numChannels","channelsInfo","channelArrays","assignedChannelID","push","promises","map","all","getTotalNumberOfUsers","usersCount","getPublicKey","address","getSubscribedStatus","isUserSubscribed","getTotalSubscribedChannels","subscribedCount","getFairShareOfUserAtBlock","userActivated","calcAllChannelsRatio","getPoolFunds","poolFunds","formatBigNumberToMetric","bignumber","convertToCurrency","div","metricFormatter","e","num","digits","si","value","symbol","toFixed","replace","NotificationWrapper","styled","Toaster","NotificationToast","notification","clearToast","LoaderToast","color","notificationTitle","notificationBody","toast","dark","onClick","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","AliasVerificationModal","onClose","onSuccess","verificationStatus","useWeb3React","account","active","error","library","signer","getSigner","modalRef","useRef","polygonCommsContract","Contract","addresses","epnsPolyComm","abis","epnsComm","useState","mainAdress","setMainAddress","loading","setLoading","useClickAway","Overlay","AliasModal","ref","align","textTransform","spacing","weight","bg","padding","CustomInput","required","placeholder","radius","border","onChange","target","margin","flex","self","disabled","verifyChannelAlias","tx","setTimeout","type","height","width","StyledInput","cursor","size","Input","Container","ChannelTitleLink","AppLink","AppLinkText","ChannelInfo","ChannelTitle","ViewInfoItem","href","REACT_APP_BROWSER_EXTENSION_URL","rel","REACT_APP_IOS_STAGING_DAPP_URL","REACT_APP_ANDROID_STAGING_DAPP_URL","ContainerInfo","InfoBox","Info","React","controlAt","initialState","page","notifications","finishedFetching","toggler","contractSlice","createSlice","name","reducers","toggleToggler","state","resetState","addPaginatedNotifications","action","payload","incrementPage","addNewNotification","setFinishedFetching","updateTopNotifications","notifs","slice","pageSize","sn","actions","BASE_URL","apiUrl","postReq","path","obj","axios","post","headers","Notice","span","props","theme","css","DisplayNotice","title","useEffect","animationIn","animationOut","durationOut","pp","CenteredContainerInfo","Items","SpamBox","currentTab","dispatch","useDispatch","epnsCommReadProvider","useSelector","contracts","spam","EPNS_DOMAIN","toggle","verifyingContract","bgUpdateLoading","setBgUpdateLoading","loadNotifications","api","fetchSpamNotifications","count","results","parsedResponsePromise","parseApiResponse","elem","op","subscribers","data","parsedResponse","fetchLatestNotifications","handlePagination","onSubscribeToChannel","channelAddress","Subscribe","subscriber","_signTypedData","signature","contractAddress","isSubscribedFn","toLowerCase","includes","style","marginTop","id","oneNotification","index","cta","app","icon","image","Number","showWayPoint","onEnter","subscribeFn","stopPropagation","isSpam","FullWidth","Wrapper","Button","Feedbox","setCurrentTab","fetchNotifications","Device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","ChannelEvents","ChannelsDataStore","channelsMeta","channelsJson","callbacks","epnsReadProvider","init","resetChannelsListeners","initChannelsListenersAsync","getChannelsCountAsync","removeAllListeners","listenForAddChannelAnyAsync","listenForAddChannelSelfAsync","listenForUpdateChannelAnyAsync","listenForUpdateChannelSelfAsync","listenForSubscribeAnyAsync","listenForSubscribeSelfAsync","listenForUnsubscribeAnyAsync","listenForUnsubscribeSelfAsync","on","ipfs","incrementChannelsCountAsync","Object","entries","callback","Unsubscribe","addCallbacks","callbackType","callbackID","removeCallbacks","incrementCount","getChannelFromApi","startIndex","pageCount","ceil","getChannelsMetaAsync","stopIndex","channelIDs","getChannelMetaAsync","channelMetaData","getChannelMetaViaAddressAsync","getChannelSubscribers","cachedSubscribers","subs","getChannelJsonAsync","instance","CHANNNEL_DEACTIVATED_STATE","CHANNEL_BLOCKED_STATE","CHANNEL_ACTIVE_STATE","CHANNEL_BLACKLIST","channelsCache","setChannelMeta","cacheChannelInfo","meta","FlexBox","ColumnFlex","SkeletonWrapper","atW","atH","borderRadius","marginBottom","marginRight","ChannelLogo","ChannelLogoOuter","ChannelLogoInner","ChannelLogoImg","img","VerifiedBy","VerifierIcon","VerifierName","ChannelDesc","ChannelDescLabel","label","ChannelMeta","ChannelMetaBox","Subscribers","SubscribersCount","LineBreak","ChannelActions","ChannelActionButton","button","ActionTitle","hideit","ActionLoader","SkeletonButton","SubscribeButton","UnsubscribeButton","OwnerButton","ToasterMsg","ViewChannelItem","channelObjectProp","epnsWriteProvider","pushAdminAddress","ZERO_ADDRESS","canVerify","admin","isOwner","channelObject","setChannelObject","channelJson","setChannelJson","subscribed","setSubscribed","memberCount","setMemberCount","isPushAdmin","setIsPushAdmin","isVerified","setIsVerified","isBlocked","setIsBlocked","vLoading","setvLoading","bLoading","setBLoading","txInProgress","setTxInProgress","canUnverify","setCanUnverify","verifierDetails","setVerifierDetails","copyText","setCopyText","isChannelBlacklisted","showToast","verifiedBy","fetchChannelJson","alert","channelState","addressText","channelSubscribers","find","sub","subscribe","subscribeAction","notificationToast","toaster","txToast","res","update","render","TYPE","SUCCESS","ERROR","unsubscribeAction","unsubscriber","finally","src","display","marginLeft","info","navigator","clipboard","writeText","el","document","createElement","body","appendChild","select","execCommand","removeChild","copyToClipboard","onMouseEnter","onMouseLeave","blockChannel","INFO","verifyChannel","unverifyChannel","wait","Faucets","overflow","pos","top","right","direction","textAlign","Header","InputWrapper","SearchBar","CenterContainer","SearchIconImage","ViewChannels","moreLoading","setMoreLoading","search","setSearch","channelToShow","setChannelToShow","loadingChannel","setLoadingChannel","trialCount","setTrialCount","channelsVisited","isMainnet","fetchInitialsChannelMeta","updateCurrentPage","loadMoreChannelMeta","newPageNumber","startingPoint","moreChannels","searchForChannel","query","t","timeout","clearTimeout","minHeight","className","alt","CloseIcon","xmlns","viewBox","data-name","transform","x2","fill","stroke","stroke-linecap","stroke-width","y2","NFTypes","LIMITER_KEYS","DropdownStyledParent","MultiRecipientsContainer","ModifiedContent","Content","DropdownHeader","DropdownStyled","Dropdown","DropdownStyledWhite","DropdownStyledParentWhite","CustomDropdownItem","SendNotifications","epnsCommWriteProvider","channelDetails","delegatees","nfProcessing","setNFProcessing","setChannelAddress","nfRecipient","setNFRecipient","multipleRecipients","setMultipleRecipients","tempRecipeint","setTempRecipient","nfType","setNFType","nfSub","setNFSub","nfSubEnabled","setNFSubEnabled","nfMsg","setNFMsg","nfCTA","setNFCTA","nfCTAEnabled","setNFCTAEnabled","nfMedia","setNFMedia","nfMediaEnabled","setNFMediaEnabled","nfInfo","setNFInfo","delegateeOptions","setDelegateeOptions","isChannelDeactivated","cannotDisplayDelegatees","oneDelegatee","bodyValidated","validated","handleSendMessage","preventDefault","nsub","nmsg","asub","amsg","acta","aimg","k","publickey","storagePointer","isEmpty","jsonPayload","JSON","stringify","at","add","toUtf8Bytes","Data","recipient","deployedContract","field","trim","justify","onSubmit","minWidth","options","option","d","Switch","checked","z","oneRecipient","recipientAddress","filteredRecipients","rec","removeRecipient","onKeyPress","oldRecipients","Array","Set","text","borderBottom","rows","autocomplete","AddDelegateModal","addDelegate","RemoveDelegateModal","removeDelegate","ActivateChannelModal","activateChannel","setChannelStakeFees","channelStakeFees","popupRef","PopupOverlay","PopupSlider","Slider","defaultValue","onChangeCommitted","_","aria-labelledby","valueLabelDisplay","step","marks","min","max","setUserChannelDetails","setCanVerify","setDelegatees","DropdownWrapper","ActiveChannelWrapper","inactive","DeactivateButton","ChannelSettings","onCoreNetwork","ALLOWED_CORE_NETWORK","showActivateChannelPopup","setShowActivateChannelPopup","poolContrib","setPoolContrib","addDelegateLoading","setAddDelegateLoading","addModalOpen","setAddModalOpen","removeDelegateLoading","setRemoveDelegateLoading","removeModalOpen","setRemoveModalOpen","isChannelBlocked","channelInactive","poolContribution","daiContract","dai","erc20","fees","parseUnits","sendTransactionPromise","approve","epnscore","waitForTransaction","reactivateChannel","deactivateChannel","amountToBeConverted","parseInt","pushValue","quote","PUSH","price","pow","walletAddress","setActive","SettingsWrapper","ChannelSettingsDropdown","Settings","ChannelDetails","verifyingChannel","setVerifyingChannel","creationDate","setCreationDate","channelIsActive","channelIsDeactivated","bn","getBlock","date","moment","timestamp","format","ChannelDetailsWrapper","SectionTop","ImageSection","Details","ChannelName","VerifyImage","ChanneStateText","SectionDes","SectionDate","Verified","VerifyingIcon","VerifyingName","ChannelOwnerDashboard","CreateChannel","ChannelCreationDashboard","UsersDataStore","userMeta","ownerMeta","resetUsersListeners","initUsersListenersAsync","getOwnerMetaAsync","getUsersCountAsync","getUserMetaAsync","listenForSubscribedAsync","listenForUnsubscribedAsync","publicKeyRegistered","listenForPublicKeyBroadcastAsync","incrementUsersCountAsync","setCoreReadProvider","setCoreWriteProvider","setCommunicatorReadProvider","setCommunicatorWriteProvider","setPushAdmin","Controls","ControlButton","ControlImage","ControlText","ControlChannelContainer","ControlChannelImage","ControlChannelText","Interface","Home","ReactGA","pageview","setControlAt","modalOpen","setModalOpen","adminStatusLoaded","setAdminStatusLoaded","aliasEthAccount","setAliasEthAccount","aliasVerified","setAliasVerified","channelAdmin","setChannelAdmin","coreProvider","getDefaultProvider","etherscan","aliasAddress","ethAddress","status","coreContractInstance","commAddress","epnsEthComm","commContractInstance","coreSignerInstance","communicatorSignerInstance","userClickedAt","pushChannelAdmin","checkUserForChannelOwnership","fetchDelegators","controlIndex","delegateAddress","delegators","channelOwners","channelInformationPromise","channelInformation","ownerAccount","getChannelVerfication","BlockiesIdenticon","seed","opts","bgcolor","scale","spotcolor","draw","prevProps","blockies","canvas","Component","Blocky","BlockyInner","Wallet","Profile","setAddress","ens","setENS","ensFetched","setENSFetched","lookupAddress","tadaaa","keyframes","BellImage","ringme","BellImageAbs","Badge","Bell","badgeCount","bellPressedCB","badge","setBadge","ring","setRing","setResetRinger","HeaderContainer","Section","Logo","PrimaryTheme","ThirdTheme","Connection","phase","context","deactivate","showLoginControls","setShowLoginControls","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","getErrorMessage","countdown","countdownEpoch","buttonTitle","buttonText","hide","h2","TimerItem","timeRemaining","setTimeRemaining","ticker","setTicker","hours","mins","secs","time","setTime","hhTheme","mmTheme","ssTheme","now","calculateTimeLeft","epochInSecs","hh","mm","ss","hhf","mmf","ssf","justifyContent","alignItems","family","showListing","TimerComponent","web3Connectors","Injected","logo","WalletConnect","Ledger","Portis","App","connector","activate","activatingConnector","setActivatingConnector","currentTime","setcurrentTime","triedEager","tried","setTried","isAuthorized","useEagerConnect","suppress","ethereum","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","initialize","ParentContainer","HomeContainer","ProviderLogo","srcSet","maxWidth","keys","currentConnector","ProviderButton","ProviderImage","newestOnTop","rtl","pauseOnFocusLoss","header","ToastContainer","attrs","rootReducer","combineReducers","contractReducer","channelReducer","adminReducer","notificationReducer","spamReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","ApolloProvider","getLibrary","provider","gottenProvider","providers","Web3Provider","oldNetwork","reload","getElementById","serviceWorker","ready","registration","unregister","ceaErc20","aDai","staking","yieldFarmPUSH","yieldFarmLP","epnsToken","epnsLPToken","rockstar","batchMintNFT","NFTRewards","distributor","erc20Abi","ownable","ownableAbi","epnscoreAbi","epnsCommAbi","daiAbi","epnsTokenAbi","stakingAbi","yieldFarming","yieldFarmingAbi","rockstarAbi","erc721","ec721Abi","MerkleDistributorAbi","ALIAS_CHAINS","Step","activeBG","Line","h1","Minter","textarea","Pool","PoolShare","processing","setProcessing","processingInfo","setProcessingInfo","uploadDone","setUploadDone","stakeFeesChoosen","setStakeFeesChoosen","channelInfoDone","setChannelInfoDone","chainDetails","setChainDetails","channelName","setChannelName","channelAlias","setChannelAlias","channelInfo","setChannelInfo","channelURL","setChannelURL","channelFile","setChannelFile","stepFlow","setStepFlow","handleLogoSizeLimitation","base64","sizeOf","base64Data","pop","dimensions","success","handleCreateChannel","chainDetailsSplit","blockchain","chain_id","identityBytes","anotherSendTxPromise","createChannelWithFees","mintDai","amount","mintTransactionPromise","mint","onChangeStatus","file","files","allFiles","f","reader","FileReader","readAsDataURL","onloadend","onDrop","maxFiles","multiple","accept","event","maxlength","classNamePrefix","colors","primary25","primary","selectedOption","paddingLeft","randseed","rand","createColor","buildOpts","newOpts","charCodeAt","seedrand","renderIcon","imageData","dataWidth","mirrorWidth","y","row","x","r","reverse","createImageData","sqrt","cc","getContext","fillStyle","fillRect","col","create","module","exports","section","gradient","ItemBreak","Item","wrap","filterHover","hover","tabletAlign","tabletTextAlign","ItemH","H2","bottom","arcRGB","H3","h3","P","p","Span","left","B","Anchor","ul","li","hoverBG","A","FormSubmision","opacity","tabletRight","tabletLeft","tabletTop","tabletBottom","tabletTransform","tabletOpacity","form","outline","hand","TextField"],"mappings":"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","file":"static/js/main.551c6dfa.chunk.js","sourcesContent":["import EthCrypto from 'eth-crypto';\nimport {encrypt, decrypt} from 'eccrypto';\nimport { publicKeyConvert, publicKeyVerify } from 'secp256k1-v4';\n\nvar CryptoJS = require(\"crypto-js\");\n\nconst CryptoHelper = {\n  // To Encrypt with AES\n  encryptWithAES: function(message, key) {\n    return CryptoJS.AES.encrypt(message, key).toString();\n  },\n  // To Decrypt with AES\n  decryptWithAES: function(message, key) {\n    let bytes  = CryptoJS.AES.decrypt(message, key);\n    return bytes.toString(CryptoJS.enc.Utf8);\n  },\n  // To Form Encryted Secret, no more than 15 characters supported\n  encryptWithECIES: async function(message, publicKey) {\n    const compressedKey = EthCrypto.publicKey.compress(publicKey);\n\n    const encryptedSecret = await this.encryptWithPublicKey(message, compressedKey);\n\n    // Not using it since sqlite2 has some error with this\n    // const compressedEncryptedSecret = EthCrypto.hex.compress(encryptedSecret);\n\n    return encryptedSecret;\n  },\n  // To Form Decrypted Secret, no more than 15 characters supported\n  decryptWithECIES: async function(message, privateKey) {\n    // Message is always compressed, not using because sqlite2 has some error with this\n    //const uncompressedMessage = EthCrypto.hex.decompress(message).substr(2); // to remove 0x\n\n    return await this.decryptWithPrivateKey(message, privateKey);\n  },\n  // Encryption with public key\n  encryptWithPublicKey: async function(message, publicKey) {\n    // Convert compressed public key, starts with 03 or 04\n    const pubKeyUint8Array = Uint8Array.from(\n      new Buffer(publicKey, 'hex')\n    );\n    //console.log(\"[ENCRYPTION] Public Key Uint8Array: \" + pubKeyUint8Array);\n\n    const convertedKeyAsUint8Array = publicKeyConvert(pubKeyUint8Array, false);\n    //console.log(\"[ENCRYPTION] Public Key Converted: \" + convertedKeyAsUint8Array);\n\n    const convertedPublicKeyHex = new Buffer(convertedKeyAsUint8Array);\n    //console.log(\"[ENCRYPTION] Converted Public Key Buffer: \" + convertedPublicKeyHex);\n\n    const pubKey = new Buffer(convertedPublicKeyHex, 'hex');\n    //console.log(\"[ENCRYPTION] pubkey getting sentout for encrypt: \" + pubKey);\n\n    return encrypt(\n        pubKey,\n        Buffer(message)\n    ).then(encryptedBuffers => {\n      const cipher = {\n          iv: encryptedBuffers.iv.toString('hex'),\n          ephemPublicKey: encryptedBuffers.ephemPublicKey.toString('hex'),\n          ciphertext: encryptedBuffers.ciphertext.toString('hex'),\n          mac: encryptedBuffers.mac.toString('hex')\n      };\n      // use compressed key because it's smaller\n      // const compressedKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(cipher.ephemPublicKey), true)).toString('hex')\n      const input = Uint8Array.from(\n        new Buffer(cipher.ephemPublicKey, 'hex')\n      );\n      const keyConvert = publicKeyConvert(input, true)\n      // console.log(\"[ENCRYPTION] Coverted key: \" + keyConvert);\n\n      const keyConvertBuffer = new Buffer(keyConvert);\n      // console.log(\"[ENCRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\n      // console.log(keyConvertBuffer);\n\n      //console.log(keyConvert);\n      const compressedKey = keyConvertBuffer.toString('hex')\n      // console.log(\"[ENCRYPTION] Compressed key in buffer : \");\n      // console.log(compressedKey);\n\n      const ret = Buffer.concat([\n        new Buffer(cipher.iv, 'hex'), // 16bit\n        new Buffer(compressedKey, 'hex'), // 33bit\n        new Buffer(cipher.mac, 'hex'), // 32bit\n        new Buffer(cipher.ciphertext, 'hex') // var bit\n      ]).toString('hex')\n\n      return ret\n    });\n  },\n  // Decryption with public key\n  decryptWithPrivateKey: async function(message, privateKey) {\n    let encrypted = message;\n    const buf = new Buffer(encrypted, 'hex');\n    // console.log(\"[DECRYPTION] Buffer Passed: \" + buf);\n\n    encrypted = {\n      iv: buf.toString('hex', 0, 16),\n      ephemPublicKey: buf.toString('hex', 16, 49),\n      mac: buf.toString('hex', 49, 81),\n      ciphertext: buf.toString('hex', 81, buf.length)\n    };\n    // decompress publicKey\n    // encrypted.ephemPublicKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(encrypted.ephemPublicKey), true)).toString('hex')\n    const input = Uint8Array.from(new Buffer(encrypted.ephemPublicKey, 'hex'));\n    const keyConvert = publicKeyConvert(input, false)\n    // console.log(\"[DECRYPTION] Coverted key: \" + keyConvert);\n\n    const keyConvertBuffer = new Buffer(keyConvert);\n    // console.log(\"[DECRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\n    // console.log(keyConvertBuffer);\n\n    //console.log(keyConvert);\n    const uncompressedKey = keyConvertBuffer.toString('hex')\n    // console.log(\"[DECRYPTION] Uncompressed key in buffer : \");\n    // console.log(uncompressedKey);\n\n    encrypted.ephemPublicKey = uncompressedKey;\n    const twoStripped = privateKey.substring(2)\n\n    const encryptedBuffer = {\n      iv: new Buffer(encrypted.iv, 'hex'),\n      ephemPublicKey: new Buffer(encrypted.ephemPublicKey, 'hex'),\n      ciphertext: new Buffer(encrypted.ciphertext, 'hex'),\n      mac: new Buffer(encrypted.mac, 'hex')\n    };\n\n    return decrypt(\n      new Buffer(twoStripped, 'hex'),\n      encryptedBuffer\n    ).then(decryptedBuffer => decryptedBuffer.toString());\n  },\n  // Testing of Encryption and Decryption from Public to Private key\n  encryptionDecryptionPublicToPrivateTest: async function(privateKey) {\n    const startTime = new Date();\n    console.log(\"[ENCRYPTION / DECRYPTION TEST STARTED] - \" + startTime);\n\n    const publicKey = EthCrypto.publicKeyByPrivateKey(privateKey);\n    const compressedKey = EthCrypto.publicKey.compress(publicKey); // is String\n    //console.log(compressedKey);\n\n    // const bytesCompKey = Uint8Array.from(compressedKey);\n    //console.log(bytesCompKey);\n\n    const msgToEncrypt = \"PartialStringAS\";\n    const msg = await this.encryptWithPublicKey(msgToEncrypt, compressedKey);\n    console.log(\"Encryped Message With compressed public key:\" + msg);\n\n    const encryptionTime = new Date().getTime() - startTime.getTime();\n    console.log(\"[ENCRYPTION / DECRYPTION ENCRYPTION DONE] - \" + encryptionTime / 1000 + \" secs\");\n\n    // Decrypt this message\n    const decryptMsg = await this.decryptWithPrivateKey(msg, privateKey);\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTED MESSAGE] - '\" + decryptMsg + \"'\");\n\n    const decryptionTime = new Date().getTime() - startTime.getTime() - encryptionTime;\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTION DONE] - \" + decryptionTime / 1000 + \" secs\");\n  },\n  // To output messge payload if required\n  outputMsgPayload: async function(secret, subject, message, calltoaction, imageurl, pkey) {\n    // Output AES\n    console.log(\"[AES ENCRYTED FORMAT (\" + new Date() + \")\");\n    console.log(\"---------------------\");\n    console.log(\"secret --> \");\n    const secretEncrypted = await this.encryptWithECIES(secret, pkey);\n    const asubE = this.encryptWithAES(subject, secret);\n    const amsgE = this.encryptWithAES(message, secret);\n    const actaE = this.encryptWithAES(calltoaction, secret);\n    const aimgE = this.encryptWithAES(imageurl, secret);\n\n    console.log(secretEncrypted);\n    console.log(\"asub --> \");\n    console.log(asubE);\n    console.log(\"amsg --> \");\n    console.log(amsgE);\n    console.log(\"acta --> \");\n    console.log(actaE);\n    console.log(\"aimg --> \");\n    console.log(aimgE);\n    console.log(\"decrypted secret --> \");\n    console.log(await this.decryptWithECIES(secretEncrypted, pkey));\n    console.log(\"decrypted asub --> \");\n    console.log(this.decryptWithAES(asubE, secret));\n    console.log(\"decrypted amsg --> \");\n    console.log(this.decryptWithAES(amsgE, secret));\n    console.log(\"decrypted acta --> \");\n    console.log(this.decryptWithAES(actaE, secret));\n    console.log(\"decrypted aimg --> \");\n    console.log(this.decryptWithAES(aimgE, secret));\n  },\n  makeid: function (length) {\n     var result           = '[' + new Date().toISOString() + '] ';\n     var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n     var charactersLength = characters.length;\n     for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n     }\n     return result;\n  }\n};\n\nexport default CryptoHelper;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { envConfig } from \"@project/contracts\";\nimport { PortisConnector } from '@web3-react/portis-connector'\n// import { NetworkConnector } from '@web3-react/network-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\n// import { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { LedgerConnector } from '@web3-react/ledger-connector'\nimport { TrezorConnector } from '@web3-react/trezor-connector'\n// import { FrameConnector } from '@web3-react/frame-connector'\n// import { AuthereumConnector } from '@web3-react/authereum-connector'\n// import { FortmaticConnector } from '@web3-react/fortmatic-connector'\n// import { SquarelinkConnector } from '@web3-react/squarelink-connector'\n// import { TorusConnector } from '@web3-react/torus-connector'\n\nrequire('dotenv').config();\nconst SUPPORTED_CHAIN_IDS = [...envConfig.allowedNetworks];\nconst POLLING_INTERVAL = 12000;\nconst CORE_CHAIN_ID = envConfig.coreContractChain;\nconst CORE_RPC = envConfig.coreRPC;\n\nconst RPC_URLS: { [chainId: number]: string } = {\n  [CORE_CHAIN_ID]: envConfig.coreRPC\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds: SUPPORTED_CHAIN_IDS })\n\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { ...RPC_URLS },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL\n})\n//\n// export const walletlink = new WalletLinkConnector({\n//   url: RPC_URLS[1],\n//   appName: 'web3-react example'\n// })\n//\nexport const ledger = new LedgerConnector({ chainId: CORE_CHAIN_ID, url: CORE_RPC, pollingInterval: POLLING_INTERVAL })\n\nexport const trezor = new TrezorConnector({\n  chainId: CORE_CHAIN_ID,\n  url: CORE_RPC,\n  pollingInterval: POLLING_INTERVAL,\n  manifestEmail: 'support@epns.io',\n  manifestAppUrl: 'https://staging-app.epns.io'\n})\n\n//\n// export const frame = new FrameConnector({ supportedChainIds: [1] })\n//\n// export const authereum = new AuthereumConnector({ chainId: 42 })\n//\n// export const fortmatic = new FortmaticConnector({ apiKey: process.env.FORTMATIC_API_KEY as string, chainId: 4 })\n\nexport const portis = new PortisConnector({ dAppId: 'cfefa032-9afd-4833-bfb4-2b0cb7ec3413' as string, networks: [CORE_CHAIN_ID] })\n\n// export const squarelink = new SquarelinkConnector({\n//   clientId: process.env.SQUARELINK_CLIENT_ID as string,\n//   networks: [1, 100]\n// })\n\n// export const torus = new TorusConnector({ chainId: 1 })\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from './connectors'\n\nrequire('dotenv').config();\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}\n","import dotenv from \"dotenv\";\ndotenv.config();\n\nexport default  {\n    etherscanToken: process.env.REACT_APP_INFURA_API_KEY || \"\"\n}","import React from \"react\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { ethers } from \"ethers\";\n//import { parseEther, bigNumber } from 'ethers/utils'\n\nconst COINDESK_CHANNEL_ADDR = \"0xe56f1D3EDFFF1f25855aEF744caFE7991c224FFF\";\nconst COINDESK_HASH = \"1+bafkreif643vf3cteadznccivnsk5uj26e3ls7onbshnldb3aej3omrxsau\"\nconst ENS_CHANNEL_ADDR = \"0x983110309620D911731Ac0932219af06091b6744\";\nconst ENS_HASH = \"1+bafkreiekigkyezwrspignt7l7vsrjefjmogwmigy4eqtts277cu2p23ilm\";\n// FeedDB Helper Function\nconst EPNSCoreHelper = {\n  // To get owner info\n  getOwnerInfo: async (contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.governance()\n        .then(response => {\n          if (enableLogs) console.log(\"getOwnerInfo() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getOwnerInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To get user info\n  getUserInfo: async (user, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users(user)\n        .then(response => {\n          const mappings = { ...response };\n          mappings.addr = user;\n\n          if (enableLogs) console.log(\"getUserInfo() --> %o\", mappings);\n          resolve(mappings);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getUserInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel address from it's id\n  getChannelAddressFromID: async (channelID, contract) => {\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      contract.channelById(channelID)\n        .then(response => {\n          // console.log(\"getChannelAddressFromID() --> %o\", response.toString());\n          resolve(response.toString());\n        })\n        .catch(err => { console.log(\"!!!Error, getChannelAddressFromID() --> %o\", err); reject(err); });\n    })\n  },\n  // To retrieve a channel's Info from channel address\n  getChannelInfo: async (channel, contract) => {\n    const enableLogs = 0;\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      contract.channels(channel)\n        .then(response => {\n          // Add an extra field for future info\n          const mappings = { ...response };\n          mappings.addr = channel;\n\n          if (enableLogs) console.log(\"getChannelInfo() --> %o\", mappings);\n          resolve(mappings);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel's AddChannel event\n  getChannelEvent: async (channel, startBlock, updateBlock, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n\n      // To get channel ipfs hash from channel info\n      let filter = contract.filters.AddChannel(channel);\n      let block = startBlock;\n      if (startBlock != updateBlock) {\n        filter = contract.filters.UpdateChannel(channel);\n        block = updateBlock;\n      }\n\n      contract.queryFilter(filter, block, block)\n        .then(response => {\n          let filteredResponse;\n\n          if (enableLogs) console.log(\"getChannelEvent() --> Finding: %s in | %o |\", channel, response );\n\n          response.forEach(function (item) {\n            if (item.args.channel.toString() == channel.toString()) {\n              if (enableLogs) console.log(\"getChannelEvent() --> Selected Channel %o: \", item);\n              filteredResponse = ethers.utils.toUtf8String(item.args.identity);\n            }\n          });\n\n          if (enableLogs) console.log(\"getChannelEvent() --> Filtered Channel: %o\", filteredResponse);\n          resolve(filteredResponse);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelEvent() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Retrive IPFS File from ipfshash\n  getJsonFileFromIdentity: async(identity, channel) => {\n    const enableLogs = 0;\n\n\n    return new Promise ((resolve, reject) => {\n      // Split Channel Identity, delimeter of identity is \"+\"\n      if(!identity){\n        reject(\"There is no identity file for channel:\",channel);\n      }\n      const ids = identity?.split(\"+\") || []; // First segment is storage type, second is the pointer to it\n\n      if (ids[0] == 1) {\n        // IPFS HASH\n        // Form Gateway URL\n        const url = \"https://ipfs.io/ipfs/\" + ids[1];\n        fetch(url)\n          .then(response => response.json())\n          .then(response => {\n            if (enableLogs) console.log(\"getJsonFileFromIdentity() --> %o\", response);\n            resolve(response);\n          })\n          .catch(err => {\n            console.log(\"!!!Error, getJsonFileFromIdentity() --> %o\", err);\n            reject(err);\n          });\n      }\n\n    });\n  },\n  // Helper to get Channel from Channel's address\n  getChannelJsonFromChannelAddress: async (channel, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      EPNSCoreHelper.getChannelInfo(channel, contract)\n        .then(response => EPNSCoreHelper.getChannelEvent(channel, response.channelStartBlock.toNumber(), response.channelUpdateBlock.toNumber(), contract))\n        .then(response => {\n          // add little hack for now to change coindesk's descriptioon\n          const hash = channel === COINDESK_CHANNEL_ADDR ? COINDESK_HASH  : (channel === ENS_CHANNEL_ADDR ? ENS_HASH : response);\n          return EPNSCoreHelper.getJsonFileFromIdentity(hash, channel)\n          // return EPNSCoreHelper.getJsonFileFromIdentity(response, channel)\n        })\n        .then(response => {\n          if (enableLogs) console.log(\"getChannelJsonFromChannelAddress() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelJsonFromChannelAddress() --> %o\", err);\n          reject(err);\n        });\n    });\n  },\n  // Helper to get Channel from User's address\n  getChannelJsonFromUserAddress: async (user, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      // EPNSCoreHelper.getUserInfo(user, contract)\n      //   .then(response => EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract))\n        EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract)\n        .then(response => {\n          if (enableLogs) console.log(\"getChannelJsonFromUserAddress() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelJsonFromUserAddress() --> %o\", err);\n          reject(err);\n        });\n    });\n  },\n  // Get Total Number of Channels\n  getTotalNumberOfChannels: async (contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.channelsCount()\n        .then(response => {\n          if (enableLogs) console.log(\"getTotalNumberOfChannels() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getTotalNumberOfChannels() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Get channels address given number of channels, , atIndex: -1 is start from latest, numChannels: -1 is return all\n  getChannelsMetaLatestToOldest: async (atIndex, numChannels, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      EPNSCoreHelper.getTotalNumberOfChannels(contract)\n        .then(async (response) => {\n          let channelsInfo = [];\n          const channelsCount = response;\n\n          if (atIndex > channelsCount || atIndex == -1) {\n            atIndex = channelsCount - 1;\n          }\n\n          if (numChannels == -1) {\n            numChannels = channelsCount;\n          }\n\n          // Get channels\n          let channelArrays = [];\n\n          // prefil and then refil\n          let count = 0;\n          for (let i = numChannels - 1; i >= 0; i--) {\n            const assignedChannelID = atIndex - i;\n            channelArrays.push(assignedChannelID);\n          }\n\n          const promises = channelArrays.map(async (channelID) => {\n            await EPNSCoreHelper.getChannelAddressFromID(channelID, contract)\n              .then(response => EPNSCoreHelper.getChannelInfo(response, contract))\n              .then(response => {\n                if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(%d, %d) --> %o\", channelID, numChannels, channelsInfo);\n                channelsInfo = [response, ...channelsInfo];\n              })\n              .catch(err => console.log(\"Error in channel: %d | skipping...\", channelID))\n          });\n\n          // wait until all promises are resolved\n          await Promise.all(promises);\n\n          if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(Index: %d, Number: %d) --> %o\", atIndex, numChannels, channelsInfo);\n          resolve(channelsInfo);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelsMetaLatestToOldest() --> %o\", err);\n          reject(err);\n        })\n    });\n  },\n  // Get Total Number of Users\n  getTotalNumberOfUsers: async (contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.usersCount()\n        .then(response => {\n          console.log(\"getTotalNumberOfUsers() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => { console.log(\"!!!Error, getTotalNumberOfUsers() --> %o\", err); reject(err); });\n    })\n  },\n  // To retrieve public key of a user\n  getPublicKey: async (address, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel ipfs hash from channel info\n      let filteredResponse;\n      contract.queryFilter('PublicKeyRegistered')\n        .then(response => {\n\n          response.forEach(function (item) {\n            if (item.args[0] == address) {\n              filteredResponse = item;\n            }\n          });\n\n          if (enableLogs) console.log(\"Public Key Registry Response: \" + response);\n          if (enableLogs) console.log(\"Public Key Registry Filtered: \" + filteredResponse);\n\n          if (!filteredResponse || filteredResponse.length == 0) {\n            resolve(null)\n          }\n          else {\n            resolve(filteredResponse.args[1]);\n          }\n\n        })\n        .catch((err) => {\n          console.log(err);\n          reject(err);\n        });\n    })\n  },\n  // Get Total Subsbribed Channels\n  getSubscribedStatus: async (user, channel, contract) => {\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.isUserSubscribed(channel, user)\n        .then(response => {\n          // console.log(\"getSubscribedStatus() --> %o\", {response, user, channel});\n          resolve(response);\n        })\n        .catch(err => { console.log(\"!!!Error, getSubscribedStatus() --> %o\", err); reject(err); });\n    })\n  },\n  // Get Total Subsbribed Channels\n  getTotalSubscribedChannels: async (user, contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users[user].subscribedCount()\n        .then(response => {\n          console.log(\"getTotalSubscribedChannels() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => { console.log(\"!!!Error, getTotalSubscribedChannels() --> %o\", err); reject(err); });\n    })\n  },\n  // Get Fair Share\n  getFairShareOfUserAtBlock: async(user, block, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users(user)\n        .then((response) => {\n          if (response.userActivated) {\n            contract.calcAllChannelsRatio(user, block)\n              .then(response => {\n                if (enableLogs) console.log(\"calcAllChannelsRatio() --> %o\", response);\n                resolve(response);\n              })\n              .catch(err => {\n                console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\n                reject(err);\n              });\n          }\n          else {\n            if (enableLogs) console.log(\"!!!Warning, calcAllChannelsRatio() --> User not activated\");\n            reject(\"User not activated\");\n          }\n        })\n        .catch(err => {\n          console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Get Pool Funds\n  getPoolFunds: async(contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      contract.poolFunds()\n        .then(response => {\n          if (enableLogs) console.log(\"getPoolFunds() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getPoolFunds() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Helper Functions\n  // To format Big Number\n  formatBigNumberToMetric: (bignumber, convertToCurrency) => {\n    try {\n      if (convertToCurrency) {\n        bignumber = bignumber.div(100000000000000);\n        bignumber = bignumber.div(10000);\n      }\n      bignumber = bignumber.toNumber();\n      return EPNSCoreHelper.metricFormatter(bignumber, 2);\n    }\n    catch (e) {\n      console.log(e);\n      return \"---\";\n    }\n  },\n  // Metric Formatter, thanks: https://stackoverflow.com/questions/9461621/format-a-number-as-2-5k-if-a-thousand-or-more-otherwise-900\n  metricFormatter: (num, digits) => {\n    var si = [\n      { value: 1, symbol: \"\" },\n      { value: 1E3, symbol: \"k\" },\n      { value: 1E6, symbol: \"M\" },\n      { value: 1E9, symbol: \"G\" },\n      { value: 1E12, symbol: \"T\" },\n      { value: 1E15, symbol: \"P\" },\n      { value: 1E18, symbol: \"E\" }\n    ];\n    var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n    var i;\n    for (i = si.length - 1; i > 0; i--) {\n      if (num >= si[i].value) {\n        break;\n      }\n    }\n    return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\n  },\n\n}\n\nexport default EPNSCoreHelper;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\n\nimport { useWeb3React } from '@web3-react/core'\nimport { addresses, abis } from \"@project/contracts\";\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\nimport { toast } from 'react-toastify';\nimport moment from 'moment';\n\nfunction NotificationToast({ notification, clearToast }) {\n\n  // toast customize\n  const LoaderToast = ({color }) => (\n      <Toaster>\n      <div>{notification.notificationTitle}</div>\n      <div>{notification.notificationBody}</div>\n      </Toaster>\n  )\n \n  // Render\n  return (\n    <NotificationWrapper>{\n    toast.dark(<LoaderToast onClick={clearToast} color=\"#35c5f3\"/>, {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        })\n    }\n    </NotificationWrapper>\n  );\n}\n\nconst NotificationWrapper = styled.div`\n  display: none;\n`;\n\nconst Toaster = styled.div`\n  align-items: center;\n  margin: 0px 10px;\n`\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`\n\n\n\n// Export Default\nexport default NotificationToast;\n","import React, {useRef, useState} from 'react';\nimport { useClick, useClickAway } from 'react-use';\nimport styled from 'styled-components';\nimport { useWeb3React } from '@web3-react/core';\nimport { addresses, abis } from \"@project/contracts\";\nimport Loader from 'react-loader-spinner';\n\nimport {Item, H2, H3, Span, Button, Input} from 'components/SharedStyling';\n\nconst ethers = require('ethers');\n\n\nexport default function AliasVerificationModal({\n    onClose,onSuccess, verificationStatus\n}) {\n    const { active, error, account, library, chainId } = useWeb3React();\n    const signer = library.getSigner(account);\n\n    const modalRef = useRef(null);\n    const polygonCommsContract = new ethers.Contract(addresses.epnsPolyComm, abis.epnsComm, signer);\n    const [mainAdress, setMainAddress] = useState('');\n    const [loading, setLoading] = useState('');\n\n    // Form signer and contract connection\n    useClickAway(modalRef, onClose);\n\n    const submitAlias = () => {\n        setLoading('loading')\n        const anotherSendTxPromise = polygonCommsContract.verifyChannelAlias(mainAdress);\n        anotherSendTxPromise\n        .then(async (tx) => {\n            console.log(tx);\n            setLoading(\"Transaction Sent!\");\n\n            setTimeout(() => {\n                onSuccess();\n                onClose();\n            }, 2000);\n\n            // await tx.wait(1);\n            // setLoading(\"Transaction Mined!\");\n        })\n        .catch(() => {\n            setLoading('There was an error');\n            setTimeout(() => {\n                setLoading('')\n            }, 2000)\n        })\n    };\n    \n\n    return (\n        <Overlay>\n            <AliasModal ref={modalRef}>\n                <Item align=\"flex-start\">\n                    <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n                    <Span weight=\"200\">Verify </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Alias</Span>\n                    </H2>\n                    {\n                        verificationStatus === null ?\n                        (\n                            <H3>There has been an error in the verification of your alias, Please contact the admin</H3>\n                        ) : (\n                            <H3>Before you can use this channel on this chain, you first need to verify your Alias.</H3>\n                        )\n                    }\n                </Item>\n                {\n                    verificationStatus !== null && (\n                        <>\n                            <Item align=\"flex-start\">\n                                <CustomInput\n                                    required\n                                    placeholder=\"Enter ethereum wallet address of this channel\"\n                                    radius=\"4px\"\n                                    padding=\"12px\"\n                                    border=\"1px solid #674c9f\"\n                                    bg=\"#fff\"\n                                    value={mainAdress}\n                                    onChange={(e) => {setMainAddress(e.target.value)}}\n                                />\n                            </Item>\n                            <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                                <Button\n                                    bg='#e20880'\n                                    color='#fff'\n                                    flex=\"1\"\n                                    radius=\"0px\"\n                                    padding=\"20px 10px\"\n                                    disabled={mainAdress.length !== 42}\n                                    onClick={submitAlias}\n                                >\n                                    { loading && <Loader\n                                        type=\"Oval\"\n                                        color=\"#FFF\"\n                                        height={16}\n                                        width={16}\n                                        />\n                                    }\n                                    <StyledInput\n                                        cursor=\"hand\"\n                                        textTransform=\"uppercase\"\n                                        color=\"#fff\" weight=\"400\"\n                                        size=\"0.8em\" spacing=\"0.2em\"\n                                        value={loading ? loading : \"Verify Alias\"}\n                                    />\n                                </Button>\n                            </Item>\n                        </>\n                    )\n                }\n            </AliasModal>\n        </Overlay>\n    )\n}\n\nconst StyledInput = styled(Input)`\n    width: 100%;\n    text-align: center;\n    caret-color: transparent;\n`\n\nconst CustomInput = styled(Input)`\n    box-sizing: border-box;\n    width: 100%;\n    margin: 20px 0px;\n`;\n\nconst Overlay = styled.div`\n    top: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0,0,0,0.85);\n    height: 100%;\n    width: 100%;\n    z-index: 1000;\n    position: fixed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    overflow-y: scroll;\n`;\n\nconst AliasModal = styled.div`\n    padding: 20px 30px;\n    background: white;\n`;","import React from \"react\";\nimport styled, { css } from 'styled-components';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport Loader from 'react-loader-spinner';\n\nimport { useWeb3React } from '@web3-react/core';\n\n\n// Other Information URLs\nfunction ViewInfoItem() {\n  // render\n  return (\n    <>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <>\n          <AppLinkText>\n            <AppLink href={`${process.env.REACT_APP_BROWSER_EXTENSION_URL}`} target=\"_blank\" rel=\"nofollow\">\n              Download EPNS Browser Extension\n            </AppLink>\n          </AppLinkText>\n          \n          </>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <>\n          <AppLinkText>\n            <AppLink href={`${process.env.REACT_APP_IOS_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\n              Download EPNS App (iOS)\n            </AppLink>\n          </AppLinkText>\n           For iOS Users\n          </>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <>\n          <AppLinkText>\n            <AppLink href={`${process.env.REACT_APP_ANDROID_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\n              Download EPNS App (Android)\n            </AppLink>\n          </AppLinkText>\n           For Android Users\n          </>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <ChannelTitleLink href= \"#\" target=\"_blank\" rel=\"nofollow\">\n            Click here for our How to Guides\n          </ChannelTitleLink>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  flex: 1;\n  // display: flex;\n  // flex-wrap: wrap;\n\n  background: #fff;\n  border-radius: 10px;\n  border: 1px solid rgb(237, 237, 237);\n\n  margin: 15px 0px;\n  justify-content: center;\n  padding: 10px;\n`\n\nconst ChannelTitleLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\nconst AppLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\nconst AppLinkText = styled.div`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n`\nconst ChannelInfo = styled.div`\n  flex: 1;\n  margin: 5px 10px;\n  min-width: 120px;\n  flex-grow: 4;\n  flex-direction: column;\n  display: flex;\n`\n\nconst ChannelTitle = styled.div`\n  margin-bottom: 5px;\n`\n\n// Export Default\nexport default ViewInfoItem;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport Loader from 'react-loader-spinner'\n\nimport { useWeb3React } from '@web3-react/core'\n\nimport ViewInfoItem from \"components/ViewInfoItem\";\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\n// Other Information section\nfunction  Info() {\n  const { account, library } = useWeb3React();\n\n  const [controlAt, setControlAt] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n\n  return (\n    <Container>\n      {loading &&\n        <ContainerInfo>\n          <Loader\n           type=\"Oval\"\n           color=\"#35c5f3\"\n           height={40}\n           width={40}\n          />\n        </ContainerInfo>\n      }\n\n      {!loading && controlAt == 0 && \n      <>\n        <InfoBox>\n          <ViewInfoItem/>\n        </InfoBox>\n      </>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n\n  max-height: 80vh;\n`\n\nconst ContainerInfo = styled.div`\n  padding: 20px;\n`\nconst InfoBox = styled.div`\n  padding: 10px 20px;\n  display: block;\n  align-self: stretch;\n  background: #fafafa;\n`\n\n\n// Export Default\nexport default  Info;\n","/**\n * This file helps us maintain the spamnotifications fetched in state, so when tabs are switched we can retain the notification information\n */\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    page: 1, //the current page\n    notifications: [],// the actual notifications\n    finishedFetching: false,\n    toggler: false\n}\n\nexport const contractSlice = createSlice({\n    name: \"spam\",\n    initialState,\n    reducers: {\n        toggleToggler: (state) => {\n            state.toggler = !state.toggler;\n        },\n        resetState: (state) => {\n            state.page = initialState.page;\n            state.notifications = initialState.notifications;\n            state.finishedFetching = initialState.finishedFetching;\n        },\n        addPaginatedNotifications: (state, action) => {\n            state.notifications = [ ...state.notifications, ...action.payload ];\n            state.page += 1;\n        },\n        incrementPage: (state) => {\n            state.page += 1;\n        },\n        addNewNotification: (state, action) => {\n            state.notifications = [{...action.payload}, ...state.notifications]\n        },\n        setFinishedFetching: (state) => {\n            state.finishedFetching = true;\n        },\n        updateTopNotifications: (state, action) => {\n            state.notifications = [...action.payload.notifs, ...state.notifications.slice(action.payload.pageSize)];\n            console.log({sn: state.notifications});\n        }\n    }\n});\n\nexport const {\n    toggleToggler,\n    addPaginatedNotifications,\n    incrementPage,\n    addNewNotification,\n    setFinishedFetching,\n    resetState,\n    updateTopNotifications\n} = contractSlice.actions;\n\nexport default contractSlice.reducer;","import axios from \"axios\";\nimport { envConfig } from \"@project/contracts\";\n\n\n// const BASE_URL = \"https://backend-staging.epns.io/apis\";\nconst BASE_URL = envConfig.apiUrl// \"https://backend-kovan.epns.io/apis\";\n// const BASE_URL = \"http://localhost:4000/apis\"; //for local push node\n\n/**\n * A function used to make get requests throughout the entire application\n * @param {String} path e.g /feeds/get_feeds, this represents the route of the enpoint to call\n * @returns {Promise}\n */\nexport const getReq = async (path) => {\n    try {\n      const response = await axios.get(BASE_URL + path);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n/**\n * A function used to make post requests to the backend\n * @param {String} path e.g /feeds/get_feeds, this represents the route of the enpoint to call\n * @param {Object} obj \n * @returns {Promise}\n */\nexport const postReq = async (path, obj) => {\n  try {\n    const response = await axios.post(BASE_URL + path, obj, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport { AnimateOnChange } from 'react-animation';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\n// Create Header\nfunction DisplayNotice({ title, theme }) {\n  React.useEffect(() => {\n\n  }, [title, theme]);\n\n  // to create blockies\n\n  return (\n    <Container>\n      <AnimateOnChange\n        animationIn=\"fadeIn\"\n        animationOut=\"fadeOut\"\n        durationOut={200}\n      >\n        <Notice theme={theme}>{title}</Notice>\n      </AnimateOnChange>\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n\n`\n\nconst Notice = styled.span`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n  font-weight: 400;\n\n  ${props => props.theme === 'primary' && css`\n    background: #e20880;\n  `};\n\n  ${props => props.theme === 'secondary' && css`\n    background: #35c5f3;\n  `};\n\n  ${props => props.theme === 'third' && css`\n    background: #674c9f;\n  `};\n`\n\n// Export Default\nexport default DisplayNotice;\n","/**\n * This file helps us maintain the notifications fetched in state, so when tabs are switched we can retain the notification information\n */\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    page: 1, //the current page\n    notifications: [],// the actual notifications\n    finishedFetching: false,\n    toggler: false\n}\n\nexport const contractSlice = createSlice({\n    name: \"notifications\",\n    initialState,\n    reducers: {\n        toggleToggler: (state) => {\n            state.toggler = !state.toggler;\n        },\n        resetState: (state) => {\n            state.page = initialState.page;\n            state.notifications = initialState.notifications;\n            state.finishedFetching = initialState.finishedFetching;\n        },\n        addPaginatedNotifications: (state, action) => {\n            state.notifications = [ ...state.notifications, ...action.payload ];\n            state.page += 1;\n        },\n        incrementPage: (state) => {\n            state.page += 1;\n        },\n        addNewNotification: (state, action) => {\n            state.notifications = [{...action.payload}, ...state.notifications]\n        },\n        setFinishedFetching: (state) => {\n            state.finishedFetching = true;\n        },\n        updateTopNotifications: (state, action) => {\n            console.log({pp: action.payload});\n            state.notifications = [...action.payload.notifs, ...state.notifications.slice(action.payload.pageSize)];\n            console.log({sn: state.notifications});\n        }\n    }\n});\n\nexport const {\n    toggleToggler,\n    addPaginatedNotifications,\n    incrementPage,\n    addNewNotification,\n    setFinishedFetching,\n    resetState,\n    updateTopNotifications\n} = contractSlice.actions;\n\nexport default contractSlice.reducer;","import React from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"react-loader-spinner\";\nimport { Waypoint } from \"react-waypoint\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { envConfig } from \"@project/contracts\";\nimport {\n  api,\n  utils,\n  NotificationItem,\n} from \"@epnsproject/frontend-sdk-staging\";\nimport {\n  addPaginatedNotifications,\n  incrementPage,\n  setFinishedFetching,\n} from \"redux/slices/spamSlice\";\nimport { postReq } from \"api\";\nimport DisplayNotice from \"components/DisplayNotice\";\nimport { updateTopNotifications } from \"redux/slices/notificationSlice\";\n\nconst NOTIFICATIONS_PER_PAGE = 10;\n// Create Header\nfunction SpamBox({ currentTab }) {\n  const dispatch = useDispatch();\n  const { account, chainId, library } = useWeb3React();\n  const { epnsCommReadProvider } = useSelector(\n    (state: any) => state.contracts\n  );\n\n  const { notifications, page, finishedFetching } = useSelector((state: any) => state.spam);\n  const { toggle } = useSelector(\n    (state: any) => state.notifications\n  );\n  const EPNS_DOMAIN = {\n    name: \"EPNS COMM V1\",\n    chainId: chainId,\n    verifyingContract: epnsCommReadProvider?.address,\n  };\n\n  const [bgUpdateLoading, setBgUpdateLoading] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const loadNotifications = async () => {\n    if (loading || finishedFetching) return;\n    setLoading(true);\n    try {\n      const { count, results } = await api.fetchSpamNotifications(\n        account,\n        NOTIFICATIONS_PER_PAGE,\n        page,\n        envConfig.apiUrl\n      );\n      const parsedResponsePromise = utils\n        .parseApiResponse(results)\n        .map(async (elem: any, i: any) => {\n          elem.channel = results[i].channel;\n          const {\n            data: { subscribers },\n          } = await postReq(\"/channels/get_subscribers\", {\n            channel: results[i].channel,\n            op: \"read\",\n          });\n          elem.subscribers = subscribers;\n          return { ...elem };\n        });\n      const parsedResponse = await Promise.all(parsedResponsePromise);\n      // get all the subsc\n      dispatch(addPaginatedNotifications(parsedResponse));\n      if (count === 0) {\n        dispatch(setFinishedFetching());\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchLatestNotifications = async () => {\n    if (loading || bgUpdateLoading) return;\n    setBgUpdateLoading(true);\n    setLoading(true);\n\n    try {\n      const { count, results } = await api.fetchSpamNotifications(\n        account,\n        NOTIFICATIONS_PER_PAGE,\n        1,\n        envConfig.apiUrl\n      );\n      if (!notifications.length) {\n        dispatch(incrementPage());\n      }\n      const parsedResponsePromise = utils\n        .parseApiResponse(results)\n        .map(async (elem: any, i: any) => {\n          elem.channel = results[i].channel;\n          const {\n            data: { subscribers },\n          } = await postReq(\"/channels/get_subscribers\", {\n            channel: results[i].channel,\n            op: \"read\",\n          });\n          elem.subscribers = subscribers;\n          return { ...elem };\n        });\n      const parsedResponse = await Promise.all(parsedResponsePromise);\n      dispatch(\n        updateTopNotifications({\n          notifs: parsedResponse,\n          pageSize: NOTIFICATIONS_PER_PAGE,\n        })\n      );\n      if (count === 0) {\n        dispatch(setFinishedFetching());\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setBgUpdateLoading(false);\n      setLoading(false);\n    }\n  };\n\n  React.useEffect(() => {\n    if (account && currentTab === \"spambox\") {\n      fetchLatestNotifications();\n    }\n  }, [account, currentTab]);\n\n  React.useEffect(() => {\n    if (epnsCommReadProvider) {\n      loadNotifications();\n    }\n  }, [epnsCommReadProvider, account]);\n\n  //function to query more notifications\n  const handlePagination = async () => {\n    loadNotifications();\n    dispatch(incrementPage());\n  };\n\n  const showWayPoint = (index: any) => {\n    return (\n      Number(index) === notifications.length - 1 &&\n      !finishedFetching &&\n      !bgUpdateLoading\n    );\n  };\n\n  const onSubscribeToChannel = async (channelAddress) => {\n    let txToast;\n    const type = {\n      Subscribe: [\n        { name: \"channel\", type: \"address\" },\n        { name: \"subscriber\", type: \"address\" },\n        { name: \"action\", type: \"string\" },\n      ],\n    };\n    const message = {\n      channel: channelAddress,\n      subscriber: account,\n      action: \"Subscribe\",\n    };\n\n    const signature = await library\n      .getSigner(account)\n      ._signTypedData(EPNS_DOMAIN, type, message);\n\n    return postReq(\"/channels/subscribe_offchain\", {\n      signature,\n      message,\n      op: \"write\",\n      chainId,\n      contractAddress: epnsCommReadProvider.address,\n    });\n  };\n\n  const isSubscribedFn = async (subscribers: any) => {\n    return subscribers\n      .map((a) => a.toLowerCase())\n      .includes(account.toLowerCase());\n  };\n\n  // Render\n  return (\n    <>\n      <Container>\n        {bgUpdateLoading && (\n          <div style={{ marginTop: \"10px\" }}>\n            <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\n          </div>\n        )}\n        {notifications && (\n          <Items id=\"scrollstyle-secondary\">\n            {notifications.map((oneNotification, index) => {\n              const {\n                cta,\n                title,\n                message,\n                app,\n                icon,\n                image,\n                channel,\n                subscribers,\n              } = oneNotification;\n              // render the notification item\n              return (\n                <div key={`${message}+${title}`}>\n                  {showWayPoint(index) && !loading && (\n                    <Waypoint onEnter={() => handlePagination()} />\n                  )}\n                  <NotificationItem\n                    notificationTitle={title}\n                    notificationBody={message}\n                    cta={cta}\n                    app={app}\n                    icon={icon}\n                    image={image}\n                    subscribeFn={(e) => {\n                      e?.stopPropagation();\n                      onSubscribeToChannel(channel);\n                    }}\n                    isSpam\n                    isSubscribedFn={async () => isSubscribedFn(subscribers)}\n                  />\n                </div>\n              );\n            })}\n          </Items>\n        )}\n        {loading && !bgUpdateLoading && (\n          <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\n        )}\n        {!loading && !notifications.length && (\n          <CenteredContainerInfo>\n            <DisplayNotice\n              title=\"You currently have no spam notifications.\"\n              theme=\"third\"\n            />\n          </CenteredContainerInfo>\n        )}\n      </Container>\n    </>\n  );\n}\n\nconst CenteredContainerInfo = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`;\n// css styles\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  max-height: 100vh;\n\n  // padding: 20px;\n  // font-size: 16px;\n  // display: flex;\n  // font-weight: 200;\n  // align-content: center;\n  // align-items: center;\n  // justify-content: center;\n  // width: 100%;\n  // min-height: 40vh;\n`;\n\n// Export Default\nexport default SpamBox;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"react-loader-spinner\";\nimport { Waypoint } from \"react-waypoint\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { envConfig } from \"@project/contracts\";\nimport DisplayNotice from \"components/DisplayNotice\";\nimport SpamBox from \"./spam\";\nimport {\n  api,\n  utils,\n  NotificationItem,\n} from \"@epnsproject/frontend-sdk-staging\";\nimport {\n  addPaginatedNotifications,\n  incrementPage,\n  setFinishedFetching,\n  resetState,\n  updateTopNotifications,\n} from \"redux/slices/notificationSlice\";\n\nconst NOTIFICATIONS_PER_PAGE = 10;\n// Create Header\nfunction Feedbox() {\n  const dispatch = useDispatch();\n  const { account } = useWeb3React();\n  const { epnsCommReadProvider } = useSelector((state: any) => state.contracts);\n  const { notifications, page, finishedFetching, toggle } = useSelector(\n    (state: any) => state.notifications\n  );\n\n  const [bgUpdateLoading, setBgUpdateLoading] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [currentTab, setCurrentTab] = React.useState(\"inbox\");\n\n  const loadNotifications = async () => {\n    if (loading || finishedFetching) return;\n    setLoading(true);\n    try {\n      const { count, results } = await api.fetchNotifications(\n        account,\n        NOTIFICATIONS_PER_PAGE,\n        page,\n        envConfig.apiUrl\n      );\n      const parsedResponse = utils.parseApiResponse(results);\n      dispatch(addPaginatedNotifications(parsedResponse));\n      if (count === 0) {\n        dispatch(setFinishedFetching());\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchLatestNotifications = async () => {\n    if (loading || bgUpdateLoading) return;\n    setBgUpdateLoading(true);\n    setLoading(true);\n    try {\n      const { count, results } = await api.fetchNotifications(\n        account,\n        NOTIFICATIONS_PER_PAGE,\n        1,\n        envConfig.apiUrl\n      );\n      if (!notifications.length) {\n        dispatch(incrementPage());\n      }\n      const parsedResponse = utils.parseApiResponse(results);\n      // replace the first 20 notifications with these\n      dispatch(\n        updateTopNotifications({\n          notifs: parsedResponse,\n          pageSize: NOTIFICATIONS_PER_PAGE,\n        })\n      );\n      if (count === 0) {\n        dispatch(setFinishedFetching());\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setBgUpdateLoading(false);\n      setLoading(false);\n    }\n  };\n\n  React.useEffect(() => {\n    if (account && currentTab === \"inbox\") {\n      fetchLatestNotifications();\n    }\n  }, [account, currentTab]);\n\n  React.useEffect(() => {\n    fetchLatestNotifications();\n  }, [toggle]);\n\n  //function to query more notifications\n  const handlePagination = async () => {\n    loadNotifications();\n    dispatch(incrementPage());\n  };\n\n  const showWayPoint = (index: any) => {\n    return (\n      Number(index) === notifications.length - 1 &&\n      !finishedFetching &&\n      !bgUpdateLoading\n    );\n  };\n\n  // Render\n  return (\n    <FullWidth>\n      <Wrapper>\n        <Button active={currentTab == \"inbox\"} onClick={() => setCurrentTab(\"inbox\")}>Inbox</Button>\n        <Button active={currentTab == \"spambox\"} onClick={() => setCurrentTab(\"spambox\")} spam>\n          Spam\n        </Button>\n      </Wrapper>\n      {currentTab == \"spambox\" ? (\n        <SpamBox currentTab={currentTab} />\n      ) : (\n        <Container>\n          {bgUpdateLoading && (\n            <div style={{ marginTop: \"10px\" }}>\n              <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\n            </div>\n          )}\n          {notifications && (\n            <Items id=\"scrollstyle-secondary\">\n              {notifications.map((oneNotification, index) => {\n                const {\n                  cta,\n                  title,\n                  message,\n                  app,\n                  icon,\n                  image,\n                } = oneNotification;\n\n                // render the notification item\n                return (\n                  <div key={`${message}+${title}`}>\n                    {showWayPoint(index) && (\n                      <Waypoint onEnter={() => handlePagination()} />\n                    )}\n                    <NotificationItem\n                      notificationTitle={title}\n                      notificationBody={message}\n                      cta={cta}\n                      app={app}\n                      icon={icon}\n                      image={image}\n                    />\n                  </div>\n                );\n              })}\n            </Items>\n          )}\n          {loading && !bgUpdateLoading && (\n            <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\n          )}\n          {!notifications.length && !loading && (\n            <CenteredContainerInfo>\n              <DisplayNotice\n                title=\"You currently have no notifications, try subscribing to some channels.\"\n                theme=\"third\"\n              />\n            </CenteredContainerInfo>\n          )}\n        </Container>\n      )}\n    </FullWidth>\n  );\n}\n\nconst FullWidth = styled.div`\n  width: 100%;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  justify-content: space-between;\n`;\n\nconst Button = styled.div`\n  border: 0;\n  outline: 0;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-align-items: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  -webkit-box-pack: center;\n  -webkit-justify-content: center;\n  -ms-flex-pack: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  background: ${(props: any) => (props.spam ? \"#e20880\" : \"#674C9F\")};\n  min-width: 100px;\n  width: 45%;\n  cursor: ${(props: any) => (props.active ? \"not-allowed\" : \"pointer\")};\n  opacity: ${(props: any) => (props.active ? 0.5 : 1)};\n\n  &:hover {\n    opacity: ${(props: any) => (props.active ? 0.5 : 0.8)};\n  }\n`;\n\nconst EmptyWrapper = styled.div`\n  padding-top: 50px;\n  padding-bottom: 50px;\n`;\nconst CenteredContainerInfo = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`;\n// css styles\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  max-height: 100vh;\n\n  // padding: 20px;\n  // font-size: 16px;\n  // display: flex;\n  // font-weight: 200;\n  // align-content: center;\n  // align-items: center;\n  // justify-content: center;\n  // width: 100%;\n  // min-height: 40vh;\n`;\n\n// Export Default\nexport default Feedbox;\n","const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px'\n}\n\nexport const Device = {\n  mobileS: `(max-width: ${size.mobileS})`,\n  mobileM: `(max-width: ${size.mobileM})`,\n  mobileL: `(max-width: ${size.mobileL})`,\n  tablet: `(max-width: ${size.tablet})`,\n  laptop: `(max-width: ${size.laptop})`,\n  laptopL: `(max-width: ${size.laptopL})`,\n  desktop: `(max-width: ${size.desktop})`,\n  desktopL: `(max-width: ${size.desktop})`\n};\n","import EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\nimport { ethers } from \"ethers\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { postReq } from \"api\";\n\n// STATIC SINGLETON\nexport const ChannelEvents = {\n  ADD_CHANNEL_ANY: \"AddChannelAny\",\n  ADD_CHANNEL_SELF: \"AddChannelSelf\",\n  UPDATE_CHANNEL_ANY: \"UpdateChannelAny\",\n  UPDATE_CHANNEL_SELF: \"UpdateChannelSelf\",\n  SUBSCRIBER_ANY_CHANNEL: \"SubscriberAnyChannel\",\n  SUBSCRIBER_SELF_CHANNEL: \"SubscriberSelfChannel\",\n  UNSUBSCRIBER_ANY_CHANNEL: \"UnsubscriberAnyChannel\",\n  UNSUBSCRIBER_SELF_CHANNEL: \"UnsubscriberSelfChannel\",\n};\n\nexport default class ChannelsDataStore {\n  static instance = ChannelsDataStore.instance || new ChannelsDataStore();\n\n  state = {\n    channelsCount: -1,\n    channelsMeta: {},\n    channelsJson: {},\n    subscribers: {},\n\n    callbacks: [],\n\n    account: null,\n    epnsReadProvider: null,\n    epnsCommReadProvider: null,\n  };\n\n  // init\n  init = (account, epnsReadProvider, epnsCommReadProvider) => {\n    // set account\n    this.state.account = account;\n\n    // First attach listeners then overwrite the old one if any\n    this.resetChannelsListeners();\n    this.state.epnsReadProvider = epnsReadProvider;\n    this.state.epnsCommReadProvider = epnsCommReadProvider;\n    this.initChannelsListenersAsync();\n\n    // next get store channels count\n    this.getChannelsCountAsync();\n  };\n\n  // RESET LISTENERS\n  resetChannelsListeners = () => {\n    // only proceed if a read provider is attached\n    if (this.state.epnsReadProvider) {\n      this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\n      this.state.epnsReadProvider.removeAllListeners(\"UpdateChannel\");\n      this.state.epnsCommReadProvider.removeAllListeners(\"Subscribe\");\n      this.state.epnsCommReadProvider.removeAllListeners(\"Unsubscribe\");\n    }\n  };\n\n  // init LISTENERS\n  initChannelsListenersAsync = async () => {\n    // Add Listeners\n    await this.listenForAddChannelAnyAsync();\n    await this.listenForAddChannelSelfAsync();\n\n    await this.listenForUpdateChannelAnyAsync();\n    await this.listenForUpdateChannelSelfAsync();\n\n    // use the communicator contract for the below\n    await this.listenForSubscribeAnyAsync();\n    await this.listenForSubscribeSelfAsync();\n    await this.listenForUnsubscribeAnyAsync();\n    await this.listenForUnsubscribeSelfAsync();\n  };\n\n  // 1. Add Any Channel Listeners\n  listenForAddChannelAnyAsync = async () => {\n    const contract = this.state.epnsReadProvider;\n    let filter = contract.filters.AddChannel(null, null);\n\n    contract.on(filter, async (channel, ipfs) => {\n      // Do own stuff\n      await this.incrementChannelsCountAsync(1);\n\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY]\n        )) {\n          if (callback) {\n            callback(channel, ipfs);\n          }\n        }\n      }\n    });\n  };\n\n  // 2. Add Self Channel Listener\n  listenForAddChannelSelfAsync = async () => {\n    const contract = this.state.epnsReadProvider;\n    let filter = contract.filters.AddChannel(this.state.account, null);\n\n    contract.on(filter, async (channel, ipfs) => {\n      // Do own stuff\n      // Nothing to do, just do callback\n\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF]\n        )) {\n          if (callback) {\n            callback(channel, ipfs);\n          }\n        }\n      }\n    });\n  };\n\n  // 3. Update Any Channel Listener\n  listenForUpdateChannelAnyAsync = async () => {\n    const contract = this.state.epnsReadProvider;\n    let filter = contract.filters.UpdateChannel(null, null);\n\n    contract.on(filter, async (channel, ipfs) => {\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY]\n        )) {\n          if (callback) {\n            callback(channel, ipfs);\n          }\n        }\n      }\n    });\n  };\n\n  // 4. Update Self Channel Listener\n  listenForUpdateChannelSelfAsync = async () => {\n    const contract = this.state.epnsReadProvider;\n    let filter = contract.filters.UpdateChannel(this.state.account, null);\n\n    contract.on(filter, async (channel, ipfs) => {\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF]\n        )) {\n          if (callback) {\n            callback(channel, ipfs);\n          }\n        }\n      }\n    });\n  };\n\n  // 5. Subscriber Any\n  listenForSubscribeAnyAsync = async () => {\n    const contract = this.state.epnsCommReadProvider;\n    let filter = contract.filters.Subscribe(null, null);\n\n    contract.on(filter, async (channel, user) => {\n      //   // Do own stuff\n      //   if (this.state.channelsMeta[channel]) {\n      //     const channelID = this.state.channelsMeta[channel];\n      //     let count = this.state.channelsMeta[channelID].memberCount.toNumber();\n      //     count = count + 1;\n      //     this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\n      //   }\n\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL]\n        )) {\n          if (callback) {\n            callback(channel, user);\n          }\n        }\n      }\n    });\n  };\n\n  // 6. Subscriber Self\n  listenForSubscribeSelfAsync = async () => {\n    const contract = this.state.epnsCommReadProvider;\n    let filter = contract.filters.Subscribe(this.state.account, null);\n\n    contract.on(filter, async (channel, user) => {\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL]\n        )) {\n          if (callback) {\n            callback(channel, user);\n          }\n        }\n      }\n    });\n  };\n\n  // 7. Unsubscribe Any\n  listenForUnsubscribeAnyAsync = async () => {\n    const contract = this.state.epnsCommReadProvider;\n    let filter = contract.filters.Unsubscribe(null, null);\n\n    contract.on(filter, async (channel, user) => {\n      // Do own stuff\n      // if (this.state.channelsMeta[channel]) {\n      //   const channelID = this.state.channelsMeta[channel];\n      //   let count = this.state.channelsMeta[channelID].memberCount.toNumber();\n      //   count = count - 1;\n      //   this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\n      // }\n\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL]\n        )) {\n          if (callback) {\n            callback(channel, user);\n          }\n        }\n      }\n    });\n  };\n\n  // 8. Unsubscribe Self\n  listenForUnsubscribeSelfAsync = async () => {\n    const contract = this.state.epnsCommReadProvider;\n    let filter = contract.filters.Unsubscribe(this.state.account, null);\n\n    contract.on(filter, async (channel, user) => {\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL]\n        )) {\n          if (callback) {\n            callback(channel, user);\n          }\n        }\n      }\n    });\n  };\n\n  // FOR CALLBACKS\n  addCallbacks = (callbackType, callbackID, callback) => {\n    // first check if callback already exists\n    if (!this.state.callbacks[callbackType]) {\n      this.state.callbacks[callbackType] = {};\n    }\n\n    if (!this.state.callbacks[callbackType][callbackID]) {\n      this.state.callbacks[callbackType][callbackID] = callback;\n    }\n  };\n\n  removeCallbacks = (callbackType, callbackID) => {\n    // first check if callback already exists\n    if (this.state.callbacks[callbackType][callbackID]) {\n      this.state.callbacks[callbackType][callbackID] = null;\n    }\n  };\n\n  // CHANNELS COUNT\n  getChannelsCountAsync = async () => {\n    const enableLogs = 0;\n\n    return new Promise(async (resolve, reject) => {\n      if (this.state.channelsCount == -1) {\n        // Count not set, get and set it first\n        const count = EPNSCoreHelper.getTotalNumberOfChannels(\n          this.state.epnsReadProvider\n        )\n          .then((response) => {\n            this.state.channelsCount = response;\n\n            if (enableLogs)\n              console.log(\"getChannelsCountAsync() --> %o\", response);\n            resolve(this.state.channelsCount);\n          })\n          .catch((err) => {\n            console.log(\"!!!Error, getChannelsCountAsync() --> %o\", err);\n            reject(err);\n          });\n      } else {\n        resolve(this.state.channelsCount);\n      }\n    });\n  };\n\n  incrementChannelsCountAsync = async (incrementCount) => {\n    return new Promise((resolve, reject) => {\n      this.getChannelsCountAsync()\n        .then((response) => {\n          this.state.channelsCount = response + incrementCount;\n          console.log(\n            \"incrementChannelsCountAsync() --> %d\",\n            this.state.channelsCount\n          );\n          resolve(this.state.channelsCount);\n        })\n        .catch((err) => {\n          console.log(\"!!!Error, incrementChannelsCountAsync() --> %o\", err);\n          reject(err);\n        });\n    });\n  };\n  /**\n   * Get paginated channel information\n   * @param {Number} startIndex the number of channels viewed so far e.g 50\n   * @param {Number} pageCount the number of items per page we want\n   * @returns \n   */\n  getChannelFromApi = async (startIndex, pageCount) => {\n    return postReq(\"/channels/fetch_channels\", {\n      page: Math.ceil(startIndex / pageCount) || 1,\n      pageSize: pageCount,\n      op: \"write\",\n    }).then((response) => {\n      const output = response.data.results.map(({channel}) => ({addr: channel}));\n      return output;\n    });\n  };\n  // CHANNELS META FUNCTIONS\n  // To get channels meta\n  // get channels meta in a paginated format\n  // by passing in the starting index and the number of items per page\n  getChannelsMetaAsync = async (startIndex, pageCount) => {\n    this.getChannelFromApi(startIndex, pageCount)\n    return new Promise(async (resolve, reject) => {\n      // get total number of channels\n      const channelsCount = await this.getChannelsCountAsync();\n      let stopIndex = startIndex + pageCount;\n\n      // if the stop index is -1 then get all channels\n      if (stopIndex == -1 || stopIndex > channelsCount) {\n        stopIndex = channelsCount;\n      }\n\n      // initialise an array with the values from 0 to the length of the number of channels\n      let channelIDs = [];\n\n      for (let i = startIndex; i < stopIndex; i++) {\n        channelIDs.push(i);\n      }\n      console.log({ channelIDs });\n\n      const promises = channelIDs.map(async (channelID) => {\n        // Match the cache\n        return this.getChannelMetaAsync(channelID)\n          .then((response) => response)\n          .catch((err) =>\n            console.log(\n              \"!!!Error (but skipping), getChannelMetaAsync() --> %o\",\n              err\n            )\n          );\n      });\n\n      // wait until all promises are resolved\n      const channelMetaData = await Promise.all(promises);\n\n      // return channels meta\n      // console.log(\"getChannelsMetaAsync(From %d to %d) --> %o\", startIndex, stopIndex, channelMetaData);\n      resolve(channelMetaData);\n    });\n  };\n\n  // To get a single channel meta via id\n  getChannelMetaAsync = async (channelID) => {\n    return new Promise(async (resolve, reject) => {\n      if (this.state.channelsMeta[channelID]) {\n        console.log(\n          \"getChannelMetaAsync() [CACHED] --> %o\",\n          this.state.channelsMeta[channelID]\n        );\n        resolve(this.state.channelsMeta[channelID]);\n      } else {\n        let channelAddress;\n\n        await EPNSCoreHelper.getChannelAddressFromID(\n          channelID,\n          this.state.epnsReadProvider\n        )\n          .then(async (response) => {\n            channelAddress = response;\n            await this.getChannelMetaViaAddressAsync(channelAddress).then(\n              (response) => {\n                // update the channel cache before resolving\n                this.state.channelsMeta[channelID] = response;\n                this.state.channelsMeta[channelAddress] = channelID;\n\n                // resolve\n                // console.log(\"getChannelMetaAsync() [Address: %s] --> %o\", channelAddress, response);\n                resolve(response);\n              }\n            );\n          })\n          .catch((err) => {\n            console.log(\"!!!Error, getChannelMetaAsync() --> %o\", err);\n            reject(err);\n          });\n      }\n    });\n  };\n\n  // To get a single channel meta via address\n  getChannelMetaViaAddressAsync = async (channelAddress) => {\n    return new Promise(async (resolve, reject) => {\n      if (this.state.channelsMeta[channelAddress]) {\n        const channelID = this.state.channelsMeta[channelAddress];\n\n        console.log(\n          \"getChannelMetaViaAddressAsync() [CACHED] --> %o\",\n          this.state.channelsMeta[channelID]\n        );\n        resolve(this.state.channelsMeta[channelID]);\n      } else {\n        // Can't cache this :(, no way to know channel id\n        await EPNSCoreHelper.getChannelInfo(\n          channelAddress,\n          this.state.epnsReadProvider\n        )\n          .then((response) => {\n            // resolve\n            // console.log(\"getChannelMetaViaAddressAsync() [Address: %s] --> %o\", channelAddress, response);\n            resolve(response);\n          })\n          .catch((err) => {\n            console.log(\n              \"!!!Error, getChannelMetaViaAddressAsync() --> %o\",\n              err\n            );\n            reject(err);\n          });\n      }\n    });\n  };\n\n  getChannelSubscribers = async (channelAddress) => {\n    const cachedSubscribers = this.state.subscribers[channelAddress];\n    if (cachedSubscribers) {\n      return cachedSubscribers;\n    }\n    return postReq(\"/channels/get_subscribers\", {\n      channel: channelAddress,\n      op: \"read\",\n    })\n      .then(({ data }) => {\n        const subs = data.subscribers;\n        this.state.subscribers[channelAddress] = subs;\n        return subs;\n      })\n      .catch((err) => {\n        console.log(`getChannelSubscribers => ${err.message}`);\n        return [];\n      });\n  };\n\n  // CHANNELS INFO FUNCTIONS\n  // To get a single channel meta via id\n  getChannelJsonAsync = async (channelAddress) => {\n    return new Promise(async (resolve, reject) => {\n      if (this.state.channelsJson[channelAddress]) {\n        // console.log(\"getChannelJsonAsync() [CACHED] --> %o\", this.state.channelsJson[channelAddress]);\n        resolve(this.state.channelsJson[channelAddress]);\n      } else {\n        await EPNSCoreHelper.getChannelJsonFromChannelAddress(\n          channelAddress,\n          this.state.epnsReadProvider\n        )\n          .then((response) => {\n            // First set the cache\n            this.state.channelsJson[channelAddress] = response;\n\n            // resolve\n            // console.log(\"getChannelJsonAsync() [Address: %s] --> %o\", channelAddress, response);\n            resolve(response);\n          })\n          .catch((err) => {\n            console.log(\"!!!Error, getChannelJsonAsync() --> %o\", err);\n            reject(err);\n          });\n      }\n    });\n  };\n}\n","/**\n * This file helps us maintain the channels fetched in state, such that when we leave the tab, the channels can be fetched from memory\n */\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  CHANNNEL_DEACTIVATED_STATE: 2,\n  CHANNEL_BLOCKED_STATE: 3,\n  CHANNEL_ACTIVE_STATE: 1,\n  CHANNEL_BLACKLIST: [], //a list of channels\n  page: 0,\n  channels: [], // the channels meta-data\n  channelsCache: {}, // a mapping of channel address to channel details\n};\n\nexport const contractSlice = createSlice({\n  name: \"channels\",\n  initialState,\n  reducers: {\n    setChannelMeta: (state, action) => {\n      state.channels = action.payload;\n    },\n    incrementPage: (state) => {\n      state.page += 1;\n    },\n    cacheChannelInfo: (state, action) => {\n      const { address, meta } = action.payload;\n      state.channelsCache[address] = meta;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  setChannelMeta,\n  incrementPage,\n  cacheChannelInfo,\n} = contractSlice.actions;\n\nexport default contractSlice.reducer;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { Device } from \"assets/Device\";\n\nimport { toast as toaster } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport Loader from \"react-loader-spinner\";\nimport Skeleton from \"@yisheng90/react-loading\";\nimport { IoMdPeople } from \"react-icons/io\";\nimport { GoVerified } from \"react-icons/go\";\nimport { FaRegAddressCard } from \"react-icons/fa\";\nimport { AiTwotoneCopy } from \"react-icons/ai\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { postReq } from \"api\";\nimport NotificationToast from \"components/NotificationToast\";\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\nimport { cacheChannelInfo } from \"redux/slices/channelSlice\";\n\n// Create Header\nfunction ViewChannelItem({ channelObjectProp }) {\n  const dispatch = useDispatch();\n  const {\n    epnsReadProvider,\n    epnsWriteProvider,\n    epnsCommReadProvider,\n    pushAdminAddress,\n    ZERO_ADDRESS,\n  } = useSelector((state) => state.contracts);\n  const { canVerify } = useSelector((state) => state.admin);\n  const { channelsCache, CHANNEL_BLACKLIST } = useSelector(\n    (state) => state.channels\n  );\n  const { account, library, chainId } = useWeb3React();\n  const isOwner = channelObjectProp.addr === account;\n\n  const [channelObject, setChannelObject] = React.useState({});\n  const [channelJson, setChannelJson] = React.useState({});\n  const [subscribed, setSubscribed] = React.useState(true);\n  const [loading, setLoading] = React.useState(true);\n  const [memberCount, setMemberCount] = React.useState(0);\n  const [isPushAdmin, setIsPushAdmin] = React.useState(false);\n  const [isVerified, setIsVerified] = React.useState(false);\n  const [isBlocked, setIsBlocked] = React.useState(false);\n  const [vLoading, setvLoading] = React.useState(false);\n  const [bLoading, setBLoading] = React.useState(false);\n  const [txInProgress, setTxInProgress] = React.useState(false);\n  const [canUnverify, setCanUnverify] = React.useState(false);\n  const [verifierDetails, setVerifierDetails] = React.useState(null);\n  const [copyText, setCopyText] = React.useState(null);\n\n  // ------ toast related section\n  const isChannelBlacklisted = CHANNEL_BLACKLIST.includes(channelObject.addr);\n  const [toast, showToast] = React.useState(null);\n  const clearToast = () => showToast(null);\n\n  //clear toast variable after it is shown\n  React.useEffect(() => {\n    if (toast) {\n      clearToast();\n    }\n  }, [toast]);\n  // ------ toast related section\n\n  React.useEffect(() => {\n    if (!channelObject.addr) return;\n    if (channelObject.verifiedBy) {\n      // procced as usual\n      fetchChannelJson().catch((err) => alert(err.message));\n      setIsBlocked(\n        channelObject.channelState === 3 || channelObject.channelState === 2 //dont display channel if blocked //dont display channel if deactivated\n      );\n    } else {\n      // if this key (verifiedBy) is not present it means we are searching and should fetch the channel object from chain again\n      epnsReadProvider.channels(channelObject.addr).then((response) => {\n        setChannelObject({ ...response, addr: channelObject.addr });\n        fetchChannelJson();\n      });\n    }\n  }, [account, channelObject, chainId]);\n\n  React.useEffect(() => {\n    if (!channelObjectProp) return;\n    setChannelObject(channelObjectProp);\n  }, [channelObjectProp]);\n\n  React.useEffect(() => {\n    if (!isVerified || channelObject?.verifiedBy === ZERO_ADDRESS) return;\n    ChannelsDataStore.instance\n      .getChannelJsonAsync(channelObject.verifiedBy)\n      .then((verifierDetails) => {\n        setVerifierDetails(verifierDetails);\n      })\n      .catch((err) => {\n        console.log(channelObject.verifiedBy, err);\n      });\n  }, [isVerified, channelObject]);\n\n  const EPNS_DOMAIN = {\n    name: \"EPNS COMM V1\",\n    chainId: chainId,\n    verifyingContract: epnsCommReadProvider.address,\n  };\n  // to fetch channels\n  const fetchChannelJson = async () => {\n    try {\n      let channelJson = {};\n      setCopyText(channelObject.addr);\n      if (channelsCache[channelObject.addr]) {\n        channelJson = channelsCache[channelObject.addr];\n      } else {\n        channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(\n          channelObject.addr\n        );\n        dispatch(\n          cacheChannelInfo({\n            address: channelObject.addr,\n            meta: channelJson,\n          })\n        );\n      }\n      const channelSubscribers = await postReq(\"/channels/get_subscribers\", {\n        channel: channelObject.addr,\n        op: \"read\",\n      })\n        .then(({ data }) => {\n          const subs = data.subscribers;\n\n          return subs;\n        })\n        .catch((err) => {\n          console.log(`getChannelSubscribers => ${err.message}`);\n          return [];\n        });\n      const subscribed = channelSubscribers.find((sub) => {\n        return sub.toLowerCase() === account.toLowerCase();\n      });\n\n      setIsPushAdmin(pushAdminAddress === account);\n      setMemberCount(channelSubscribers.length);\n      setSubscribed(subscribed);\n      setIsVerified(\n        Boolean(\n          channelObject && channelObject.verifiedBy &&\n            (channelObject.verifiedBy !== ZERO_ADDRESS ||\n              channelObject.addr === pushAdminAddress)\n        )\n      );\n      setCanUnverify(channelObject.verifiedBy == account);\n      setChannelJson({ ...channelJson, addr: channelObject.addr });\n      setLoading(false);\n    } catch (err) {\n      setIsBlocked(true);\n    }\n  };\n\n  // toast customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader type=\"Oval\" color={color} height={30} width={30} />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  );\n\n  // to subscribe\n  const subscribe = async () => {\n    subscribeAction(false);\n  };\n  const formatAddress = (addressText) => {\n    return addressText.length > 40\n      ? `${addressText.slice(0, 4)}....${addressText.slice(36)}`\n      : addressText;\n  };\n\n  // Toastify\n  let notificationToast = () =>\n    toaster.dark(<LoaderToast msg=\"Preparing Notification\" color=\"#fff\" />, {\n      position: \"bottom-right\",\n      autoClose: false,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n  const verifyChannel = () => {\n    setvLoading(true);\n    // post op\n    epnsWriteProvider\n      .verifyChannel(channelObject.addr)\n      .then(async (tx) => {\n        console.log(tx);\n        console.log(\"Transaction Sent!\");\n\n        toaster.update(notificationToast(), {\n          render: \"Transaction sent\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n\n        // await tx.wait(1);\n        // console.log (\"Transaction Mined!\");\n        setIsVerified(true);\n      })\n      .catch((err) => {\n        console.log(\"!!!Error verifyChannel() --> %o\", err);\n        toaster.update(notificationToast(), {\n          render: \"Transacion Failed: \" + err.error?.message || \"Unknown Error\",\n          type: toaster.TYPE.ERROR,\n          autoClose: 5000,\n        });\n      })\n      .finally(() => {\n        setvLoading(false);\n      });\n  };\n\n  const unverifyChannel = () => {\n    setvLoading(true);\n    epnsWriteProvider\n      .unverifyChannel(channelObject.addr)\n      .then(async (tx) => {\n        console.log(tx);\n        console.log(\"Transaction Sent!\");\n\n        toaster.update(notificationToast(), {\n          render: \"Transaction sent\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n\n        await tx.wait(1);\n        console.log(\"Transaction Mined!\");\n        setIsVerified(false);\n      })\n      .catch((err) => {\n        console.log(\"!!!Error handleSendMessage() --> %o\", err);\n        toaster.update(notificationToast(), {\n          render: \"Transacion Failed: \" + err.error?.message || \"Unknown Error\",\n          type: toaster.TYPE.ERROR,\n          autoClose: 5000,\n        });\n      });\n    setvLoading(false);\n  };\n  const blockChannel = () => {\n    setBLoading(true);\n    epnsWriteProvider\n      .blockChannel(channelObject.addr)\n      .then(async (tx) => {\n        console.log(tx);\n        console.log(\"Transaction Sent!\");\n\n        toaster.update(notificationToast(), {\n          render: \"Transaction Sent\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n\n        // await tx.wait(1);\n        // console.log (\"Transaction Mined!\");\n      })\n      .catch((err) => {\n        console.log(\"!!!Error handleSendMessage() --> %o\", err);\n        toaster.update(notificationToast(), {\n          render: \"Transacion Failed: \" + err.error.message,\n          type: toaster.TYPE.ERROR,\n          autoClose: 5000,\n        });\n      })\n      .finally(() => {\n        // post op\n        setBLoading(false);\n        setIsBlocked(true);\n      });\n  };\n\n  const subscribeAction = async () => {\n    setTxInProgress(true);\n    let txToast;\n    try {\n      const type = {\n        Subscribe: [\n          { name: \"channel\", type: \"address\" },\n          { name: \"subscriber\", type: \"address\" },\n          { name: \"action\", type: \"string\" },\n        ],\n      };\n      const message = {\n        channel: channelObject.addr,\n        subscriber: account,\n        action: \"Subscribe\",\n      };\n\n      const signature = await library\n        .getSigner(account)\n        ._signTypedData(EPNS_DOMAIN, type, message);\n      txToast = toaster.dark(\n        <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\n        {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        }\n      );\n\n      postReq(\"/channels/subscribe_offchain\", {\n        signature,\n        message,\n        op: \"write\",\n        chainId,\n        contractAddress: epnsCommReadProvider.address,\n      }).then((res) => {\n        setSubscribed(true);\n        setMemberCount(memberCount + 1);\n        toaster.update(txToast, {\n          render: \"Sucesfully opted into channel !\",\n          type: toaster.TYPE.SUCCESS,\n          autoClose: 5000,\n        });\n        console.log(res);\n        setTxInProgress(false);\n      });\n    } catch (err) {\n      toaster.update(txToast, {\n        render: \"There was an error opting into channel (\" + err.message + \")\",\n        type: toaster.TYPE.ERROR,\n        autoClose: 5000,\n      });\n      console.log(err);\n    } finally {\n      setTxInProgress(false);\n    }\n  };\n\n  const copyToClipboard = (url) => {\n    // fallback for non navigator browser support\n    if (navigator && navigator.clipboard) {\n      navigator.clipboard.writeText(url);\n    } else {\n      const el = document.createElement(\"textarea\");\n      el.value = url;\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(el);\n    }\n  };\n\n  const unsubscribeAction = async () => {\n    let txToast;\n    try {\n      const type = {\n        Unsubscribe: [\n          { name: \"channel\", type: \"address\" },\n          { name: \"unsubscriber\", type: \"address\" },\n          { name: \"action\", type: \"string\" },\n        ],\n      };\n      const message = {\n        channel: channelObject.addr,\n        unsubscriber: account,\n        action: \"Unsubscribe\",\n      };\n      const signature = await library\n        .getSigner(account)\n        ._signTypedData(EPNS_DOMAIN, type, message);\n\n      txToast = toaster.dark(\n        <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\n        {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        }\n      );\n\n      postReq(\"/channels/unsubscribe_offchain\", {\n        signature,\n        message,\n        op: \"write\",\n        chainId,\n        contractAddress: epnsCommReadProvider.address,\n      })\n        .then((res) => {\n          setSubscribed(false);\n          setMemberCount(memberCount + 1);\n          toaster.update(txToast, {\n            render: \"Sucesfully opted out of channel !\",\n            type: toaster.TYPE.SUCCESS,\n            autoClose: 5000,\n          });\n          console.log(res);\n        })\n        .catch((err) => {\n          toaster.update(txToast, {\n            render:\n              \"There was an error opting into channel (\" + err.message + \")\",\n            type: toaster.TYPE.ERROR,\n            autoClose: 5000,\n          });\n          console.log(err);\n        })\n        .finally(() => {\n          setTxInProgress(false);\n        });\n    } finally {\n      setTxInProgress(false);\n    }\n  };\n\n  if (isBlocked) return <></>;\n  if (isChannelBlacklisted) return <></>;\n\n  // render\n  return (\n    <Container key={channelObject.addr}>\n      <ChannelLogo>\n        <ChannelLogoOuter>\n          <ChannelLogoInner>\n            {loading ? (\n              <Skeleton color=\"#eee\"  height=\"100%\" />\n            ) : (\n              <ChannelLogoImg src={`${channelJson.icon}`} />\n            )}\n          </ChannelLogoInner>\n        </ChannelLogoOuter>\n      </ChannelLogo>\n\n      <ChannelInfo>\n        <ChannelTitle>\n          {loading ? (\n            <Skeleton color=\"#eee\" width=\"50%\" height={24} />\n          ) : (\n            <ChannelTitleLink\n              href={channelJson.url}\n              target=\"_blank\"\n              rel=\"nofollow\"\n            >\n              {channelJson.name}\n              {isVerified && (\n                <Subscribers style={{ display: \"inline\", marginLeft: \"8px\" }}>\n                  <GoVerified size={18} color=\"#35c4f3\" />\n                </Subscribers>\n              )}\n            </ChannelTitleLink>\n          )}\n        </ChannelTitle>\n\n        <ChannelDesc>\n          {loading ? (\n            <>\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\n              </SkeletonWrapper>\n\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\n              </SkeletonWrapper>\n\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"40%\" height={5} />\n              </SkeletonWrapper>\n            </>\n          ) : (\n            <ChannelDescLabel>{channelJson.info}</ChannelDescLabel>\n          )}\n        </ChannelDesc>\n\n        <ChannelMeta>\n          {loading ? (\n            <>\n              <SkeletonWrapper atH={10} atW={30} marginBottom=\"0\">\n                <Skeleton />\n              </SkeletonWrapper>\n            </>\n          ) : (\n            <ColumnFlex>\n              <FlexBox style={{ marginBottom: \"5px\" }}>\n                <Subscribers>\n                  <IoMdPeople size={20} color=\"#ccc\" />\n                  <SubscribersCount>{memberCount}</SubscribersCount>\n                </Subscribers>\n\n                <Subscribers style={{ marginLeft: \"10px\" }}>\n                  <FaRegAddressCard size={20} color=\"#ccc\" />\n                  <SubscribersCount\n                    onClick={() => {\n                      copyToClipboard(channelJson.addr);\n                      setCopyText(\"copied\");\n                    }}\n                    onMouseEnter={() => {\n                      setCopyText(\"click to copy\");\n                    }}\n                    onMouseLeave={() => {\n                      setCopyText(channelJson.addr);\n                    }}\n                    style={{ cursor: \"pointer\" }}\n                  >\n                    <AiTwotoneCopy />\n                    {formatAddress(copyText)}\n                  </SubscribersCount>\n                </Subscribers>\n              </FlexBox>\n              {verifierDetails && (\n                <Subscribers>\n                  <VerifiedBy>Verified by:</VerifiedBy>\n                  <VerifierIcon src={verifierDetails.icon} />\n                  <VerifierName>{verifierDetails.name}</VerifierName>\n                </Subscribers>\n              )}\n            </ColumnFlex>\n          )}\n        </ChannelMeta>\n      </ChannelInfo>\n      {!!account && !!library && (\n        <>\n          <LineBreak />\n          <ChannelActions>\n            {loading && (\n              <SkeletonButton>\n                <Skeleton />\n              </SkeletonButton>\n            )}\n            {!loading && isPushAdmin && (\n              <SubscribeButton onClick={blockChannel} disabled={bLoading}>\n                {bLoading && (\n                  <ActionLoader>\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n                  </ActionLoader>\n                )}\n                <ActionTitle hideit={bLoading}>Block channel</ActionTitle>\n              </SubscribeButton>\n            )}\n            {!loading && (isPushAdmin || canVerify) && !isVerified && (\n              <SubscribeButton onClick={verifyChannel} disabled={vLoading}>\n                {vLoading && (\n                  <ActionLoader>\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n                  </ActionLoader>\n                )}\n                <ActionTitle hideit={vLoading}>Verify Channel</ActionTitle>\n              </SubscribeButton>\n            )}\n            {!loading && (isPushAdmin || canUnverify) && isVerified && (\n              <UnsubscribeButton onClick={unverifyChannel} disabled={vLoading}>\n                {vLoading && (\n                  <ActionLoader>\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n                  </ActionLoader>\n                )}\n                <ActionTitle hideit={vLoading}>Unverify Channel</ActionTitle>\n              </UnsubscribeButton>\n            )}\n            {!loading && !subscribed && (\n              <SubscribeButton onClick={subscribe} disabled={txInProgress}>\n                {txInProgress && (\n                  <ActionLoader>\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n                  </ActionLoader>\n                )}\n                <ActionTitle hideit={txInProgress}>Opt-In</ActionTitle>\n              </SubscribeButton>\n            )}\n            {!loading && subscribed && (\n              <>\n                {isOwner && <OwnerButton disabled>Owner</OwnerButton>}\n                {!isOwner && (\n                  <UnsubscribeButton\n                    onClick={unsubscribeAction}\n                    disabled={txInProgress}\n                  >\n                    {txInProgress && (\n                      <ActionLoader>\n                        <Loader\n                          type=\"Oval\"\n                          color=\"#FFF\"\n                          height={16}\n                          width={16}\n                        />\n                      </ActionLoader>\n                    )}\n                    <ActionTitle hideit={txInProgress}>Opt-Out</ActionTitle>\n                  </UnsubscribeButton>\n                )}\n              </>\n            )}\n          </ChannelActions>\n        </>\n      )}\n      {toast && (\n        <NotificationToast notification={toast} clearToast={clearToast} />\n      )}\n    </Container>\n  );\n}\n\nconst FlexBox = styled.div`\n  display: flex;\n`;\n\nconst ColumnFlex = styled(FlexBox)`\n  flex-direction: column;\n`;\n// css styles\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-wrap: wrap;\n\n  background: #fff;\n  border-radius: 10px;\n  border: 1px solid rgb(237, 237, 237);\n\n  margin: 15px 0px;\n  justify-content: center;\n  padding: 10px;\n`;\n\nconst SkeletonWrapper = styled.div`\n  overflow: hidden;\n  width: ${(props) => props.atW + \"%\" || \"100%\"};\n  height: ${(props) => props.atH}px;\n  border-radius: ${(props) => props.borderRadius || 10}px;\n  margin-bottom: ${(props) => props.marginBottom || 5}px;\n  margin-right: ${(props) => props.marginRight || 0}px;\n`;\n\nconst ChannelLogo = styled.div`\n  max-width: 100px;\n  min-width: 32px;\n  flex: 1;\n  margin: 5px;\n  padding: 10px;\n  border: 2px solid #fafafa;\n  overflow: hidden;\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-self: flex-start;\n`;\n\nconst ChannelLogoOuter = styled.div`\n  padding-top: 100%;\n  position: relative;\n`;\n\nconst ChannelLogoInner = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  border-radius: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ChannelLogoImg = styled.img`\n  object-fit: contain;\n  width: 100%;\n  border-radius: 20px;\n  overflow: hidden;\n`;\n\nconst ChannelInfo = styled.div`\n  flex: 1;\n  margin: 5px 10px;\n  min-width: 120px;\n  flex-grow: 4;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst ChannelTitle = styled.div`\n  margin-bottom: 5px;\n`;\n\nconst ChannelTitleLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`;\n\nconst VerifiedBy = styled.span`\n  color: #ec008c;\n  font-size: 16px;\n  line-height: 20px;\n  letter-spacing: 0.05em;\n  font-weight: 600;\n  display: inline-block;\n`;\n\nconst VerifierIcon = styled.img`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  margin-left: 6px;\n  margin-right: 4px;\n`;\nconst VerifierName = styled.span`\n  font-weight: 400;\n  color: black;\n  font-size: 16px;\n  letter-spacing: 0em;\n`;\n\nconst ChannelDesc = styled.div`\n  flex: 1;\n  display: flex;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.75);\n  font-weight: 400;\n  flex-direction: column;\n`;\n\nconst ChannelDescLabel = styled.label`\n  flex: 1;\n`;\n\nconst ChannelMeta = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  font-size: 13px;\n`;\n\nconst ChannelMetaBox = styled.label`\n  margin: 0px 5px;\n  color: #fff;\n  font-weight: 600;\n  padding: 5px 10px;\n  display: flex;\n  border-radius: 10px;\n  font-size: 11px;\n  gap: 3px;\n`;\n\nconst Subscribers = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst SubscribersCount = styled(ChannelMetaBox)`\n  background: #35c4f3;\n  transition: 300ms;\n`;\n\nconst Pool = styled.div`\n  margin: 0px 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst PoolShare = styled(ChannelMetaBox)`\n  background: #674c9f;\n`;\n\nconst LineBreak = styled.div`\n  display: none;\n  flex-basis: 100%;\n  height: 0;\n\n  @media ${Device.tablet} {\n    display: block;\n  }\n`;\n\nconst ChannelActions = styled.div`\n  margin: 5px;\n  flex-grow: 1;\n  // max-width: 250px;\n  display: flex;\n  justify-content: flex-end;\n  // justify-content: center;\n  align-items: center;\n`;\n\nconst ChannelActionButton = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n  ${(props) =>\n    props.disabled &&\n    css`\n      &:hover {\n        opacity: 1;\n        cursor: default;\n        pointer: default;\n      }\n      &:active {\n        opacity: 1;\n        cursor: default;\n        pointer: default;\n      }\n    `}\n`;\n\nconst ActionTitle = styled.span`\n  ${(props) =>\n    props.hideit &&\n    css`\n      visibility: hidden;\n    `};\n`;\n\nconst ActionLoader = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SkeletonButton = styled.div`\n  border: 0;\n  outline: 0;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 10px;\n  border-radius: 5px;\n  flex: 1;\n`;\n\nconst SubscribeButton = styled(ChannelActionButton)`\n  background: #e20880;\n  min-width: 80px;\n`;\n\nconst UnsubscribeButton = styled(ChannelActionButton)`\n  background: #674c9f;\n  min-width: 80px;\n`;\n\nconst OwnerButton = styled(ChannelActionButton)`\n  background: #35c5f3;\n`;\n\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`;\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`;\n\n// Export Default\nexport default ViewChannelItem;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content, Item, ItemH, Span, Anchor} from 'components/SharedStyling';\n\nimport { FaGasPump } from 'react-icons/fa';\n\n// Faucet URLs\nfunction Faucets() {\n  // render\n  return (\n    <Section margin=\"5px 0px 0px 0px\">\n      <Content>\n        <ItemH\n          self=\"flex-end\"\n          bg=\"#fff\"\n          radius=\"8px\"\n          padding=\"30px 10px 10px 10px\"\n          border=\"1px solid #ededed\"\n          overflow=\"hidden\"\n          align=\"stretch\"\n        >\n          <Span\n            pos=\"absolute\"\n            top=\"10px\"\n            right=\"0px\"\n            padding=\"5px 10px\"\n            bg=\"#e20880\"\n            color=\"#fff\"\n            size=\"12px\"\n            weight=\"600\"\n          >\n            Get Free Kovan Ether\n          </Span>\n\n          <Item margin=\"5px\">\n            <Anchor\n              direction=\"column\"\n              href=\"https://faucet.metamask.io/\"\n              target=\"_blank\"\n              rel=\"nofollow\"\n            >\n              <FaGasPump size={30} color=\"#674c9f\"/>\n              <Span\n                bg=\"#000\"\n                color=\"#fff\"\n                size=\"10px\"\n                weight=\"600\"\n                spacing=\"0.1em\"\n                textAlign=\"center\"\n                padding=\"5px 10px\"\n                margin=\"10px 0px 0px 0px\"\n                textTransform=\"uppercase\"\n                radius=\"8px\"\n              >\n                Metamask Faucet\n              </Span>\n            </Anchor>\n          </Item>\n          <Item margin=\"5px\">\n            <Anchor\n              direction=\"column\"\n              href=\"https://gitter.im/kovan-testnet/faucet\"\n              target=\"_blank\"\n              rel=\"nofollow\"\n            >\n              <FaGasPump size={30} color=\"#674c9f\"/>\n              <Span\n                bg=\"#000\"\n                color=\"#fff\"\n                size=\"10px\"\n                weight=\"600\"\n                spacing=\"0.1em\"\n                textAlign=\"center\"\n                padding=\"5px 10px\"\n                margin=\"10px 0px 0px 0px\"\n                textTransform=\"uppercase\"\n                radius=\"8px\"\n              >\n                Faucet Kovan\n              </Span>\n            </Anchor>\n          </Item>\n\n        </ItemH>\n      </Content>\n    </Section>\n  );\n}\n\n// Export Default\nexport default Faucets;\n","\nimport React from 'react';\nimport styled from \"styled-components\";\nimport Loader from \"react-loader-spinner\";\nimport { Waypoint } from \"react-waypoint\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postReq } from \"api\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { envConfig } from \"@project/contracts\";\n\nimport DisplayNotice from \"components/DisplayNotice\";\nimport ViewChannelItem from \"components/ViewChannelItem\";\nimport Faucets from \"components/Faucets\";\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\nimport { setChannelMeta, incrementPage } from \"redux/slices/channelSlice\";\n\n\nconst CHANNELS_PER_PAGE = 10; //pagination parameter which indicates how many channels to return over one iteration\nconst SEARCH_TRIAL_LIMIT = 5; //ONLY TRY SEARCHING 5 TIMES BEFORE GIVING UP\nconst DEBOUNCE_TIMEOUT = 500; //time in millisecond which we want to wait for then to finish typing\n\n// Create Header\nfunction ViewChannels() {\n  const dispatch = useDispatch();\n  const { account, chainId } = useWeb3React();\n  const { channels, page, ZERO_ADDRESS } = useSelector(\n    (state: any) => state.channels\n  );\n\n  const [loading, setLoading] = React.useState(false);\n  const [moreLoading, setMoreLoading] = React.useState(false);\n  const [search, setSearch] = React.useState(\"\");\n  const [channelToShow, setChannelToShow] = React.useState([]);\n  const [loadingChannel, setLoadingChannel] = React.useState(false);\n  const [trialCount, setTrialCount] = React.useState(0);\n\n  const channelsVisited = page * CHANNELS_PER_PAGE;\n  const isMainnet = chainId == 1;\n\n  // fetch channel data if we are just getting to this pae\n  React.useEffect(() => {\n    setLoading(!channels.length); //if there are no channels initially then, set the loader\n    fetchInitialsChannelMeta();\n  }, [account, chainId]);\n\n  // to update a page\n  const updateCurrentPage = () => {\n    if (loading || moreLoading) return;\n    // fetch more channel information\n    setMoreLoading(true);\n    dispatch(incrementPage());\n    loadMoreChannelMeta(page + 1); //load the meta for the next page\n  };\n\n  // to fetch initial channels and logged in user data\n  const fetchInitialsChannelMeta = async () => {\n    // fetch the meta of the first `CHANNELS_PER_PAGE` channels\n    const channelsMeta = await ChannelsDataStore.instance.getChannelFromApi(\n      channelsVisited,\n      CHANNELS_PER_PAGE\n    );\n    dispatch(incrementPage())\n    if (!channels.length) {\n      dispatch(setChannelMeta(channelsMeta));\n    }\n    setLoading(false);\n  };\n\n  // load more channels when we get to the bottom of the page\n  const loadMoreChannelMeta = async (newPageNumber: any) => {\n    const startingPoint = newPageNumber * CHANNELS_PER_PAGE;\n    const moreChannels = await ChannelsDataStore.instance.getChannelFromApi(\n      startingPoint,\n      CHANNELS_PER_PAGE\n    );\n    dispatch(setChannelMeta([...channels, ...moreChannels]));\n    setMoreLoading(false);\n  };\n\n  // conditionally display the waymore bar which loads more information\n  // load more channels when we are at the bottom of the page\n  const showWayPoint = (index: any) => {\n    return Number(index) === channels.length - 1;\n  };\n\n  // Search Channels Feature\n  React.useEffect(() => {\n    if (!channels.length) return;\n    setChannelToShow(channels);\n  }, [channels]);\n\n\n  function searchForChannel() {\n    if (loadingChannel) return; //if we are already loading, do nothing\n    if (search) {\n      setLoadingChannel(true); //begin loading here\n      setChannelToShow([]); //maybe remove later\n      postReq(\"/channels/search\", {\n        query: search,\n        op: \"read\",\n      })\n        .then((data) => {\n          setChannelToShow(data.data.channels || []);\n          setLoadingChannel(false);\n        })\n        .catch(() => {\n          // if there's an error search for three times before giving up and displaying the normal channels\n          if (trialCount < SEARCH_TRIAL_LIMIT) {\n            setTrialCount((t) => t + 1);\n            searchForChannel(); //if theres an error, recursively search\n          } else {\n            setChannelToShow(channels);\n            setLoadingChannel(false);\n          }\n        });\n    } else {\n      // if no search item, then set it back to the channels\n      setLoadingChannel(false);\n      setChannelToShow(channels);\n    }\n  }\n\n  React.useEffect(() => {\n    // debounce request\n    // this is done so that we only make a request after the user stops typing\n    const timeout = setTimeout(searchForChannel, DEBOUNCE_TIMEOUT);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [search]);\n  \n  return (\n    <>\n      <Container>\n        {!loading && channels.length == 0 ? (\n          <ContainerInfo>\n            <DisplayNotice\n              title=\"That's weird, No Channels in EPNS... world is ending... right?\"\n              theme=\"primary\"\n            />\n          </ContainerInfo>\n        ) : (\n          <Items\n            id=\"scrollstyle-secondary\"\n            style={{ position: \"relative\", padding: \"0 1rem\" }}\n          >\n            {!loading && (\n              <Header style={{ minHeight: \"140px\" }}>\n                  {/* if on mainnet then occupy full width*/}\n                <InputWrapper style={{width: isMainnet ? \"100%\" : \"50%\"}}>\n                  <SearchBar\n                    type=\"text\"\n                    value={search}\n                    onChange={(e: any) => setSearch(e.target.value)}\n                    className=\"input\"\n                    placeholder=\"Search By Name/Address\"\n                  />\n                  <SearchIconImage src='/searchicon.svg' alt=\"\" />\n                </InputWrapper>\n                {!isMainnet && <Faucets />} \n                {/* only display faucets on mainnet */}\n              </Header>\n            )}\n\n            {/* render all channels depending on if we are searching or not */}\n            {(search ? channelToShow : channels).map(\n              (channel: any, index: any) =>\n                channel &&\n              channel.addr !== ZERO_ADDRESS && (\n                <>\n                  <div key={channel.addr}>\n                    <ViewChannelItem channelObjectProp={channel} />\n                  </div>\n                  {showWayPoint(index) && (\n                    <Waypoint onEnter={updateCurrentPage} />\n                  )}\n                </>\n              )\n            )}\n            {/* render all channels depending on if we are searching or not */}\n\n            {/* if we are in search mode and there are no channels then display error message */}\n            {search && !channelToShow?.length && !loadingChannel && (\n              <CenteredContainerInfo>\n                <DisplayNotice\n                  title=\"No channels match your query, please search for another name/address\"\n                  theme=\"third\"\n                />\n              </CenteredContainerInfo>\n            )}\n            {/* display loader if pagination is loading next batch of channelTotalList */}\n            {((moreLoading && channels.length) ||\n              loading ||\n              loadingChannel) && (\n              <CenterContainer>\n                <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\n              </CenterContainer>\n            )}\n          </Items>\n        )}\n      </Container>\n    </>\n  );\n}\n\n// css styles\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: -webkit-sticky;\n  position: sticky;\n  top: 0px;\n  z-index: 2;\n  background: #fafafa;\n\n  @media (max-width: 600px) {\n    flex-direction: column;\n  }\n`;\nconst InputWrapper = styled.div`\n  width: 50%;\n  position: relative;\n\n  @media (max-width: 600px) {\n    width: 100%;\n    margin: 2rem 0;\n  }\n`;\n\nconst SearchBar = styled.input`\n  width: 100%;\n  padding-right: 50px;\n  height: 60px;\n  padding-left: 40px;\n\n  background: rgb(255, 255, 255);\n  border: 1px solid rgba(169, 169, 169, 0.5);\n  box-sizing: border-box;\n  border-radius: 10px;\n  transition: 500ms;\n  text-transform: capitalize;\n  font-size: 16px;\n\n  input[type=\"reset\"] {\n    display: none;\n  }\n  &::placeholder {\n    letter-spacing: 0.15em;\n  }\n  &:hover,\n  &:active,\n  &:focus {\n    outline: none;\n  }\n  &:focus {\n    border: 1px solid #ec008c;\n  }\n`;\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n\n  max-height: 92vh;\n`;\n\nconst ContainerInfo = styled.div`\n  padding: 20px;\n`;\n\nconst CenteredContainerInfo = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CenterContainer = styled(ContainerInfo)`\n  width: fit-content;\n  margin: auto;\n`;\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`;\n\nconst SearchIconImage = styled.img`\n  position: absolute;\n  right: 4px;\n  top: 4px;\n`;\n\n// Export Default\nexport default ViewChannels;\n","import React from 'react'\n\nexport const CloseIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.243\" height=\"10.243\" viewBox=\"0 0 16.243 16.243\">\n        <g id=\"Group_4723\" data-name=\"Group 4723\" transform=\"translate(2.121 2.121)\">\n            <g id=\"Group_4716\" data-name=\"Group 4716\" transform=\"translate(0)\">\n            <line id=\"Line_1079\" data-name=\"Line 1079\" x2=\"16.97\" transform=\"translate(0 12) rotate(-45)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"3\"/>\n            <line id=\"Line_1080\" data-name=\"Line 1080\" y2=\"16.97\" transform=\"translate(0 0) rotate(-45)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"3\"/>\n            </g>\n        </g>\n    </svg>\n);\n","import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport Dropdown from \"react-dropdown\";\nimport { FiLink } from \"react-icons/fi\";\nimport Loader from \"react-loader-spinner\";\nimport styled from \"styled-components\";\nimport { BsFillImageFill } from \"react-icons/bs\";\nimport { useSelector } from \"react-redux\";\nimport { postReq } from \"api\";\nimport {\n  Section,\n  Content,\n  Item,\n  ItemH,\n  H2,\n  H3,\n  Span,\n  Button,\n  FormSubmision,\n  Input,\n  TextField,\n} from \"components/SharedStyling\";\n\nimport \"react-dropdown/style.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nimport Switch from \"@material-ui/core/Switch\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport { CloseIcon } from \"assets/icons\";\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\nimport CryptoHelper from \"helpers/CryptoHelper\";\nconst ethers = require(\"ethers\");\n\n// Set Notification Form Type | 0 is reserved for protocol storage\nconst NFTypes = [\n  { value: \"1\", label: \"Broadcast (IPFS Payload)\" },\n  { value: \"2\", label: \"Secret (IPFS Payload)\" },\n  { value: \"3\", label: \"Targetted (IPFS Payload)\" },\n  // { value: \"4\", label: \"Subset (IPFS Payload)\" },\n  // { value: \"5\", label: \"Offchain (Push)\" },\n];\nconst LIMITER_KEYS = [\"Enter\", \",\"];\n\n// Create Header\nfunction SendNotifications() {\n  const { account, library, chainId } = useWeb3React();\n  const { epnsCommWriteProvider, epnsCommReadProvider } = useSelector(\n    (state: any) => state.contracts\n  );\n  const { channelDetails, delegatees } = useSelector(\n    (state: any) => state.admin\n  );\n  const { CHANNNEL_DEACTIVATED_STATE } = useSelector(\n    (state: any) => state.channels\n  );\n\n  const [nfProcessing, setNFProcessing] = React.useState(0);\n  const [channelAddress, setChannelAddress] = React.useState(\"\");\n  const [nfRecipient, setNFRecipient] = React.useState(\"\");\n  const [multipleRecipients, setMultipleRecipients] = React.useState([]);\n  const [tempRecipeint, setTempRecipient] = React.useState(\"\"); // to temporarily hold the address of one recipient who would be entered into the recipeints array above.\n  const [nfType, setNFType] = React.useState(\"\");\n  const [nfSub, setNFSub] = React.useState(\"\");\n  const [nfSubEnabled, setNFSubEnabled] = React.useState(false);\n  const [nfMsg, setNFMsg] = React.useState(\"\");\n  const [nfCTA, setNFCTA] = React.useState(\"\");\n  const [nfCTAEnabled, setNFCTAEnabled] = React.useState(false);\n  const [nfMedia, setNFMedia] = React.useState(\"\");\n  const [nfMediaEnabled, setNFMediaEnabled] = React.useState(false);\n  const [nfInfo, setNFInfo] = React.useState(\"\");\n  const [delegateeOptions, setDelegateeOptions] = React.useState([]);\n\n  const isChannelDeactivated = channelDetails\n    ? channelDetails.channelState === CHANNNEL_DEACTIVATED_STATE\n    : false;\n  const cannotDisplayDelegatees =\n    (delegatees.length === 1 && delegatees[0].address === account) ||\n    !delegatees.length; //do not display delegatees dropdown if you are the only delegatee to yourself or there are no delegatess\n  // construct a list of channel delegators\n  React.useEffect(() => {\n    if (!account) return;\n    if (!delegatees || !delegatees.length) {\n      setChannelAddress(account);\n    } else {\n      setDelegateeOptions(\n        delegatees.map((oneDelegatee: any) => ({\n          value: oneDelegatee.address,\n          label: (\n            <CustomDropdownItem>\n              <img src={oneDelegatee.icon} alt=\"\" />\n              <div>{oneDelegatee.name}</div>\n            </CustomDropdownItem>\n          ),\n        }))\n      );\n      // default the channel address to the first one on the list which should be that of the user if they have a channel\n      setChannelAddress(delegatees[0].address);\n    }\n  }, [delegatees, account]);\n  console.log(delegateeOptions);\n\n  // on change for the subset type notifications input\n  const handleSubsetInputChange = (e: any) => {\n    // if the user enters in a comma or an enter then seperate the addresses\n    if (LIMITER_KEYS.includes(e.key)) {\n      e.preventDefault();\n      // if they enter a limiter key, then add the temp value to the recipeints list\n      // then clear the value of the temp text\n      setMultipleRecipients((oldRecipients) =>\n        // use this combination to remove duplicates\n        Array.from(new Set([...oldRecipients, tempRecipeint]))\n      );\n      setTempRecipient(\"\");\n    }\n  };\n  // when to remove a subscriber\n  const removeRecipient = (recipientAddress: any) => {\n    const filteredRecipients = multipleRecipients.filter(\n      (rec) => rec !== recipientAddress\n    );\n    setMultipleRecipients(filteredRecipients);\n  };\n\n  React.useEffect(() => {\n    const broadcastIds = [\"1\", \"4\"]; //id's of notifications which qualify as broadcast\n    setMultipleRecipients([]); //reset array when type changes/\n    if (broadcastIds.includes(nfType)) {\n      // This is broadcast, nfRecipient will be the same\n      setNFRecipient(account);\n    } else {\n      setNFRecipient(\"\");\n    }\n  }, [nfType]);\n\n  // validate the body being sent, return true if no errors\n  const bodyValidated = (notificationToast) => {\n    let validated = true;\n    // if we are sending for a subset and there\n    if (nfType === \"4\" && !multipleRecipients.length) {\n      toast.update(notificationToast, {\n        render:\n          \"Please enter at least two recipients in order to use subset notifications type\",\n        type: toast.TYPE.ERROR,\n        autoClose: 5000,\n      });\n      validated = false;\n    }\n    return validated;\n  };\n\n  const handleSendMessage = async (e) => {\n    // Check everything in order\n    e.preventDefault();\n\n    // Toastify\n    let notificationToast = toast.dark(\n      <LoaderToast msg=\"Preparing Notification\" color=\"#fff\" />,\n      {\n        position: \"bottom-right\",\n        autoClose: false,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      }\n    );\n\n    // do some validation\n    if (!bodyValidated(notificationToast)) return;\n\n    // Set to processing\n    setNFProcessing(1);\n\n    // Form signer and contract connection\n    const communicatorContract = epnsCommWriteProvider;\n    // define the epns comms contracts\n\n    // For payload basic\n    let nsub = nfSub;\n    let nmsg = nfMsg;\n    let secretEncrypted;\n\n    let asub = nfSub;\n    let amsg = nfMsg;\n    let acta = nfCTA;\n    let aimg = nfMedia;\n\n    // Decide type and storage\n    switch (nfType) {\n      // Broadcast Notification\n      case \"1\":\n        break;\n\n      // Targetted Notification\n      case \"3\":\n        break;\n\n      // Secret Notification\n      case \"2\":\n        // Create secret\n        let secret = CryptoHelper.makeid(14);\n\n        // Encrypt payload and change sub and nfMsg in notification\n        nsub = \"You have a secret message!\";\n        nmsg = \"Open the app to see your secret message!\";\n\n        // get public key from EPNSCoreHelper\n        let k = await EPNSCoreHelper.getPublicKey(\n          nfRecipient,\n          epnsCommWriteProvider\n        );\n        if (k == null) {\n          // No public key, can't encrypt\n          setNFInfo(\"Public Key Registration is required for encryption!\");\n          setNFProcessing(2);\n\n          toast.update(notificationToast, {\n            render: \"Unable to encrypt for this user, no public key registered\",\n            type: toast.TYPE.ERROR,\n            autoClose: 5000,\n          });\n\n          return;\n        }\n\n        let publickey = k.toString().substring(2);\n        //console.log(\"This is public Key: \" + publickey);\n\n        secretEncrypted = await CryptoHelper.encryptWithECIES(\n          secret,\n          publickey\n        );\n        asub = CryptoHelper.encryptWithAES(nfSub, secret);\n        amsg = CryptoHelper.encryptWithAES(nfMsg, secret);\n        acta = CryptoHelper.encryptWithAES(nfCTA, secret);\n        aimg = CryptoHelper.encryptWithAES(nfMedia, secret);\n        break;\n\n      // Targetted Notification\n      case \"4\":\n        break;\n\n      // Offchain Notification\n      case \"5\":\n        console.log(nsub, nmsg, nfType, asub, amsg, acta, aimg, \"case 5\");\n\n        break;\n      default:\n        break;\n    }\n\n    // Handle Storage\n    let storagePointer = \"\";\n\n    // IPFS PAYLOAD --> 1, 2, 3\n    if (nfType === \"1\" || nfType === \"2\" || nfType === \"3\" || nfType === \"4\") {\n      // Checks for optional fields\n      if (nfSubEnabled && isEmpty(nfSub)) {\n        setNFInfo(\"Enter Subject or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n\n        return;\n      }\n\n      if (nfMediaEnabled && isEmpty(nfMedia)) {\n        setNFInfo(\"Enter Media URL or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n        return;\n      }\n\n      if (nfCTAEnabled && isEmpty(nfCTA)) {\n        setNFInfo(\"Enter Call to Action Link or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n        return;\n      }\n\n      if (isEmpty(nfMsg)) {\n        setNFInfo(\"Message cannot be empty\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n        return;\n      }\n\n      const jsonPayload = {\n        notification: {\n          title: nsub,\n          body: nmsg,\n        },\n        data: {\n          type: nfType,\n          secret: secretEncrypted,\n          asub: asub,\n          amsg: amsg,\n          acta: acta,\n          aimg: aimg,\n        },\n      };\n\n      // if we are sending a subset type, then include recipients\n      if (nfType === \"4\") {\n        jsonPayload[\"recipients\"] = [...multipleRecipients];\n      }\n\n      const input = JSON.stringify(jsonPayload);\n\n      console.log(\"Uploding to IPFS...\");\n      toast.update(notificationToast, {\n        render: \"Preparing Payload for upload\",\n      });\n\n      const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\n\n      try {\n        storagePointer = await ipfs.add(input);\n      } catch (e) {\n        setNFProcessing(2);\n        setNFInfo(\"IPFS Upload Error\");\n      }\n\n      console.log(\"IPFS cid: %o\", storagePointer);\n    }\n    if (nfType === \"1\" || nfType === \"2\" || nfType === \"3\" || nfType === \"4\") {\n      // Prepare Identity and send notification\n      const identity = nfType + \"+\" + storagePointer;\n      const identityBytes = ethers.utils.toUtf8Bytes(identity);\n\n      const EPNS_DOMAIN = {\n        name: \"EPNS COMM V1\",\n        chainId: chainId,\n        verifyingContract: epnsCommReadProvider.address,\n      };\n\n      const type = {\n        Data: [\n          { name: \"acta\", type: \"string\" },\n          { name: \"aimg\", type: \"string\" },\n          { name: \"amsg\", type: \"string\" },\n          { name: \"asub\", type: \"string\" },\n          { name: \"type\", type: \"string\" },\n          { name: \"secret\", type: \"string\" },\n        ],\n      };\n\n      const payload = {\n        data: {\n          acta: acta,\n          aimg: aimg,\n          amsg: amsg,\n          asub: asub,\n          type: nfType,\n          secret: \"\",\n        },\n\n        notification: {\n          body: amsg,\n          title: asub,\n        },\n      };\n\n      const message = payload.data;\n      console.log(payload, \"payload\");\n      console.log(\"chainId\", chainId);\n      const signature = await library\n        .getSigner(account)\n        ._signTypedData(EPNS_DOMAIN, type, message);\n      console.log(\"case5 signature\", signature);\n      try {\n        postReq(\"/payloads/add_manual_payload\", {\n          signature,\n          op: \"write\",\n          chainId: chainId.toString(),\n          channel: account,\n          recipient: nfRecipient,\n          deployedContract: epnsCommReadProvider.address,\n          payload: payload,\n          type: nfType,\n        }).then(async (res) => {\n          toast.update(notificationToast, {\n            render: \"Notification Sent\",\n            type: toast.TYPE.INFO,\n            autoClose: 5000,\n          });\n\n          setNFProcessing(2);\n          setNFType(\"\");\n          setNFInfo(\"Offchain Notification Sent\");\n\n          toast.update(notificationToast, {\n            render: \"Offchain Notification Sent\",\n            type: toast.TYPE.SUCCESS,\n            autoClose: 5000,\n          });\n          console.log(res);\n        });\n      } catch (err) {\n        setNFInfo(\"Offchain Notification Failed, please try again\");\n\n        toast.update(notificationToast, {\n          render: \"Offchain Notification Failed: \" + err,\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n        setNFProcessing(0);\n        console.log(err);\n      }\n\n      // var anotherSendTxPromise;\n\n      // anotherSendTxPromise = communicatorContract.sendNotification(\n      //   channelAddress,\n      //   nfRecipient,\n      //   identityBytes\n      // );\n\n      // console.log(\"Sending Transaction... \");\n      // toast.update(notificationToast, {\n      //   render: \"Sending Notification...\",\n      // });\n\n      // anotherSendTxPromise\n      //   .then(async (tx) => {\n      //     console.log(tx);\n      //     console.log(\"Transaction Sent!\");\n\n      //     toast.update(notificationToast, {\n      //       render: \"Notification Sent\",\n      //       type: toast.TYPE.INFO,\n      //       autoClose: 5000,\n      //     });\n\n      //     await tx.wait(1);\n      //     console.log(\"Transaction Mined!\");\n\n      //     setNFProcessing(2);\n      //     setNFType(\"\");\n      //     setNFInfo(\"Notification Sent\");\n\n      //     toast.update(notificationToast, {\n      //       render: \"Transaction Mined / Notification Sent\",\n      //       type: toast.TYPE.SUCCESS,\n      //       autoClose: 5000,\n      //     });\n      //   })\n      //   .catch((err) => {\n      //     console.log(\"!!!Error handleSendMessage() --> %o\", err);\n      //     setNFInfo(\"Transaction Failed, please try again\");\n\n      //     toast.update(notificationToast, {\n      //       render: \"Transacion Failed: \" + err,\n      //       type: toast.TYPE.ERROR,\n      //       autoClose: 5000,\n      //     });\n      //     setNFProcessing(0);\n      //   });\n    }\n    if (nfType === \"5\") {\n      // const jsonPayload = {\n      //   notification: {\n      //     title: nsub,\n      //     body: nmsg,\n      //   },\n      //   data: {\n      //     type: nfType,\n      //     secret: secretEncrypted,\n      //     asub: asub,\n      //     amsg: amsg,\n      //     acta: acta,\n      //     aimg: aimg,\n      //   },\n      // };\n\n      const EPNS_DOMAIN = {\n        name: \"EPNS COMM V1\",\n        chainId: chainId,\n        verifyingContract: epnsCommReadProvider.address,\n      };\n\n      const type = {\n        Data: [\n          { name: \"acta\", type: \"string\" },\n          { name: \"aimg\", type: \"string\" },\n          { name: \"amsg\", type: \"string\" },\n          { name: \"asub\", type: \"string\" },\n          { name: \"type\", type: \"string\" },\n          { name: \"secret\", type: \"string\" },\n        ],\n      };\n\n      const payload = {\n        data: {\n          acta: acta,\n          aimg: aimg,\n          amsg: amsg,\n          asub: asub,\n          type: nfType,\n          secret: \"\",\n        },\n\n        notification: {\n          body: amsg,\n          title: asub,\n        },\n      };\n\n      const message = payload.data;\n      console.log(payload, \"payload\");\n      console.log(\"chainId\", chainId);\n      const signature = await library\n        .getSigner(account)\n        ._signTypedData(EPNS_DOMAIN, type, message);\n      console.log(\"case5 signature\", signature);\n      try {\n        postReq(\"/payloads/add_manual_payload\", {\n          signature,\n          op: \"write\",\n          chainId: chainId.toString(),\n          channel: account,\n          recipient: nfRecipient,\n          deployedContract: epnsCommReadProvider.address,\n          payload: payload,\n          type: \"3\",\n        }).then(async (res) => {\n          toast.update(notificationToast, {\n            render: \"Notification Sent\",\n            type: toast.TYPE.INFO,\n            autoClose: 5000,\n          });\n\n          setNFProcessing(2);\n          setNFType(\"\");\n          setNFInfo(\"Offchain Notification Sent\");\n\n          toast.update(notificationToast, {\n            render: \"Offchain Notification Sent\",\n            type: toast.TYPE.SUCCESS,\n            autoClose: 5000,\n          });\n          console.log(res);\n        });\n      } catch (err) {\n        setNFInfo(\"Offchain Notification Failed, please try again\");\n\n        toast.update(notificationToast, {\n          render: \"Offchain Notification Failed: \" + err,\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n        setNFProcessing(0);\n        console.log(err);\n      }\n    }\n  };\n\n  const isEmpty = (field: any) => {\n    if (field.trim().length == 0) {\n      return true;\n    }\n\n    return false;\n  };\n\n  // toast customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader type=\"Oval\" color={color} height={30} width={30} />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  );\n\n  return (\n    <>\n      <Section>\n        <Content padding=\"10px 20px 20px\">\n          <Item align=\"flex-start\">\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n              <Span weight=\"200\">Send </Span>\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">\n                Notification\n              </Span>\n            </H2>\n            {!isChannelDeactivated ? (\n              <H3>\n                EPNS supports three types of notifications (for now!).{\" \"}\n                <b>Groups</b>, <b>Secrets</b>, and <b>Targetted</b>\n                 {/* and{\" \"} <b>Subsets</b>. */}\n              </H3>\n            ) : (\n              <H3>This channel has been deactivated, please reactivate it!.</H3>\n            )}\n          </Item>\n        </Content>\n      </Section>\n\n      {!isChannelDeactivated && (\n        <Section>\n          <ModifiedContent>\n            <Item align=\"stretch\">\n              <FormSubmision\n                flex=\"1\"\n                direction=\"column\"\n                margin=\"0px\"\n                justify=\"center\"\n                size=\"1.1rem\"\n                onSubmit={handleSendMessage}\n              >\n                <Item margin=\"0px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                  {!cannotDisplayDelegatees && (\n                    <Item\n                      flex=\"5\"\n                      justify=\"flex-start\"\n                      align=\"stretch\"\n                      minWidth=\"280px\"\n                    >\n                      <DropdownStyledParentWhite>\n                        <DropdownHeader>\n                          SEND NOTIFICATION ON BEHALF OF\n                        </DropdownHeader>\n                        <DropdownStyledWhite\n                          options={delegateeOptions}\n                          onChange={(option: any) => {\n                            setChannelAddress(option.value);\n                          }}\n                          value={delegateeOptions.find(\n                            (d) => d.value == channelAddress\n                          )}\n                        />\n                      </DropdownStyledParentWhite>\n                    </Item>\n                  )}\n\n                  <Input\n                    display=\"none\"\n                    value={nfType}\n                    onChange={(e) => {\n                      setNFType(e.target.value);\n                    }}\n                  />\n\n                  <Item\n                    flex=\"5\"\n                    justify=\"flex-start\"\n                    align=\"stretch\"\n                    minWidth=\"280px\"\n                  >\n                    <DropdownStyledParent>\n                      <DropdownStyled\n                        options={NFTypes}\n                        onChange={(option) => {\n                          setNFType(option.value);\n                          console.log(option);\n                        }}\n                        value={nfType}\n                        placeholder=\"Select Type of Notification to Send\"\n                      />\n                    </DropdownStyledParent>\n                  </Item>\n                  <Input\n                    display=\"none\"\n                    value={nfType}\n                    onChange={(e) => {\n                      setNFType(e.target.value);\n                    }}\n                  />\n\n                  {nfType && (\n                    <ItemH\n                      margin=\"0px 15px 15px 15px\"\n                      bg=\"#f1f1f1\"\n                      flex=\"1\"\n                      self=\"stretch\"\n                      justify=\"space-between\"\n                    >\n                      <ItemH margin=\"15px 10px\" flex=\"inital\">\n                        <Span\n                          margin=\"0px 10px 0px 0px\"\n                          weight=\"400\"\n                          spacing=\"0.1em\"\n                          textTransform=\"uppercase\"\n                          size=\"0.8em\"\n                          bg=\"#e20880\"\n                          color=\"#fff\"\n                          padding=\"5px 15px\"\n                          radius=\"30px\"\n                        >\n                          Enable Subject\n                        </Span>\n                        <Switch\n                          color=\"primary\"\n                          size=\"small\"\n                          checked={nfSubEnabled}\n                          onChange={() => setNFSubEnabled(!nfSubEnabled)}\n                        />\n                      </ItemH>\n\n                      <ItemH margin=\"15px 10px\" flex=\"inital\">\n                        <Span\n                          margin=\"0px 10px 0px 0px\"\n                          weight=\"400\"\n                          spacing=\"0.1em\"\n                          textTransform=\"uppercase\"\n                          size=\"0.8em\"\n                          bg=\"#e20880\"\n                          color=\"#fff\"\n                          padding=\"5px 15px\"\n                          radius=\"30px\"\n                        >\n                          Enable Media\n                        </Span>\n                        <Switch\n                          color=\"primary\"\n                          size=\"small\"\n                          checked={nfMediaEnabled}\n                          onChange={() => setNFMediaEnabled(!nfMediaEnabled)}\n                        />\n                      </ItemH>\n\n                      <ItemH margin=\"15px 10px\" flex=\"inital\">\n                        <Span\n                          margin=\"0px 10px 0px 0px\"\n                          weight=\"400\"\n                          spacing=\"0.1em\"\n                          textTransform=\"uppercase\"\n                          size=\"0.8em\"\n                          bg=\"#e20880\"\n                          color=\"#fff\"\n                          padding=\"5px 15px\"\n                          radius=\"30px\"\n                        >\n                          Enable CTA\n                        </Span>\n                        <Switch\n                          color=\"primary\"\n                          size=\"small\"\n                          checked={nfCTAEnabled}\n                          onChange={() => setNFCTAEnabled(!nfCTAEnabled)}\n                        />\n                      </ItemH>\n                    </ItemH>\n                  )}\n                </Item>\n\n                {(nfType === \"2\" || nfType === \"3\" || nfType === \"5\") && (\n                  <Item\n                    margin=\"15px 20px 15px 20px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"stretch\"\n                  >\n                    <Input\n                      required\n                      placeholder=\"Enter recipient wallet address\"\n                      radius=\"4px\"\n                      padding=\"12px\"\n                      border=\"1px solid #674c9f\"\n                      bg=\"#fff\"\n                      value={nfRecipient}\n                      onChange={(e) => {\n                        setNFRecipient(e.target.value);\n                      }}\n                    />\n                    {nfRecipient.trim().length == 0 && (\n                      <Span\n                        padding=\"4px 10px\"\n                        right=\"0px\"\n                        top=\"0px\"\n                        pos=\"absolute\"\n                        color=\"#fff\"\n                        bg=\"#000\"\n                        size=\"0.7rem\"\n                        z=\"1\"\n                      >\n                        Recipient Wallet\n                      </Span>\n                    )}\n                  </Item>\n                )}\n\n                {nfType === \"4\" && (\n                  <>\n                    <MultiRecipientsContainer>\n                      {multipleRecipients.map((oneRecipient) => (\n                        <span key={oneRecipient}>\n                          {oneRecipient}\n                          <i onClick={() => removeRecipient(oneRecipient)}>\n                            <CloseIcon />\n                          </i>\n                        </span>\n                      ))}\n                    </MultiRecipientsContainer>\n                    <Item\n                      margin=\"15px 20px 15px 20px\"\n                      flex=\"1\"\n                      self=\"stretch\"\n                      align=\"stretch\"\n                    >\n                      <Input\n                        required={multipleRecipients.length === 0}\n                        placeholder=\"Enter recipients wallet addresses seperated by a comma or by pressing the enter key\"\n                        radius=\"4px\"\n                        padding=\"12px\"\n                        border=\"1px solid #674c9f\"\n                        bg=\"#fff\"\n                        value={tempRecipeint}\n                        onKeyPress={handleSubsetInputChange}\n                        onChange={(e) => {\n                          const text = e.target.value;\n                          if (!LIMITER_KEYS.includes(text)) {\n                            setTempRecipient(e.target.value);\n                          }\n                        }}\n                      />\n                      {nfRecipient.trim().length == 0 && (\n                        <Span\n                          padding=\"4px 10px\"\n                          right=\"0px\"\n                          top=\"0px\"\n                          pos=\"absolute\"\n                          color=\"#fff\"\n                          bg=\"#000\"\n                          size=\"0.7rem\"\n                          z=\"1\"\n                        >\n                          Recipient Wallet\n                        </Span>\n                      )}\n                    </Item>\n                  </>\n                )}\n\n                {nfType && nfSubEnabled && (\n                  <Item\n                    margin=\"15px 20px 15px 20px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"stretch\"\n                  >\n                    <Input\n                      required\n                      placeholder=\"Subject of Notification\"\n                      padding=\"12px\"\n                      borderBottom=\"1px solid #000\"\n                      weight=\"400\"\n                      size=\"1.2em\"\n                      bg=\"#fff\"\n                      value={nfSub}\n                      onChange={(e) => {\n                        setNFSub(e.target.value);\n                      }}\n                    />\n                    {nfSub.trim().length == 0 && (\n                      <Span\n                        padding=\"4px 10px\"\n                        right=\"0px\"\n                        top=\"0px\"\n                        pos=\"absolute\"\n                        color=\"#fff\"\n                        bg=\"#000\"\n                        size=\"0.7rem\"\n                        z=\"1\"\n                      >\n                        Subject\n                      </Span>\n                    )}\n                  </Item>\n                )}\n\n                {nfType && (\n                  <Item\n                    margin=\"15px 20px 15px 20px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"stretch\"\n                  >\n                    <TextField\n                      required\n                      placeholder=\"Notification Message\"\n                      rows=\"6\"\n                      radius=\"4px\"\n                      padding=\"12px\"\n                      weight=\"400\"\n                      border=\"1px solid #000\"\n                      bg=\"#fff\"\n                      value={nfMsg}\n                      onChange={(e) => {\n                        setNFMsg(e.target.value);\n                      }}\n                      autocomplete=\"off\"\n                    />\n                  </Item>\n                )}\n\n                {nfType && nfMediaEnabled && (\n                  <ItemH\n                    padding=\"15px 20px 15px 20px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"center\"\n                  >\n                    <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                      <BsFillImageFill size={24} color=\"#000\" />\n                    </Item>\n                    <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                      <Input\n                        required\n                        placeholder=\"Media URL for Notification\"\n                        padding=\"12px\"\n                        border=\"1px solid #000\"\n                        radius=\"4px\"\n                        weight=\"400\"\n                        bg=\"#f1f1f1\"\n                        value={nfMedia}\n                        onChange={(e) => {\n                          setNFMedia(e.target.value);\n                        }}\n                      />\n                      {nfMedia.trim().length == 0 && (\n                        <Span\n                          padding=\"4px 10px\"\n                          right=\"0px\"\n                          top=\"0px\"\n                          pos=\"absolute\"\n                          color=\"#fff\"\n                          bg=\"#000\"\n                          size=\"0.7rem\"\n                          z=\"1\"\n                        >\n                          Media URL\n                        </Span>\n                      )}\n                    </Item>\n                  </ItemH>\n                )}\n\n                {nfType && nfCTAEnabled && (\n                  <ItemH\n                    margin=\"15px 20px 15px 20px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"center\"\n                  >\n                    <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                      <FiLink size={24} color=\"#000\" />\n                    </Item>\n                    <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                      <Input\n                        required\n                        placeholder=\"Call to Action Link\"\n                        padding=\"12px\"\n                        border=\"1px solid #000\"\n                        radius=\"4px\"\n                        weight=\"400\"\n                        bg=\"#f1f1f1\"\n                        value={nfCTA}\n                        onChange={(e) => {\n                          setNFCTA(e.target.value);\n                        }}\n                      />\n                      {nfCTA.trim().length == 0 && (\n                        <Span\n                          padding=\"4px 10px\"\n                          right=\"0px\"\n                          top=\"0px\"\n                          pos=\"absolute\"\n                          color=\"#fff\"\n                          bg=\"#000\"\n                          size=\"0.7rem\"\n                          z=\"1\"\n                        >\n                          Call to Action URL\n                        </Span>\n                      )}\n                    </Item>\n                  </ItemH>\n                )}\n\n                {nfInfo && nfProcessing != 1 && (\n                  <Item\n                    color=\"#fff\"\n                    bg=\"#e1087f\"\n                    padding=\"10px 15px\"\n                    margin=\"15px 0px\"\n                  >\n                    <Span\n                      color=\"#fff\"\n                      textTransform=\"uppercase\"\n                      spacing=\"0.1em\"\n                      weight=\"400\"\n                      size=\"1em\"\n                    >\n                      {nfInfo}\n                    </Span>\n                  </Item>\n                )}\n\n                {nfType && (\n                  <Item\n                    margin=\"15px 0px 0px 0px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"stretch\"\n                  >\n                    <Button\n                      bg=\"#e20880\"\n                      color=\"#fff\"\n                      flex=\"1\"\n                      radius=\"0px\"\n                      padding=\"20px 10px\"\n                      disabled={nfProcessing == 1 ? true : false}\n                    >\n                      {nfProcessing == 1 && (\n                        <Loader\n                          type=\"Oval\"\n                          color=\"#fff\"\n                          height={24}\n                          width={24}\n                        />\n                      )}\n                      {nfProcessing != 1 && (\n                        <Input\n                          cursor=\"hand\"\n                          textTransform=\"uppercase\"\n                          color=\"#fff\"\n                          weight=\"400\"\n                          size=\"0.8em\"\n                          spacing=\"0.2em\"\n                          type=\"submit\"\n                          value=\"Send Notification\"\n                        />\n                      )}\n                    </Button>\n                  </Item>\n                )}\n              </FormSubmision>\n            </Item>\n          </ModifiedContent>\n        </Section>\n      )}\n    </>\n  );\n}\n\n// css styles\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`;\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`;\n\nconst DropdownStyledParent = styled.div`\n  .is-open {\n    margin-bottom: 130px;\n  }\n`;\n\nconst MultiRecipientsContainer = styled.div`\n  width: 100%;\n  padding: 0px 20px;\n  padding-top: 10px;\n  box-sizing: border-box;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 7px 15px;\n\n  span {\n    color: white;\n    background: #e20880;\n    padding: 6px 10px;\n    border-radius: 5px;\n\n    i {\n      cursor: pointer;\n      margin-left: 25px;\n    }\n  }\n`;\n\nconst ModifiedContent = styled(Content)`\n  padding-top: 20px;\n  font-weight: 400;\n`;\n\nconst DropdownHeader = styled.div`\n  color: black;\n  padding: 10px;\n  letter-spacing: 3px;\n  font-size: 14px;\n`;\n\nconst DropdownStyled = styled(Dropdown)`\n  .Dropdown-control {\n    background-color: #000;\n    color: #fff;\n    padding: 12px 52px 12px 10px;\n    border: 1px solid #000;\n    border-radius: 4px;\n  }\n\n  .Dropdown-placeholder {\n    text-transform: uppercase;\n    font-weight: 400;\n    letter-spacing: 0.2em;\n    font-size: 0.8em;\n  }\n\n  .Dropdown-arrow {\n    top: 18px;\n    bottom: 0;\n    border-color: #fff transparent transparent;\n  }\n\n  .Dropdown-menu {\n    border: 1px solid #000;\n    box-shadow: none;\n    background-color: #000;\n    border-radius: 0px;\n    margin-top: -2px;\n    border-bottom-right-radius: 4px;\n    border-bottom-left-radius: 4px;\n  }\n\n  .Dropdown-option {\n    background-color: rgb(35 35 35);\n    color: #ffffff99;\n\n    text-transform: uppercase;\n    letter-spacing: 0.2em;\n    font-size: 0.7em;\n    padding: 15px 20px;\n  }\n\n  .Dropdown-option:hover {\n    background-color: #000000;\n    color: #fff;\n  }\n`;\n\nconst DropdownStyledWhite = styled(DropdownStyled)`\n  .Dropdown-control {\n    color: #000;\n    background: #fafafa;\n    border: 0px;\n    padding: 15px 52px 15px 10px;\n  }\n  .Dropdown-arrow {\n    border-color: #000 transparent transparent;\n    top: 30px;\n  }\n  .Dropdown-menu {\n    border: 0px;\n    background-color: #fafafa;\n  }\n  .Dropdown-option {\n    background-color: #fafafa;\n    color: black;\n    transition: 300ms;\n  }\n  .Dropdown-option:hover {\n    background-color: #e7e6e6;\n  }\n  .Dropdown-option.is-selected {\n    background-color: #f1efef;\n  }\n`;\n\nconst DropdownStyledParentWhite = styled(DropdownStyledParent)`\n  margin-bottom: 20px;\n  border: 1px solid rgba(169, 169, 169, 0.5);\n`;\n\nconst CustomDropdownItem = styled.div`\n  display: flex;\n  align-items: center;\n  img {\n    height: 30px;\n    width: 30px;\n    border-radius: 50%;\n    margin-right: 10px;\n  }\n  div {\n    color: black;\n    font-size: 16px;\n    letter-spacing: 2px;\n  }\n`;\n\n// Export Default\nexport default SendNotifications;\n","import React, {useRef, useState} from 'react';\nimport { useClick, useClickAway } from 'react-use';\nimport styled from 'styled-components';\nimport { useWeb3React } from '@web3-react/core';\nimport { addresses, abis } from \"@project/contracts\";\nimport Loader from 'react-loader-spinner';\n\nimport {Item, H2, H3, Span, Button, Input} from 'components/SharedStyling';\n\nconst ethers = require('ethers');\n\n\nexport default function AddDelegateModal({\n    onClose,onSuccess, addDelegate\n}) {\n\n    const modalRef = useRef(null);\n    const [mainAdress, setMainAddress] = useState('');\n    const [loading, setLoading] = useState('');\n\n    // Form signer and contract connection\n    useClickAway(modalRef, onClose);\n\n    const addDelegateFunction = () => {\n        setLoading('loading')\n        addDelegate(mainAdress)\n        .then(async (tx) => {\n            console.log(tx);\n            setLoading(\"Transaction Sent!\");\n\n            setTimeout(() => {\n                onSuccess();\n                onClose();\n            }, 2000);\n\n        })\n        .catch((err) => {\n            console.log({\n                err\n            })\n            setLoading('There was an error');\n            setTimeout(() => {\n                setLoading('')\n            }, 2000)\n        })\n    };\n    \n\n    return (\n        <Overlay>\n            <AliasModal ref={modalRef}>\n                <Item align=\"flex-start\">\n                    <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n                    <Span weight=\"200\">Add </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Delegate</Span>\n                    </H2>\n                    <H3>Add an account who can send notifications on your behalf.</H3>\n                </Item>\n                <Item align=\"flex-start\">\n                    <CustomInput\n                        required\n                        placeholder=\"Enter the ethereum address\"\n                        radius=\"4px\"\n                        padding=\"12px\"\n                        border=\"1px solid #674c9f\"\n                        bg=\"#fff\"\n                        value={mainAdress}\n                        onChange={(e) => {setMainAddress(e.target.value)}}\n                    />\n                </Item>\n                <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                    <Button\n                        bg='#e20880'\n                        color='#fff'\n                        flex=\"1\"\n                        radius=\"0px\"\n                        padding=\"20px 10px\"\n                        disabled={mainAdress.length !== 42}\n                        onClick={addDelegateFunction}\n                    >\n                        { loading && <Loader\n                            type=\"Oval\"\n                            color=\"#FFF\"\n                            height={16}\n                            width={16}\n                            />\n                        }\n                        <StyledInput\n                            cursor=\"hand\"\n                            textTransform=\"uppercase\"\n                            color=\"#fff\" weight=\"400\"\n                            size=\"0.8em\" spacing=\"0.2em\"\n                            value={loading ? loading : \"Add Delegate\"}\n                        />\n                    </Button>\n                </Item>\n            </AliasModal>\n        </Overlay>\n    )\n}\n\nconst StyledInput = styled(Input)`\n    width: 100%;\n    text-align: center;\n    caret-color: transparent;\n`\n\nconst CustomInput = styled(Input)`\n    box-sizing: border-box;\n    width: 100%;\n    margin: 20px 0px;\n`;\n\nconst Overlay = styled.div`\n    top: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0,0,0,0.85);\n    height: 100%;\n    width: 100%;\n    z-index: 1000;\n    position: fixed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    overflow-y: scroll;\n`;\n\nconst AliasModal = styled.div`\n    padding: 20px 30px;\n    background: white;\n`;","import React, {useRef, useState} from 'react';\nimport { useClickAway } from 'react-use';\nimport styled from 'styled-components';\nimport Loader from 'react-loader-spinner';\n\nimport {Item, H2, H3, Span, Button, Input} from 'components/SharedStyling';\n\n\n\nexport default function RemoveDelegateModal({\n    onClose,onSuccess, removeDelegate\n}) {\n\n    const modalRef = useRef(null);\n    const [mainAdress, setMainAddress] = useState('');\n    const [loading, setLoading] = useState('');\n\n    // Form signer and contract connection\n    useClickAway(modalRef, onClose);\n\n    const addDelegateFunction = () => {\n        setLoading('loading')\n        removeDelegate(mainAdress)\n        .then(async (tx) => {\n            console.log(tx);\n            setLoading(\"Transaction Sent!\");\n\n            setTimeout(() => {\n                onSuccess();\n                onClose();\n            }, 2000);\n\n        })\n        .catch((err) => {\n            console.log({\n                err\n            })\n            setLoading('There was an error');\n            setTimeout(() => {\n                setLoading('')\n            }, 2000)\n        })\n    };\n    \n\n    return (\n        <Overlay>\n            <AliasModal ref={modalRef}>\n                <Item align=\"flex-start\">\n                    <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n                    <Span weight=\"200\">Remove </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Delegate</Span>\n                    </H2>\n                    <H3>Remove an account who can send notifications on your behalf.</H3>\n                </Item>\n                <Item align=\"flex-start\">\n                    <CustomInput\n                        required\n                        placeholder=\"Enter the ethereum address\"\n                        radius=\"4px\"\n                        padding=\"12px\"\n                        border=\"1px solid #674c9f\"\n                        bg=\"#fff\"\n                        value={mainAdress}\n                        onChange={(e) => {setMainAddress(e.target.value)}}\n                    />\n                </Item>\n                <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                    <Button\n                        bg='#e20880'\n                        color='#fff'\n                        flex=\"1\"\n                        radius=\"0px\"\n                        padding=\"20px 10px\"\n                        disabled={mainAdress.length !== 42}\n                        onClick={addDelegateFunction}\n                    >\n                        { loading && <Loader\n                            type=\"Oval\"\n                            color=\"#FFF\"\n                            height={16}\n                            width={16}\n                            />\n                        }\n                        <StyledInput\n                            cursor=\"hand\"\n                            textTransform=\"uppercase\"\n                            color=\"#fff\" weight=\"400\"\n                            size=\"0.8em\" spacing=\"0.2em\"\n                            value={loading ? loading : \"Remove Delegate\"}\n                        />\n                    </Button>\n                </Item>\n            </AliasModal>\n        </Overlay>\n    )\n}\n\nconst StyledInput = styled(Input)`\n    width: 100%;\n    text-align: center;\n    caret-color: transparent;\n`\n\nconst CustomInput = styled(Input)`\n    box-sizing: border-box;\n    width: 100%;\n    margin: 20px 0px;\n`;\n\nconst Overlay = styled.div`\n    top: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0,0,0,0.85);\n    height: 100%;\n    width: 100%;\n    z-index: 1000;\n    position: fixed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    overflow-y: scroll;\n`;\n\nconst AliasModal = styled.div`\n    padding: 20px 30px;\n    background: white;\n`;","import React, { useRef, useState } from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport styled from \"styled-components\";\nimport Loader from \"react-loader-spinner\";\nimport { useClickAway } from \"react-use\";\nimport {\n  Section,\n  Content,\n  Item,\n  H3,\n  Span,\n  Button,\n} from \"components/SharedStyling\";\n\nconst MIN_STAKE_FEES = 50;\n\nexport default function ActivateChannelModal({\n  activateChannel,\n  loading,\n  setChannelStakeFees,\n  channelStakeFees,\n  onClose,\n}) {\n  const popupRef = React.useRef(null);\n  useClickAway(popupRef, onClose); //close the popoup when we click away\n  return (\n    <PopupOverlay>\n      <PopupSlider ref={popupRef}>\n        <Section>\n          <Content padding=\"50px 0px 0px 0px\">\n            <Item align=\"flex-start\" margin=\"0px 20px\">\n              <H3 color=\"#e20880\">Set your staking fees in DAI</H3>\n            </Item>\n\n            <Item\n              margin=\"-10px 20px 20px 20px\"\n              padding=\"20px 20px 10px 20px\"\n              bg=\"#f1f1f1\"\n            >\n              <Slider\n                defaultValue={MIN_STAKE_FEES}\n                onChangeCommitted={(_, value) =>\n                  setChannelStakeFees(Number(value))\n                }\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                step={MIN_STAKE_FEES}\n                marks\n                min={MIN_STAKE_FEES}\n                max={25000}\n              />\n              <Span\n                weight=\"400\"\n                size=\"1.0em\"\n                textTransform=\"uppercase\"\n                spacing=\"0.2em\"\n              >\n                Amount Staked: {channelStakeFees} DAI\n              </Span>\n            </Item>\n\n            <Item self=\"stretch\" align=\"stretch\" margin=\"20px 0px 0px 0px\">\n              <Button\n                bg=\"#e20880\"\n                color=\"#fff\"\n                flex=\"1\"\n                radius=\"0px\"\n                padding=\"20px 10px\"\n                onClick={activateChannel}\n              >\n                {loading ? (\n                  <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n                ) : (\n                  <Span\n                    color=\"#fff\"\n                    weight=\"400\"\n                    textTransform=\"uppercase\"\n                    spacing=\"0.1em\"\n                  >\n                    Reactivate Channel\n                  </Span>\n                )}\n              </Button>\n            </Item>\n          </Content>\n        </Section>\n      </PopupSlider>\n    </PopupOverlay>\n  );\n}\n\nconst PopupOverlay = styled.div`\n  background: rgba(0, 0, 0, 0.5);\n  height: 100vh;\n  width: 100vw;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst PopupSlider = styled.div`\n  height: 200px;\n  width: 70vw;\n  background: white;\n`;\n","/**\n * This file helps us to maintain the state of the logged in user user(if they have an account)\n * as well as the privilidges the logged in user has\n */\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    channelDetails: null,\n    canVerify: false,\n    delegatees: []\n};\n\nexport const contractSlice = createSlice({\n    name: \"admin\",\n    initialState,\n    reducers: {\n        setUserChannelDetails: (state, action) => {\n            state.channelDetails = action.payload;\n        },\n        setCanVerify: (state, action) => {\n            state.canVerify = action.payload;\n        },\n        setDelegatees: (state, action) => {\n            state.delegatees = action.payload;\n        }\n    }\n});\n\nexport const {\n    setUserChannelDetails,\n    setCanVerify,\n    setDelegatees\n} = contractSlice.actions;\n\nexport default contractSlice.reducer;","import React from \"react\";\nimport { Section, Content, Item } from \"components/SharedStyling\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled, { css } from \"styled-components\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { toast as toaster } from \"react-toastify\";\nimport { addresses, abis } from \"@project/contracts\";\nimport { postReq } from \"api\";\n\nimport { ALLOWED_CORE_NETWORK } from \"pages/Home\";\nimport AddDelegateModal from \"./AddDelegateModal\";\nimport RemoveDelegateModal from \"./RemoveDelegateModal\";\nimport ActivateChannelModal from \"./ActivateChannelModal\";\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\nimport { setUserChannelDetails } from \"redux/slices/adminSlice\";\n\nimport \"react-dropdown/style.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nimport Loader from \"react-loader-spinner\";\nconst ethers = require(\"ethers\");\n\nconst MIN_STAKE_FEES = 50;\n\n// Create Header\nfunction ChannelSettings() {\n  const dispatch = useDispatch();\n  const { account, library, chainId } = useWeb3React();\n  const { epnsWriteProvider, epnsCommWriteProvider } = useSelector(\n    (state: any) => state.contracts\n  );\n  const { channelDetails } = useSelector((state: any) => state.admin);\n  const {\n    CHANNNEL_DEACTIVATED_STATE,\n    CHANNEL_BLOCKED_STATE,\n    CHANNEL_ACTIVE_STATE,\n  } = useSelector((state: any) => state.channels);\n\n  const { channelState } = channelDetails;\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\n\n  const [loading, setLoading] = React.useState(false);\n  const [\n    showActivateChannelPopup,\n    setShowActivateChannelPopup,\n  ] = React.useState(false);\n  const [channelStakeFees, setChannelStakeFees] = React.useState(\n    MIN_STAKE_FEES\n  );\n  const [poolContrib, setPoolContrib] = React.useState(0);\n  const [addDelegateLoading, setAddDelegateLoading] = React.useState(false);\n  const [addModalOpen, setAddModalOpen] = React.useState(false);\n  const [removeDelegateLoading, setRemoveDelegateLoading] = React.useState(\n    false\n  );\n  const [removeModalOpen, setRemoveModalOpen] = React.useState(false);\n\n  // toaster customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader type=\"Oval\" color={color} height={30} width={30} />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  );\n\n  // Toastify\n  let notificationToast = () =>\n    toaster.dark(<LoaderToast msg=\"Preparing Notification\" color=\"#fff\" />, {\n      position: \"bottom-right\",\n      autoClose: false,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n  const isChannelDeactivated = channelState === CHANNNEL_DEACTIVATED_STATE;\n  const isChannelBlocked = channelState === CHANNEL_BLOCKED_STATE;\n  const channelInactive = isChannelBlocked || isChannelDeactivated;\n\n  React.useEffect(() => {\n    // To set channel info from a channel details\n    // setChannelState(channelDetails.channelState);\n    setPoolContrib(\n      +EPNSCoreHelper.formatBigNumberToMetric(\n        channelDetails.poolContribution,\n        true\n      )\n    );\n  }, [account]);\n\n  const toggleChannelActivationState = () => {\n    if (isChannelBlocked) return;\n    if (isChannelDeactivated) {\n      setShowActivateChannelPopup(true);\n    } else {\n      deactivateChannel();\n    }\n  };\n\n  /**\n   * Function to activate a channel that has been deactivated\n   */\n  const activateChannel = async () => {\n    // First Approve DAI\n    setLoading(true);\n    var signer = library.getSigner(account);\n    let daiContract = new ethers.Contract(addresses.dai, abis.erc20, signer);\n    const fees = ethers.utils.parseUnits(channelStakeFees.toString(), 18);\n    var sendTransactionPromise = daiContract.approve(addresses.epnscore, fees);\n    const tx = await sendTransactionPromise;\n\n    console.log(tx);\n    console.log(\"waiting for tx to finish\");\n\n    await library.waitForTransaction(tx.hash);\n    await epnsWriteProvider\n      .reactivateChannel(fees)\n      .then(async (tx: any) => {\n        console.log(tx);\n        console.log(\"Transaction Sent!\");\n\n        toaster.update(notificationToast(), {\n          render: \"Reactivating Channel\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n\n        await tx.wait(1);\n        toaster.update(notificationToast(), {\n          render: \"Channel Reactivated\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n        dispatch(\n          setUserChannelDetails({\n            ...channelDetails,\n            channelState: CHANNEL_ACTIVE_STATE,\n          })\n        );\n      })\n      .catch((err: any) => {\n        console.log(\"!!!Error reactivateChannel() --> %o\", err);\n        toaster.update(notificationToast(), {\n          render: \"Transacion Failed: \" + err.error?.message || err.message,\n          type: toaster.TYPE.ERROR,\n          autoClose: 5000,\n        });\n      })\n      .finally(() => {\n        setLoading(false);\n        setShowActivateChannelPopup(false);\n      });\n  };\n\n  /**\n   * Function to deactivate a channel that has been deactivated\n   */\n  const deactivateChannel = async () => {\n    setLoading(true);\n    if (!poolContrib) return;\n\n    const amountToBeConverted = parseInt(\"\" + poolContrib) - 10;\n    console.log(\"Amount To be converted==>\", amountToBeConverted);\n\n    const { data: response } = await postReq(\"/channels/get_dai_to_push\", {\n      value: amountToBeConverted,\n    });\n\n    const pushValue = response.response.data.quote.PUSH.price;\n    const amountsOut = pushValue * Math.pow(10, 18);\n\n    await epnsWriteProvider\n      // .deactivateChannel(amountsOut.toString().replace(/0+$/, \"\")) //use this to remove trailing zeros 1232323200000000 -> 12323232\n      .deactivateChannel(Math.floor(pushValue)) \n      .then(async (tx: any) => {\n        console.log(tx);\n        console.log(\"Transaction Sent!\");\n\n        toaster.update(notificationToast(), {\n          render: \"Transaction sending\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n\n        await tx.wait(1);\n        console.log(\"Transaction Mined!\");\n        dispatch(\n          setUserChannelDetails({\n            ...channelDetails,\n            channelState: CHANNNEL_DEACTIVATED_STATE,\n          })\n        );\n      })\n      .catch((err: any) => {\n        console.log(\"!!!Error deactivateChannel() --> %o\", err);\n        console.log({\n          err,\n        });\n        toaster.update(notificationToast(), {\n          render: \"Transacion Failed: \" + err.error?.message || err,\n          type: toaster.TYPE.ERROR,\n          autoClose: 5000,\n        });\n      })\n      .finally(() => {\n        // post op\n        setLoading(false);\n      });\n  };\n\n  const addDelegate = async (walletAddress: string) => {\n    setAddDelegateLoading(true);\n    return epnsCommWriteProvider.addDelegate(walletAddress).finally(() => {\n      setAddDelegateLoading(false);\n    });\n  };\n\n  const removeDelegate = (walletAddress: string) => {\n    setRemoveDelegateLoading(true);\n    return epnsCommWriteProvider.removeDelegate(walletAddress).finally(() => {\n      setRemoveDelegateLoading(false);\n    });\n  };\n\n  if (!onCoreNetwork) {\n    //temporarily deactivate the deactivate button if not on core network\n    return <></>;\n  }\n\n  return (\n    <div>\n      <DropdownWrapper>\n        <DeactivateButton\n          isChannelDeactivated={isChannelDeactivated}\n          onClick={toggleChannelActivationState}\n        >\n          <ActionTitle>\n            {loading ? (\n              \"Loading ...\"\n            ) : isChannelBlocked ? (\n              \"Channel Blocked\"\n            ) : isChannelDeactivated ? (\n              \"Activate Channel\"\n            ) : (\n              \"Deactivate Channel\"\n            )}\n          </ActionTitle>\n        </DeactivateButton>\n        <ActiveChannelWrapper>\n          <ChannelActionButton\n            disabled={channelInactive}\n            onClick={() => !channelInactive && setAddModalOpen(true)}\n          >\n            <ActionTitle>\n              {addDelegateLoading ? (\n                <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n              ) : (\n                \"Add Delegate\"\n              )}\n            </ActionTitle>\n          </ChannelActionButton>\n\n          <ChannelActionButton\n            disabled={channelInactive}\n            onClick={() => !channelInactive && setRemoveModalOpen(true)}\n          >\n            <ActionTitle>\n              {removeDelegateLoading ? (\n                <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n              ) : (\n                \"Remove Delegate\"\n              )}\n            </ActionTitle>\n          </ChannelActionButton>\n        </ActiveChannelWrapper>\n      </DropdownWrapper>\n      {/* modal to display the activate channel popup */}\n      {showActivateChannelPopup && (\n        <ActivateChannelModal\n          onClose={() => {\n            if (showActivateChannelPopup) {\n              setShowActivateChannelPopup(false);\n            }\n          }}\n          activateChannel={activateChannel}\n          loading={loading}\n          setChannelStakeFees={setChannelStakeFees}\n          channelStakeFees={channelStakeFees}\n        />\n      )}\n      {/* modal to add a delegate */}\n      {addModalOpen && (\n        <AddDelegateModal\n          onClose={() => setAddModalOpen(false)}\n          onSuccess={() => {\n            toaster.update(notificationToast(), {\n              render: \"Delegate Added\",\n              type: toaster.TYPE.INFO,\n              autoClose: 5000,\n            });\n          }}\n          addDelegate={addDelegate}\n        />\n      )}\n      {/* modal to remove a delegate */}\n      {removeModalOpen && (\n        <RemoveDelegateModal\n          onClose={() => {\n            setRemoveModalOpen(false);\n          }}\n          onSuccess={() => {\n            toaster.update(notificationToast(), {\n              render: \"Delegate Removed\",\n              type: toaster.TYPE.INFO,\n              autoClose: 5000,\n            });\n          }}\n          removeDelegate={removeDelegate}\n        />\n      )}\n    </div>\n  );\n}\n\n// css styles\nconst DropdownWrapper = styled.div`\n  position: absolute;\n  right: 20px;\n  display: flex;\n  flex-direction: column-reverse;\n  width: 220px;\n  height: 230px;\n  padding: 20px;\n  padding-top: 30px;\n\n  background: #ffffff;\n  border: 1px solid #a9a9a9;\n  box-sizing: border-box;\n  box-shadow: 0px 4px 30px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  justify-content: space-between;\n`;\n\nconst ActiveChannelWrapper = styled.div`\n  flex-direction: column;\n  gap: 20px;\n  display: ${(props) => (props.inactive ? \"none\" : \"flex\")};\n`;\n\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`;\n\nconst ActionTitle = styled.span`\n  ${(props: any) =>\n    props.hideit &&\n    css`\n      visibility: hidden;\n    `};\n`;\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`;\n\nconst DeactivateButton = styled.div`\n  text-decoration: underline;\n  color: ${(props) => (props.isChannelDeactivated ? \"#674C9F\" : \"#e20880\")};\n  text-align: center;\n  font-size: 16px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst ChannelActionButton = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  background-color: #674c9f;\n  &:hover {\n    opacity: ${(props) => (props.disabled ? 0.5 : 0.9)};\n    cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\n    pointer: hand;\n  }\n  &:active {\n    opacity: ${(props) => (props.disabled ? 0.5 : 0.75)};\n    cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\n    pointer: hand;\n  }\n  opacity: ${(props) => (props.disabled ? 0.5 : 1)};\n`;\n\nconst Settings = styled.img`\n  width: 40px;\n  height: 40px;\n  margin-left: auto;\n  margin-right: 30px;\n`;\n\n// Export Default\nexport default ChannelSettings;\n","import React from \"react\";\nimport { useClickAway } from \"react-use\";\nimport styled from \"styled-components\";\nimport ChannelSettingsDropdown from \"./ChannelSettingsDropdown\";\n\nexport default function ChannelSettings() {\n  const [active, setActive] = React.useState(false);\n  const modalRef = React.useRef(null);\n  const toggleActive = () => {\n    setActive((a) => !a);\n  };\n\n  useClickAway(modalRef, () => active && setActive(false));\n\n  return (\n    <SettingsWrapper ref={modalRef}>\n      <Settings\n        active={active}\n        onClick={toggleActive}\n        src=\"/Settings.svg\"\n        alt=\"\"\n      ></Settings>\n      {active && <ChannelSettingsDropdown />}\n    </SettingsWrapper>\n  );\n}\n\nconst SettingsWrapper = styled.div`\n  position: absolute;\n  top: 30px;\n  right: 30px;\n`;\n\nconst Settings = styled.img`\n  width: 40px;\n  height: 40px;\n  margin-left: auto;\n  margin-right: 30px;\n  cursor: pointer;\n  transition: 400ms;\n  transform: ${(props) => (props.active ? \"rotateZ(35deg)\" : \"none\")};\n`;\n","import React from \"react\";\nimport moment from \"moment\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\nimport { useWeb3React } from \"@web3-react/core\";\nconst DATE_FORMAT = \"DD/MM/YYYY\";\nexport default function ChannelDetails() {\n  const { library } = useWeb3React();\n  const { channelDetails, canVerify } = useSelector((state) => state.admin);\n  const { CHANNEL_ACTIVE_STATE, CHANNNEL_DEACTIVATED_STATE } = useSelector(\n    (state) => state.channels\n  );\n  const [verifyingChannel, setVerifyingChannel] = React.useState([]);\n  const [creationDate, setCreationDate] = React.useState(\"\");\n  const { channelState } = channelDetails;\n  const channelIsActive = channelState === CHANNEL_ACTIVE_STATE;\n  const channelIsDeactivated = channelState === CHANNNEL_DEACTIVATED_STATE;\n\n  React.useEffect(() => {\n    if (!channelDetails || !canVerify) return;\n    (async function() {\n      let channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(\n        channelDetails.verifiedBy\n      );\n      setVerifyingChannel(channelJson);\n    })();\n  }, [channelDetails, canVerify]);\n\n  React.useEffect(() => {\n    if (!channelDetails) return;\n    (async function() {\n      const bn = channelDetails.channelStartBlock.toString();\n      const block = await library.getBlock(+bn);\n      const date = moment(block.timestamp * 1000);//convert from millisecs\n      setCreationDate(date.format(DATE_FORMAT))\n    })();\n  }, [channelDetails]);\n\n  return (\n    <ChannelDetailsWrapper>\n      <SectionTop>\n        <ImageSection src={channelDetails.icon}></ImageSection>\n\n        <Details>\n          <ChannelName>\n            {channelDetails.name}\n            {canVerify && <VerifyImage src=\"/verify.png\"></VerifyImage>}\n          </ChannelName>\n          <ChanneStateText active={channelIsActive}>\n            {channelIsActive\n              ? \"ACTIVE\"\n              : channelIsDeactivated\n              ? \"DEACTIVATED\"\n              : \"BLOCKED\"}\n          </ChanneStateText>\n          <Subscribers>\n            <img src=\"/people.svg\"></img>\n            <SubscribersCount>\n              {channelDetails.subscribers.length}\n            </SubscribersCount>\n          </Subscribers>\n        </Details>\n      </SectionTop>\n\n      <SectionDes>{channelDetails.info}</SectionDes>\n\n      <SectionDate>\n        {canVerify && (\n          <Verified>\n            <span>verified by:</span>\n\n            <VerifyingIcon src={verifyingChannel.icon}></VerifyingIcon>\n            <VerifyingName>{verifyingChannel.name}</VerifyingName>\n          </Verified>\n        )}\n\n        <Date>\n          <span>created on:</span>\n          <span style={{ marginLeft: \"10px\" }}>{creationDate}</span>\n        </Date>\n      </SectionDate>\n\n      <hr />\n    </ChannelDetailsWrapper>\n  );\n}\n\nconst ChannelDetailsWrapper = styled.div`\n  padding: 30px;\n  padding-bottom: 0;\n`;\n\nconst SectionTop = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 30px;\n`;\n\nconst ImageSection = styled.img`\n  width: 120px;\n  height: 120px;\n  border-radius: 50%;\n  margin-right: 20px;\n`;\nconst VerifyImage = styled.img`\n  width: 20px;\n  height: 25px;\n  margin-top: auto;\n  margin-bottom: auto;\n  margin-left: 8px;\n`;\n\nconst VerifyingIcon = styled.img`\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  margin-left: 6px;\n  margin-right: 5px;\n`;\n\nconst VerifyingName = styled.div``;\n\nconst Subscribers = styled.div`\n  height: fit-content;\n  display: flex;\n  align-items: center;\n`;\n\nconst ActiveIcon = styled.span`\n  width: 8px;\n  height: 8px;\n  background: #57c255;\n  border-radius: 50%;\n`;\n\nconst ChanneStateText = styled.span`\n  color: #57c255;\n  font-family: Source Sans Pro;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 18px;\n  line-height: 23px;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  color: ${(props) => (props.active ? \"#57c255\" : \"red\")};\n  margin-bottom: 8px;\n  display: flex;\n  align-items: center;\n\n  ${(props) =>\n    props.active &&\n    `\n        &::after {\n            width:8px;\n            height: 8px;\n            background: #57c255;\n            border-radius: 50%;\n            content: \"\";\n            display: inline-flex;\n            align-items: center;\n            margin-left: 6px;\n        }\n    `}\n`;\n\nconst SubscribersCount = styled.span`\n  margin-left: 5px;\n  padding-left: 8px;\n  padding-right: 8px;\n  height: 16px;\n  background: #35c5f3;\n  border-radius: 10px;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 17px;\n  display: inline-block;\n  color: #ffffff;\n`;\n\nconst Details = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst SectionLine = styled.div`\n  margin-left: 30px;\n  margin-right: 30px;\n`;\n\nconst Date = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 240px;\n  color: #674c9f;\n`;\n\nconst Verified = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  & > span {\n    color: #ec008c;\n    fontsize: 1em;\n    fontweight: bolder;\n  }\n`;\n\nconst ChannelName = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  font-family: Source Sans Pro;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 30px;\n  line-height: 38px;\n  margin-right: 8px;\n  text-transform: capitalize;\n  color: #e20880;\n`;\n\nconst SectionDate = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 25px;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  margin-bottom: 30px;\n`;\n\nconst SectionDes = styled.div`\n  font-family: Source Sans Pro;\n  font-style: normal;\n  font-weight: 300;\n  font-size: 24px;\n  line-height: 30px;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  color: #000000;\n  margin-bottom: 40px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Section, Content } from \"components/SharedStyling\";\n\nimport SendNotifications from \"components/SendNotifications\";\nimport ChannelSettings from \"components/ChannelSettings\";\nimport ChannelDetails from \"components/ChannelDetails\";\nimport CreateChannel from \"components/CreateChannel\";\nimport { useSelector } from \"react-redux\";\n\n// CREATE CHANNEL OWNER DASHBOARD\nfunction ChannelOwnerDashboard() {\n  const { channelDetails, delegatees } = useSelector((state) => state.admin);\n  return (\n    <>\n      <Section>\n        <ModifiedContent>\n          {/* display the create channel page if there are no details */}\n          {!channelDetails ? <CreateChannel /> : \"\"}\n          {/* display the create channel page if there are no details */}\n          {/* display the channel settings */}\n          {channelDetails ? <ChannelSettings /> : \"\"}\n          {/* display the channel settings */}\n          {/* display the details about the profile of the channel */}\n          {channelDetails ? <ChannelDetails /> : \"\"}\n          {/* display the details about the profile of the channel */}\n          {/* display the notifications settings */}\n          {channelDetails || delegatees?.length ? <SendNotifications /> : \"\"}\n          {/* display the notifications settings */}\n        </ModifiedContent>\n      </Section>\n    </>\n  );\n}\n\n// css styles\nconst ModifiedContent = styled(Content)`\n  padding: 0;\n  position: relative;\n`;\n\n// Export Default\nexport default ChannelOwnerDashboard;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content} from 'components/SharedStyling';\n\nimport CreateChannel from 'components/CreateChannel';\n\n// CREATE CHANNEL OWNER DASHBOARD\nfunction ChannelCreationDashboard() {\n  React.useEffect(() => {\n\n  });\n\n  // RRENDER\n  return (\n    <>\n      <Section>\n        <Content padding=\"0px\">\n          <CreateChannel />\n        </Content>\n      </Section>\n    </>\n  );\n}\n\n// css styles\n\n\n// Export Default\nexport default ChannelCreationDashboard;\n","import EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\n\nimport { addresses, abis } from \"@project/contracts\";\n\n// STATIC SINGLETON\nexport const UserEvents = {\n    SUBSCRIBED: \"Subscribed\",\n    UNSUBSCRIBED: \"Unsubscribed\",\n    PUBLIC_KEY_BROADCASTED: \"PublicKeyBroadcasted\",\n    CREATED_CHANNEL: \"CreatedChannel\",\n    DEACTIVATE_CHANNEL: \"DeactivateChannel\",\n}\n\nexport default class UsersDataStore {\n    static instance = UsersDataStore.instance || new UsersDataStore();\n\n    state = {\n      usersCount: -1,\n      userMeta: null,\n      ownerMeta: null,\n\n      callbacks: [],\n\n      account: null,\n      epnsReadProvider: null,\n      epnsCommReadProvider: null\n    }\n\n    // init\n    init = (account, epnsReadProvider, epnsCommReadProvider) => {\n      // set account\n      this.state.account = account;\n\n      // First attach listeners then overwrite the old one if any\n      this.resetUsersListeners();\n      this.state.epnsReadProvider = epnsReadProvider;\n      this.state.epnsCommReadProvider = epnsCommReadProvider;\n      this.initUsersListenersAsync();\n\n      // next get store user count & user meta\n      this.getOwnerMetaAsync();\n      this.getUsersCountAsync();\n      this.getUserMetaAsync();\n    }\n\n    // RESET LISTENERS\n    resetUsersListeners = () => {\n      // only proceed if a read provider is attached\n      if (this.state.epnsReadProvider) {\n        this.state.epnsCommReadProvider.removeAllListeners(\"Subscribe\");\n        this.state.epnsCommReadProvider.removeAllListeners(\"Unsubscribe\");\n        this.state.epnsCommReadProvider.removeAllListeners(\"PublicKeyRegistered\");\n        this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\n        this.state.epnsReadProvider.removeAllListeners(\"DeactivateChannel\");\n      }\n\n      // reset user meta as well\n      this.state.userMeta = null;\n    }\n\n    // init LISTENERS\n    initUsersListenersAsync = async () => {\n      // Add Listeners\n      await this.listenForSubscribedAsync();\n      await this.listenForUnsubscribedAsync();\n\n      if (!this.state.userMeta || (this.state.userMeta && !this.state.userMeta.publicKeyRegistered)) {\n        await this.listenForPublicKeyBroadcastAsync();\n      }\n    }\n\n    // 1. Listen for Subscribe Async\n    listenForSubscribedAsync = async () => {\n      // TODO use the right contract comms\n      // const contract = this.state.epnsReadProvider;\n      // let filter = contract.filters.Subscribe(null, this.state.account);\n\n      // if (this.state.userMeta) {\n      //   this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.add(1);\n      // }\n\n      // contract.on(filter, async (channel, user) => {\n      //   // then perform callbacks\n      //   if (this.state.callbacks[UserEvents.SUBSCRIBED]) {\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.SUBSCRIBED])) {\n      //       if (callback) { callback(channel, user); }\n      //     }\n      //   }\n      // });\n    }\n\n    // 2. Listen for Unsubscribe Async\n    listenForUnsubscribedAsync = async () => {\n      // TODO Use the COMMUNICATOR CONTRACT\n      // const contract = this.state.epnsReadProvider;\n      // let filter = contract.filters.Unsubscribe(null, this.state.account);\n\n      // if (this.state.userMeta) {\n      //   this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.sub(1);\n      // }\n\n      // contract.on(filter, async (channel, user) => {\n      //   // then perform callbacks\n      //   if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\n      //       if (callback) { callback(channel, user); }\n      //     }\n      //   }\n      // });\n    }\n\n    // 3. Listen For Public Key Broadcast\n    listenForPublicKeyBroadcastAsync = async () => {\n        // TODO Use the COMMUNICATOR CONTRACT\n      // const contract = this.state.epnsReadProvider;\n      // let filter = contract.filters.PublicKeyRegistered(this.state.account, null);\n\n      // if (this.state.userMeta) {\n      //   this.state.userMeta.publicKeyRegistered = true;\n      // }\n\n      // contract.once(filter, async (channel, user) => {\n      //   // then perform callbacks\n      //   if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\n      //       if (callback) { callback(channel, user); }\n      //     }\n      //   }\n      // });\n    }\n\n    // FOR CALLBACKS\n    addCallbacks = (callbackType, callbackID, callback) => {\n      // first check if callback already exists\n      if (!this.state.callbacks[callbackType]) {\n        this.state.callbacks[callbackType] = {};\n      }\n\n      if (!this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = callback;\n      }\n    }\n\n    removeCallbacks = (callbackType, callbackID) => {\n      // first check if callback already exists\n      if (this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = null;\n      }\n    }\n\n    // GET OWNER META\n    getOwnerMetaAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise ((resolve, reject) => {\n        if (this.state.ownerMeta) {\n          if (enableLogs) console.log(\"getOwnerMetaAsync() [CACHED] --> %o\", this.state.ownerMeta);\n          resolve(this.state.ownerMeta);\n        }\n        else {\n          EPNSCoreHelper.getOwnerInfo(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.ownerMeta = response;\n\n              if (enableLogs) console.log(\"getOwnerMetaAsync() --> %o\", response);\n              resolve(this.state.ownerMeta);\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getOwnerMetaAsync() --> %o\", err);\n              reject(err);\n            });\n        }\n      });\n    }\n\n    // USERS COUNT\n    getUsersCountAsync = async () => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsCount == -1) {\n          // Count not set, get and set it first\n          const count = EPNSCoreHelper.getTotalNumberOfUsers(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.usersCount = response;\n              console.log(\"getUsersCountAsync() --> %o\", response);\n              resolve(this.state.usersCount)\n            })\n            .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\n        }\n        else {\n          resolve(this.state.usersCount);\n        }\n      });\n    }\n\n    incrementUsersCountAsync = async (incrementCount) => {\n      return new Promise ((resolve, reject) => {\n        this.getUsersCountAsync()\n          .then(response => {\n            this.state.usersCount = response + incrementCount;\n            console.log(\"incrementChannelsCountAsync() --> %d\", this.state.usersCount);\n            resolve(this.state.usersCount);\n          })\n          .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\n      });\n    }\n\n    // GET USER META\n    getUserMetaAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise ((resolve, reject) => {\n        if (this.state.userMeta) {\n          if (enableLogs) console.log(\"getUserMetaAsync() [CACHED] --> %o\", this.state.userMeta);\n          resolve(this.state.userMeta);\n        }\n        else {\n          EPNSCoreHelper.getUserInfo(this.state.account, this.state.epnsCommReadProvider)\n            .then(response => {\n              this.state.userMeta = response;\n\n              if (enableLogs) console.log(\"getUserMetaAsync() --> %o\", this.state.userMeta);\n              resolve(this.state.userMeta);\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getUserMetaAsync() --> %o\", err);\n              reject(err);\n          });\n        }\n      });\n    }\n\n}\n","/**\n * This file helps us maintain a global state of all contracts to be used across the application\n * This is used to prevent duplication of logic and instantiating contracts multiple times\n * This is also used to prevent passing props everywhere and making the code ugly\n */\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  ZERO_ADDRESS: \"0x0000000000000000000000000000000000000000\",\n  epnsReadProvider: null, // the core contract reader\n  epnsWriteProvider: null, // the core contract with signer\n  epnsCommReadProvider: null, // the communicator contract reader\n  epnsCommWriteProvider: null, // the communicator write contract with signer\n  pushAdminAddress: null, // the address of the push admin\n};\n\nexport const contractSlice = createSlice({\n  name: \"contracts\",\n  initialState,\n  reducers: {\n    setCoreReadProvider: (state, action) => {\n      state.epnsReadProvider = action.payload;\n    },\n    setCoreWriteProvider: (state, action) => {\n      state.epnsWriteProvider = action.payload;\n    },\n    setCommunicatorReadProvider: (state, action) => {\n      state.epnsCommReadProvider = action.payload;\n    },\n    setCommunicatorWriteProvider: (state, action) => {\n      state.epnsCommWriteProvider = action.payload;\n    },\n    setPushAdmin: (state, action) => {\n      state.pushAdminAddress = action.payload;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  setCoreReadProvider,\n  setCoreWriteProvider,\n  setCommunicatorReadProvider,\n  setCommunicatorWriteProvider,\n  setPushAdmin\n} = contractSlice.actions;\n\nexport default contractSlice.reducer;\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport { ethers } from \"ethers\";\nimport styled, { css } from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\nimport hex2ascii from \"hex2ascii\";\nimport { addresses, abis, envConfig } from \"@project/contracts\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport config from \"config\";\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\nimport NotificationToast from \"components/NotificationToast\";\nimport AliasVerificationodal from \"components/AliasVerificationModal\";\nimport Info from \"segments/Info\";\nimport SpamBox from \"segments/spam\";\nimport Feedbox from \"segments/Feedbox\";\nimport ViewChannels from \"segments/ViewChannels\";\nimport ChannelOwnerDashboard from \"segments/ChannelOwnerDashboard\";\nimport ChannelCreationDashboard from \"segments/ChannelCreationDashboard\";\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\nimport UsersDataStore from \"singletons/UsersDataStore\";\nimport { postReq } from \"api\";\nimport {\n  setCoreReadProvider,\n  setCoreWriteProvider,\n  setCommunicatorReadProvider,\n  setCommunicatorWriteProvider,\n  setPushAdmin,\n} from \"redux/slices/contractSlice\";\nimport {\n  setUserChannelDetails,\n  setCanVerify,\n  setDelegatees,\n} from \"redux/slices/adminSlice\";\nimport { addNewNotification, toggleToggler, resetState } from \"redux/slices/notificationSlice\";\n\nexport const ALLOWED_CORE_NETWORK = envConfig.coreContractChain; //chainId of network which we have deployed the core contract on\nconst CHANNEL_TAB = 1; //Default to 1 which is the channel tab\n\n// Create Header\nfunction Home() {\n  ReactGA.pageview(\"/home\");\n\n  const dispatch = useDispatch();\n  const { account, library, chainId } = useWeb3React();\n  const {\n    epnsReadProvider,\n    epnsWriteProvider,\n    epnsCommReadProvider,\n  } = useSelector((state) => state.contracts);\n\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\n  const INITIAL_OPEN_TAB = CHANNEL_TAB; //if they are not on a core network.redirect then to the notifications page\n\n  const [controlAt, setControlAt] = React.useState(0);\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [adminStatusLoaded, setAdminStatusLoaded] = React.useState(false);\n  const [aliasEthAccount, setAliasEthAccount] = React.useState(null);\n  const [aliasVerified, setAliasVerified] = React.useState(null); // null means error, false means unverified and true means verified\n  const [channelAdmin, setChannelAdmin] = React.useState(false);\n  const [channelJson, setChannelJson] = React.useState([]);\n\n  // toast related section\n  const [toast, showToast] = React.useState(null);\n  const clearToast = () => showToast(null);\n  const showNetworkToast = () => {\n    showToast({\n      notificationTitle: (\n        <span style={{ color: \"#e20880\" }}> Invalid Network </span>\n      ),\n      notificationBody:\n        \"Please connect to the Kovan network to access channels\",\n    });\n  };\n\n  //clear toast variable after it is shown\n  React.useEffect(() => {\n    if (toast) {\n      clearToast();\n    }\n  }, [toast]);\n  // toast related section\n\n  React.useEffect(() => {\n    dispatch(resetState());\n    setTimeout(() => dispatch(toggleToggler()), 300)\n  }, [account]);\n\n  /**\n   * Logic to get channel alias and alias verification status as well as create instances of core and comunicator contract\n   */\n  React.useEffect(() => {\n    (async function init() {\n      const coreProvider = onCoreNetwork\n        ? library\n        : ethers.getDefaultProvider(ALLOWED_CORE_NETWORK, {\n            etherscan: config.etherscanToken,\n          });\n      // if we are not on the core network then check for if this account is an alias for another channel\n      if (!onCoreNetwork) {\n        // get the eth address of the alias address, in order to properly render information about the channel\n        const aliasEth = await postReq(\"/channels/get_eth_address\", {\n          aliasAddress: account,\n          op: \"read\",\n        }).then(({ data }) => {\n          console.log({ data });\n          const ethAccount = data;\n          if (ethAccount) {\n            setAliasEthAccount(ethAccount.ethAddress);\n          }\n          return data;\n        });\n        if (aliasEth) {\n          // if an alias exists, check if its verified.\n          await postReq(\"/channels/get_alias_verification_status\", {\n            aliasAddress: account,\n            op: \"read\",\n          }).then(({ data }) => {\n            // if it returns undefined then we need to let them know to verify their channel\n            if (!data) {\n              setAliasVerified(false);\n              return;\n            }\n            const { status } = data;\n            setAliasVerified(status || null);\n            return data;\n          });\n        }\n      }\n      // if we are not on the core network then fetch if there is an alias address from the api\n      // inititalise the read contract for the core network\n      const coreContractInstance = new ethers.Contract(\n        addresses.epnscore,\n        abis.epnscore,\n        coreProvider\n      );\n      // initialise the read contract for the communicator function\n      const commAddress = onCoreNetwork\n        ? addresses.epnsEthComm\n        : addresses.epnsPolyComm;\n      const commContractInstance = new ethers.Contract(\n        commAddress,\n        abis.epnsComm,\n        library\n      );\n      dispatch(setCommunicatorReadProvider(commContractInstance));\n      dispatch(setCoreReadProvider(coreContractInstance));\n      // initialise the read contract for the communicator function\n      if (!!(library && account)) {\n        let signer = library.getSigner(account);\n        const coreSignerInstance = new ethers.Contract(\n          addresses.epnscore,\n          abis.epnscore,\n          signer\n        );\n        const communicatorSignerInstance = new ethers.Contract(\n          commAddress,\n          abis.epnsComm,\n          signer\n        );\n        dispatch(setCoreWriteProvider(coreSignerInstance));\n        dispatch(setCommunicatorWriteProvider(communicatorSignerInstance));\n      }\n    })();\n  }, [account, chainId]);\n\n  /**\n   * When we instantiate the contract instances, fetch basic information about the user\n   * Corresponding channel owned.\n   */\n  React.useEffect(() => {\n    if (!epnsReadProvider || !epnsCommReadProvider) return;\n    // Reset when account refreshes\n    setChannelAdmin(false);\n    dispatch(setUserChannelDetails(null));\n    setAdminStatusLoaded(false);\n    userClickedAt(INITIAL_OPEN_TAB);\n    setChannelJson([]);\n    // save push admin to global state\n    epnsReadProvider.pushChannelAdmin().then((response) => {\n      dispatch(setPushAdmin(response));\n    });\n\n    // EPNS Read Provider Set\n    if (epnsReadProvider != null && epnsCommReadProvider != null) {\n      // Instantiate Data Stores\n      UsersDataStore.instance.init(\n        account,\n        epnsReadProvider,\n        epnsCommReadProvider\n      );\n      ChannelsDataStore.instance.init(\n        account,\n        epnsReadProvider,\n        epnsCommReadProvider\n      );\n      checkUserForChannelOwnership();\n      fetchDelegators();\n    }\n  }, [epnsReadProvider, epnsCommReadProvider]);\n\n  // handle user action at control center\n  const userClickedAt = (controlIndex) => {\n    setControlAt(controlIndex);\n  };\n\n  // fetch all the channels who have delegated to this account\n  const fetchDelegators = () => {\n    postReq(\"/channels/delegatee/get_channels\", {\n      delegateAddress: account,\n      op: \"read\",\n    })\n      .then(async ({ data: delegators }) => {\n        // if there are actual delegators\n        // fetch basic information abouot the channels and store it to state\n        if (delegators && delegators.channelOwners) {\n          const channelInformationPromise = [\n            ...new Set([account, ...delegators.channelOwners])//make the accounts unique\n          ].map((channelAddress) =>\n            ChannelsDataStore.instance\n              .getChannelJsonAsync(channelAddress)\n              .then((res) => ({ ...res, address: channelAddress }))\n              .catch(() => false)\n          );\n          const channelInformation = await Promise.all(\n            channelInformationPromise\n          );\n          dispatch(setDelegatees(channelInformation.filter(Boolean)));\n          // fetch the json information about this delegatee channel and add to global state\n        } else {\n          dispatch(setDelegatees([]));\n        }\n      })\n      .catch(async (err) => {\n        console.log({ err });\n      });\n  };\n\n  // Check if a user is a channel or not\n  const checkUserForChannelOwnership = async () => {\n    // Check if account is admin or not and handle accordingly\n    const ownerAccount = !onCoreNetwork ? aliasEthAccount : account;\n    EPNSCoreHelper.getChannelJsonFromUserAddress(ownerAccount, epnsReadProvider)\n      .then(async (response) => {\n        // if channel admin, then get if the channel is verified or not, then also fetch more details about the channel\n        const verificationStatus = await epnsWriteProvider.getChannelVerfication(\n          ownerAccount\n        );\n        const channelJson = await epnsWriteProvider.channels(ownerAccount);\n        const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(\n          ownerAccount\n        );\n        dispatch(\n          setUserChannelDetails({\n            ...response,\n            ...channelJson,\n            subscribers: channelSubscribers,\n          })\n        );\n        dispatch(setCanVerify(Boolean(verificationStatus)));\n        setChannelJson(response);\n        setChannelAdmin(true);\n        setAdminStatusLoaded(true);\n      })\n      .catch((err) => {\n        console.log(\n          \"There was an error [checkUserForChannelOwnership]:\",\n          err.message\n        );\n        setChannelAdmin(false);\n        setAdminStatusLoaded(true);\n      })\n      .finally(() => {\n        setAdminStatusLoaded(true);\n      });\n  };\n\n  // Render\n  return (\n    <Container>\n      <Controls>\n        <ControlButton\n          index={0}\n          active={controlAt == 0 ? 1 : 0}\n          border=\"#e20880\"\n          onClick={() => {\n            userClickedAt(0);\n          }}\n        >\n          <ControlImage\n            src=\"./svg/feedbox.svg\"\n            active={controlAt == 0 ? 1 : 0}\n          />\n          <ControlText active={controlAt == 0 ? 1 : 0}>Inbox</ControlText>\n        </ControlButton>\n\n        <ControlButton\n          index={1}\n          active={controlAt == 1 ? 1 : 0}\n          border=\"#35c5f3\"\n          onClick={() => {\n            userClickedAt(1);\n          }}\n        >\n          <ControlImage\n            src=\"./svg/channel.svg\"\n            active={controlAt == 1 ? 1 : 0}\n          />\n          <ControlText active={controlAt == 1 ? 1 : 0}>Channels</ControlText>\n        </ControlButton>\n\n        <ControlButton\n          index={2}\n          active={controlAt == 2 ? 1 : 0}\n          border=\"#674c9f\"\n          disabled={!adminStatusLoaded}\n          onClick={() => {\n            if (adminStatusLoaded) {\n              // if youre not on kovan and you dont have a channel, you cannot create except on kovan, so throw error\n              if (!channelAdmin && !onCoreNetwork) {\n                return showNetworkToast();\n              }\n              if (channelAdmin && !aliasVerified && !onCoreNetwork) {\n                return setModalOpen(true);\n              }\n              userClickedAt(2);\n            }\n          }}\n        >\n          {!adminStatusLoaded && (\n            <Loader type=\"Oval\" color=\"#674c9f\" height={32} width={32} />\n          )}\n          {channelAdmin &&\n            adminStatusLoaded &&\n            (onCoreNetwork ? true : aliasVerified) && (\n              <ControlChannelContainer>\n                <ControlChannelImage\n                  src={`${channelJson.icon}`}\n                  active={controlAt == 2 ? 1 : 0}\n                />\n                <ControlChannelText active={controlAt == 2 ? 1 : 0}>\n                  {channelJson.name}\n                </ControlChannelText>\n              </ControlChannelContainer>\n            )}\n          {channelAdmin &&\n            adminStatusLoaded &&\n            aliasVerified === false &&\n            !onCoreNetwork && (\n              <ControlChannelContainer>\n                <ControlChannelImage\n                  src={`${channelJson.icon}`}\n                  active={controlAt == 2 ? 1 : 0}\n                />\n                <ControlChannelText active={controlAt == 2 ? 1 : 0}>\n                  Verify channel alias\n                </ControlChannelText>\n              </ControlChannelContainer>\n            )}\n          {channelAdmin &&\n            adminStatusLoaded &&\n            aliasVerified === null &&\n            !onCoreNetwork && (\n              <ControlChannelContainer>\n                <ControlChannelImage\n                  src={`${channelJson.icon}`}\n                  active={controlAt == 2 ? 1 : 0}\n                />\n                <ControlChannelText active={controlAt == 2 ? 1 : 0}>\n                  Contact the admin\n                </ControlChannelText>\n              </ControlChannelContainer>\n            )}\n          {!channelAdmin && adminStatusLoaded && (\n            <>\n              <ControlImage\n                src=\"./svg/channeladmin.svg\"\n                active={controlAt == 2 ? 1 : 0}\n              />\n              <ControlText active={controlAt == 2 ? 1 : 0}>\n                Create Your Channel\n              </ControlText>\n            </>\n          )}\n        </ControlButton>\n\n        <ControlButton\n          index={3}\n          active={controlAt == 3 ? 1 : 0}\n          border=\"#e20880\"\n          onClick={() => {\n            userClickedAt(3);\n          }}\n        >\n          <ControlImage src=\"./svg/share.svg\" active={controlAt == 3 ? 1 : 0} />\n          <ControlText active={controlAt == 3 ? 1 : 0}>\n            Receive Notifs\n          </ControlText>\n        </ControlButton>\n      </Controls>\n      <Interface>\n        {controlAt == 0 && <Feedbox />}\n        {controlAt == 1 && <ViewChannels />}\n        {controlAt == 2 && adminStatusLoaded && <ChannelOwnerDashboard />}\n        {controlAt == 3 && <Info />}\n        {toast && (\n          <NotificationToast notification={toast} clearToast={clearToast} />\n        )}\n        {modalOpen && (\n          <AliasVerificationodal\n            onClose={() => setModalOpen(false)}\n            onSuccess={() => setAliasVerified(true)}\n            verificationStatus={aliasVerified}\n          />\n        )}\n      </Interface>\n    </Container>\n  );\n}\n\n// css style\nconst Container = styled.div`\n  flex: 1;\n  display: block;\n  flex-direction: column;\n  min-height: calc(100vh - 100px);\n`;\n\nconst Controls = styled.div`\n  flex: 0;\n  display: flex;\n  flex-direction: row;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst ControlButton = styled.div`\n  flex: 1 1 21%;\n  height: 120px;\n  min-width: 200px;\n  background: #fff;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225, 225, 225);\n\n  border-bottom: 10px solid rgb(180, 180, 180);\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-bottom: 10px solid\n    ${(props) => (props.active ? props.border : \"rgb(180,180,180)\")};\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n  }\n`;\n\nconst ControlImage = styled.img`\n  height: 30%;\n  margin-right: 15px;\n  filter: ${(props) => (props.active ? \"brightness(1)\" : \"brightness(0)\")};\n  opacity: ${(props) => (props.active ? \"1\" : \"0.25\")};\n\n  transition: transform 0.2s ease-out;\n  ${(props) =>\n    props.active &&\n    css`\n      transform: scale(3.5) translate(-20px, 0px);\n      opacity: 0.4;\n    `};\n`;\n\nconst ControlText = styled.label`\n  font-size: 16px;\n  font-weight: 200;\n  opacity: ${(props) => (props.active ? \"1\" : \"0.75\")};\n\n  transition: transform 0.2s ease-out;\n  ${(props) =>\n    props.active &&\n    css`\n      transform: scale(1.3) translate(-10px, 0px);\n    `};\n`;\n\nconst ControlChannelContainer = styled.div`\n  margin: 0px 20px;\n  flex-direction: column;\n  align-items: center;\n  display: flex;\n`;\n\nconst ControlChannelImage = styled.img`\n  width: 20%;\n  margin-bottom: 10px;\n  transition: transform 0.2s ease-out;\n  ${(props) =>\n    props.active &&\n    css`\n      transform: scale(3.5) translate(-40px, 5px);\n      opacity: 0.2;\n      z-index: 1;\n    `};\n`;\n\nconst ControlChannelText = styled.label`\n  font-size: 16px;\n  font-weight: 300;\n  opacity: ${(props) => (props.active ? \"1\" : \"0.75\")};\n  transition: transform 0.2s ease-out;\n  background: -webkit-linear-gradient(#db268a, #34c6f3);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  z-index: 2;\n  ${(props) =>\n    props.active &&\n    css`\n      transform: scale(1.1) translate(0px, -20px);\n    `};\n`;\n\nconst Interface = styled.div`\n  flex: 1;\n  display: flex;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 20px;\n  border: 1px solid rgb(225, 225, 225);\n\n  margin: 15px;\n  overflow: hidden;\n`;\n\n// Export Default\nexport default Home;\n","// Usage:\n//   create component file (e.g. BlockiesIdenticon.js) using uncommented code below\n//   npm install blockies-identicon\n//   in the file you want to use the component (e.g. BlockiesIdenticon.js):\n//   import Blockies from \"blockies/react-component\";\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\nimport React from 'react';\nimport blockies from \"./blockies\";\n\nexport default class BlockiesIdenticon extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  getOpts () {\n    return {\n      seed: this.props.opts.seed || \"foo\",\n      color: this.props.opts.color || \"#dfe\",\n      bgcolor: this.props.opts.bgcolor || \"#a71\",\n      size: this.props.opts.size || 15,\n      scale: this.props.opts.scale || 3,\n      spotcolor: this.props.opts.spotcolor || \"#000\"\n    };\n  }\n  componentDidMount() {\n    this.draw();\n  }\n  componentDidUpdate(prevProps) {\n    // Check for prop change\n    if (this.props.seed !== prevProps.seed) {\n      this.draw();\n    }\n  }\n  draw() {\n    blockies.render({\n      seed: this.props.opts.seed,\n      size: this.props.opts.size,\n      scale: this.props.opts.scale\n    }, this.canvas);\n  }\n  render() {\n    return React.createElement(\"canvas\", {ref: canvas => this.canvas = canvas});\n  }\n}\n","import React from \"react\";\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\nimport styled, { css } from 'styled-components';\n\nimport Loader from 'react-loader-spinner'\nimport Blockies from \"components/BlockiesIdenticon\";\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\n// Create Header\nfunction Profile() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [address, setAddress] = React.useState('');\n  const [ens, setENS] = React.useState('');\n  const [ensFetched, setENSFetched] = React.useState(false);\n\n  React.useEffect(() => {\n    if (account && account != '') {\n      // Check if the address is the same\n      if (address !== account) {\n        setENS('');\n        setENSFetched(false);\n\n        // get ens\n        library\n          .lookupAddress(account).then(function(name) {\n            setENS(name);\n            setENSFetched(true);\n            setAddress(account);\n          })\n          .catch(() => {\n            setENSFetched(true);\n            setAddress(account);\n          })\n      }\n\n    }\n  }, [account]);\n\n  // to create blockies\n\n  return (\n    <>\n    {account && account !== '' && !error &&\n      <Container>\n        <Blocky>\n          <BlockyInner>\n             <Blockies seed={account.toLowerCase()} opts={{seed: account.toLowerCase(), size: 7, scale: 7}}/>\n          </BlockyInner>\n        </Blocky>\n        <Wallet>\n        {!ensFetched &&\n          <Loader\n      \t     type=\"Oval\"\n      \t     color=\"#FFF\"\n      \t     height={16}\n      \t     width={16}\n      \t  />\n        }\n        {ensFetched && ens &&\n          <>{ens}</>\n        }\n        {ensFetched && !ens &&\n          <>{account.substring(0, 6)}.....{account.substring(account.length - 6)}</>\n        }\n        </Wallet>\n      </Container>\n    }\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  margin: 0;\n  padding: 0;\n  background: none;\n  border: 0;\n  outline: 0;\n  justify-content: flex-start;\n  flex: 1,\n  flex-direction: row;\n  align-items: center;\n  display: flex;\n`\n\nconst Blocky = styled.div`\n  position: relative;\n  width: 50px;\n  height: 50px;\n  border-radius: 100%;\n  overflow: hidden;\n  transform: scale(0.85);\n  outline-width: 2px;\n  outline-color: rgba(225,225,225,1);\n`\n\nconst BlockyInner = styled.div`\n`\n\nconst Wallet = styled.span`\n  margin: 0px 10px;\n  padding: 8px 15px;\n  height: 16px;\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  font-weight: bold;\n  font-size: 14px;\n  color: #fff;\n  border-radius: 15px;\n  background: rgb(226,8,128);\n  background: linear-gradient(107deg, rgba(226,8,128,1) 30%, rgba(103,76,159,1) 70%, rgba(53,197,243,1) 100%);\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\n// Export Default\nexport default Profile;\n","import React from \"react\";\nimport styled, { css, keyframes } from 'styled-components';\nimport { AnimateOnChange } from 'react-animation';\n\n// Create Header\nfunction Bell({ badgeCount, bellPressedCB, width, height }) {\n  const [badge, setBadge] = React.useState(0);\n  const [ring, setRing] = React.useState(false);\n\n  React.useEffect(() => {\n    // Set new badge count and ring the bell\n    setBadge(badgeCount);\n\n    if (badge > 0) {\n      setResetRinger();\n    }\n  }, [badgeCount]);\n\n  const setResetRinger = () => {\n    setRing(true);\n\n    setTimeout(() => {\n        setRing(false)\n    }, 500);\n  }\n\n  return (\n    <Container\n      onClick={() => {\n        if (bellPressedCB) {bellPressedCB();}\n      }}\n      width={width}\n      height={height}\n    >\n      <BellImage ring={ring} src=\"./bell.png\" className=\"tadaaa\" ringme={ring} width={width} height={height} />\n      <BellImageAbs src=\"./bellball.png\" width={width} height={height} />\n      <BellImageAbs src=\"./ring.png\" width={width} height={height} />\n      {badge != 0 &&\n        <AnimateOnChange\n          animationIn=\"fadeIn\"\n          animationOut=\"fadeOut\"\n          durationOut={200}\n        >\n          <Badge>{badge}</Badge>\n        </AnimateOnChange>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  border: 0;\n  outline: 0;\n  background: transparent;\n  border: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 10px;\n  position: relative;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst tadaaa = keyframes`\n  0% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n\n  10%, 20% {\n    -webkit-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n  }\n\n  30%, 50%, 70%, 90% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n  }\n\n  40%, 60%, 80% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n  }\n\n  100% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n`;\n\nconst BellImage = styled.img`\n  position: absolute;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n\n  transition: transform .2s ease-out;\n  ${ props => props.ringme && css`\n    animation: ${tadaaa} 1s ease-out;\n  `};\n\n\n`\n\nconst BellImageAbs = styled(BellImage)`\n  left: 0,\n`\n\nconst Badge = styled.span`\n  position: absolute;\n  font-size: 10px;\n  color: #fff;\n  padding: 2px 4px;\n  border-radius: 100%;\n  background: rgba(208.0, 44.0, 30.0, 1.0);\n  top: 0px;\n  left: 5px;\n  font-weight: bold;\n`\n\n// Export Default\nexport default Bell;\n","import React from \"react\";\n\nimport styled, { css } from \"styled-components\";\nimport {Section, Item, ItemH, Button} from 'components/SharedStyling';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { Web3Provider } from 'ethers/providers'\n\nimport Profile from 'components/Profile';\nimport Bell from 'components/Bell';\n\n\n// Create Header\nfunction Header() {\n  const context = useWeb3React<Web3Provider>()\n\n  const { active, error } = useWeb3React();\n  const { deactivate } = context\n\n  const [showLoginControls, setShowLoginControls] = React.useState(false);\n\n  function getErrorMessage(error: Error) {\n    if (error instanceof NoEthereumProviderError) {\n      return 'Web3 not enabled, install MetaMask on desktop or visit from a dApp browser on mobile'\n    } else if (error instanceof UnsupportedChainIdError) {\n      return \"Unsupported Network, please connect to the Kovan or Polygon(Mumbai) network\"\n    } else if (\n      error instanceof UserRejectedRequestErrorInjected\n    ) {\n      return 'Please authorize this website to access the dApp'\n    } else {\n      console.error(error)\n      return 'An unknown error occurred. Check the console for more details'\n    }\n  }\n\n  const bellPressed = () => {\n    setShowLoginControls(!showLoginControls);\n  }\n\n  const disconnect = () => {\n    setShowLoginControls(false);\n    deactivate();\n  }\n\n  return (\n    <HeaderContainer\n      direction=\"row\"\n      padding=\"10px 15px\"\n    >\n      <ItemH\n        justify=\"flex-start\"\n        flex=\"0\"\n      >\n        {active && !error &&\n          <Profile />\n        }\n        {!active &&\n          <Logo src=\"epns.png\" />\n        }\n      </ItemH>\n\n      <ItemH\n        justify=\"flex-end\"\n      >\n        {active && !error &&\n          <Bell\n            badgeCount={0}\n            bellPressedCB={bellPressed}\n            width={32}\n            height={32}\n          />\n        }\n\n        {showLoginControls &&\n          <Item\n            position=\"absolute\"\n          >\n            <Button\n              bg=\"#000\"\n              size=\"12px\"\n              spacing=\"0.2em\"\n              textTransform=\"uppercase\"\n              weight=\"600\"\n              radius=\"20px\"\n              onClick={() => disconnect()}\n            >\n              Disconnect\n            </Button>\n          </Item>\n        }\n\n        <ItemH\n          justify=\"flex-end\"\n          flex=\"initial\"\n        >\n          {!!error &&\n            <PrimaryTheme>{getErrorMessage(error)}</PrimaryTheme>\n          }\n          {!active && !error &&\n            <ThirdTheme>Please connect to a Web3 Network</ThirdTheme>\n          }\n          <Connection phase={active ? 'active' : error ? 'error' : 'waiting'} />\n        </ItemH>\n      </ItemH>\n    </HeaderContainer>\n  );\n}\n\n// CSS Styles\nconst HeaderContainer = styled(Section)`\n  @media (max-width: 1440px) {\n    background: rgb(255,255,255);\n  }\n`\n\nconst Logo = styled.img`\n  height: 40px;\n`\n\nconst Notice = styled.span`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n`\n\nconst PrimaryTheme = styled(Notice)`\n  background: #e20880;\n`\n\nconst ThirdTheme = styled(Notice)`\n  background: #674c9f;\n`\n\nconst Connection = styled.span`\n  height: 10px;\n  width: 10px;\n  border-radius: 100%;\n  flex-shrink: 0;\n\n  ${props => props.phase === 'active' && css`\n    background: #77DD77;\n  `};\n\n  ${props => props.phase === 'waiting' && css`\n    background: #FFAE42;\n  `};\n\n  ${props => props.phase === 'error' && css`\n    background: #DC143C;\n  `};\n`\n\n// Export Default\nexport default Header;\n","const countdownEpoch = 1641916800; //1678914000; // https://www.epochconverter.com/\n\nconst countdown = {\n  title: \"Road to Mainnet\",\n  href: \"https://medium.com/ethereum-push-notification-service/epns-governance-goes-live-lets-push-for-progressive-decentralized-governance-7448b58b89b4\",\n  countdownEpoch: countdownEpoch,\n  button: true,\n  buttonTitle: \"Are you ready for Governance\",\n  buttonText: \"Hold a Bit!\",\n  hide: false,\n}\n\nexport default countdown;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport { Item, ItemH, Span, Anchor, Image } from 'components/SharedStyling';\n\nimport countdown from 'config/countdown';\n\nimport { AiFillHeart } from 'react-icons/ai';\n\n// Create Header\nfunction TimerItem() {\n  const [timeRemaining, setTimeRemaining] = React.useState(0);\n\n  const [ticker, setTicker] = React.useState(-2);\n  const [counter, setCounter] = React.useState(0);\n\n  const [time, setTime] = React.useState({hours: '--', mins: '--', secs: '--'});\n\n  const [hhTheme, setHHTheme] = React.useState(\"#fff\");\n  const [mmTheme, setMMTheme] = React.useState(\"#fff\");\n  const [ssTheme, setSSTheme] = React.useState(\"#fff\");\n\n  // For countdown\n  React.useEffect(() => {\n    if (timeRemaining == 0) {\n      const now = Date.now() / 1000; // Unix timestamp in milliseconds to seconds\n      setTimeRemaining(countdown.countdownEpoch - now);\n    }\n\n  }, [timeRemaining]);\n\n  React.useEffect(() => {\n    if (timeRemaining == 0) {\n      return;\n    }\n\n    if (ticker != -2) {\n      const timer = setTimeout(() => {\n        setTicker(ticker - 1);\n\n        if (ticker - 1 > -2 || !ticker) {\n          calculateTimeLeft(ticker - 1);\n        }\n      }, 1000);\n    }\n    else {\n      setTicker(timeRemaining);\n    }\n\n  }, [ticker, timeRemaining]);\n\n  const calculateTimeLeft = (epochInSecs) => {\n    if (epochInSecs > 0) {\n      const hh = Math.floor((epochInSecs / (60 * 60))).toString();\n      const mm = Math.floor((epochInSecs / 60) % 60).toString()\n      const ss = Math.floor(epochInSecs % 60).toString()\n\n      const hhf = hh.length < 2 ? (parseInt(hh) == 0 ? \"00\" : \"0\" + hh) : hh;\n      const mmf = mm.length < 2 ? (parseInt(mm) == 0 ? \"00\" : \"0\" + mm) : mm;\n      const ssf = ss.length < 2 ? (parseInt(ss) == 0 ? \"00\" : \"0\" + ss) : ss;\n\n      setTime({\n        hours: hhf,\n        mins: mmf,\n        secs: ssf\n      });\n    }\n  }\n\n  // to create blockies\n\n  return (\n    <Item margin=\"10px 0px 20px 0px\" align=\"flex-start\" style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}}>\n     \n      \n\n      <Item padding=\"15px 15px\" bg=\"#000\" flex=\"inital\" radius=\"8px\" overflow=\"hidden\">\n        <Item>\n          <Span textAlign=\"center\" textTransform=\"uppercase\" size=\"0.8em\" spacing=\"0.2em\" color=\"#fff\" flex=\"inherit\">{countdown.title}</Span>\n        </Item>\n\n        {timeRemaining > 0 &&\n          <ItemH size=\"3em\">\n            <Span color={hhTheme} weight=\"700\" family=\"'Monstrat', Helvetica, sans-serif\" margin=\"0px 5px\">{time.hours}</Span>\n            <Span color=\"#fff\" weight=\"200\">:</Span>\n            <Span color={mmTheme} weight=\"700\" family=\"'Monstrat', Helvetica, sans-serif\" margin=\"0px 5px\">{time.mins}</Span>\n            <Span color=\"#fff\" weight=\"200\">:</Span>\n            <Span color={ssTheme} weight=\"700\" family=\"'Monstrat', Helvetica, sans-serif\" margin=\"0px 5px\">{time.secs}</Span>\n          </ItemH>\n        }\n\n        {countdown.showListing &&\n          <></>\n        }\n\n        {countdown.button == true &&\n          <>\n            <Anchor\n              href={`${countdown.href}`}\n              title={`${countdown.title}`}\n              target=\"_blank\"\n              bg=\"#e20880\"\n              border\n              margin=\"10px -15px -15px -15px\"\n              self=\"stretch\"\n            >\n            We are going live on mainnet on 11th jan 2022\n            </Anchor>\n          </>\n        }\n      </Item>\n\n      {/* <Item  > */}\n          {/* <Text>Hi I am waiting</Text> */}\n      {/* </Item> */}\n    </Item>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n\n`\nconst Text=styled.h2`\n\n`;\n\n// Export Default\nexport default TimerItem;\n","import React from 'react';\nimport TimerItem from '../components/TimerItem';\nimport styled from 'styled-components';\n\n\nconst TimerComponent=()=>{\n    return(\n        <Wrapper>\n        <TimerItem/>\n        </Wrapper>\n    )\n}\n\nconst Wrapper=styled.div`\n    display:flex;\n    height:100vh;\n    width:100%;\n    background:url(\"/DOWNTIME2.png\") content-box;\n    background-repeat:no-repeat;\n    background-size:100%;\n`;\nexport default TimerComponent;","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Web3Provider } from \"ethers/providers\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { AbstractConnector } from \"@web3-react/abstract-connector\";\nimport { useEagerConnect, useInactiveListener } from \"hooks\";\nimport { injected, walletconnect, portis, ledger } from \"connectors\";\nimport Home from \"pages/Home\";\nimport Header from \"segments/Header\";\nimport styled from \"styled-components\";\nimport { Item, ItemH, Span, H2, B, A } from \"components/SharedStyling\";\nimport UnderProgressModal from './components/UnderProgressModal';\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport TimerComponent from './segments/TimerComponent';\nimport countdown from './config/countdown';\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\n// define the different type of connectors which we use\nconst web3Connectors = {\n  Injected: {\n    obj: injected,\n    logo: \"./svg/login/metamask.svg\",\n    title: \"MetaMask\",\n  },\n  WalletConnect: {\n    obj: walletconnect,\n    logo: \"./svg/login/walletconnect.svg\",\n    title: \"Wallet Connect\",\n  },\n  // Trezor: {obj: trezor, logo: './svg/login/trezor.svg', title: 'Trezor'},\n  Ledger: { obj: ledger, logo: \"./svg/login/ledger.svg\", title: \"Ledger\" },\n  Portis: { obj: portis, logo: \"./svg/login/portis.svg\", title: \"Portis\" },\n};\n\nexport default function App() {\n  const { connector, activate, active, error } = useWeb3React<Web3Provider>();\n  const [activatingConnector, setActivatingConnector] = React.useState<\n    AbstractConnector\n  >();\n  const [currentTime,setcurrentTime]=React.useState(0);\n  \n\n  React.useEffect(()=>{\n    const now = Date.now()/ 1000;\n    setcurrentTime(now)\n  },[])\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined);\n    }\n  }, [activatingConnector, connector]);\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect();\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager || !!activatingConnector);\n  // Initialize GA\n  ReactGA.initialize(\"UA-165415629-5\");\n  ReactGA.pageview(\"/login\");\n  // Initialize GA\n  // return ;\n  if(currentTime < countdown.countdownEpoch)\n  return (\n    <div style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",height:\"100vh\"}}>\n      <TimerComponent/>\n    </div>\n  )\n  else\n  return (\n    <>\n    \n      <HeaderContainer>\n        <Header/>\n      </HeaderContainer>\n\n      <ParentContainer>\n        \n        {active && !error && (\n          <HomeContainer>\n\n            <Home />\n          </HomeContainer>\n        )}\n\n        {!active && (\n          <Item>\n            {/* <UnderProgressModal/> */}\n\n            <ProviderLogo\n              src=\"./epnshomelogo.png\"\n              srcSet={\"./epnshomelogo@2x.png 2x, ./epnshomelogo@2x.png 3x\"}\n            />\n            <Item\n              bg=\"#fafafa\"\n              border=\"1px solid #ddd\"\n              padding=\"15px\"\n              radius=\"12px\"\n            >\n              <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n                <Span bg=\"#e20880\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">\n                  Connect\n                </Span>\n                <Span weight=\"200\"> Your Wallet</Span>\n              </H2>\n\n              <ItemH maxWidth=\"800px\" align=\"stretch\">\n                {Object.keys(web3Connectors).map((name) => {\n                  const currentConnector = web3Connectors[name].obj;\n                  const connected = currentConnector === connector;\n                  const disabled =\n                    !triedEager ||\n                    !!activatingConnector ||\n                    connected ||\n                    !!error;\n                  const image = web3Connectors[name].logo;\n                  const title = web3Connectors[name].title;\n\n                  return (\n                    <ProviderButton\n                      disabled={disabled}\n                      key={name}\n                      onClick={() => {\n                        setActivatingConnector(currentConnector);\n                        activate(currentConnector);\n                      }}\n                      border=\"#35c5f3\"\n                    >\n                      <ProviderImage src={image} />\n\n                      <Span\n                        spacing=\"0.1em\"\n                        textTransform=\"uppercase\"\n                        size=\"12px\"\n                        weight=\"600\"\n                        padding=\"10px\"\n                      >\n                        {title}\n                      </Span>\n                    </ProviderButton>\n                  );\n                })}\n              </ItemH>\n            </Item>\n\n            <Span margin=\"10px\" size=\"14px\">\n              By unlocking your wallet, <B>You agree</B> to our{\" \"}\n              <A href=\"https://epns.io/tos\" target=\"_blank\">\n                Terms of Service\n              </A>{\" \"}\n              and our{\" \"}\n              <A href=\"https://epns.io/privacy\" target=\"_blank\">\n                Privacy Policy\n              </A>\n              .\n            </Span>\n          </Item>\n        )}\n      </ParentContainer>\n\n      <ToastContainer\n        position=\"bottom-right\"\n        autoClose={false}\n        newestOnTop\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n      />\n    </>\n  );\n}\n\n// CSS STYLES\nconst HeaderContainer = styled.header`\n  left: 0;\n  right: 0;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  z-index: 999;\n`;\n\nconst ParentContainer = styled.div`\n  flex-wrap: wrap;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 80px 20px 50px 20px;\n  flex: 1;\n`;\n\nconst HomeContainer = styled.div`\n  display: flex;\n  flex: 1;\n  align-self: center;\n  width: 100%;\n  max-width: 1100px;\n`;\n\nconst ProviderLogo = styled.img`\n  width: 15vw;\n  align-self: center;\n  display: flex;\n  margin: 10px 20px 20px 20px;\n  min-width: 200px;\n`;\n\nconst ProviderButton = styled.button`\n  flex: 1 1 0;\n  min-width: 280px;\n  background: #fff;\n  outline: 0;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225, 225, 225);\n\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    border: 1px solid ${(props) => props.border};\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    border: 1px solid ${(props) => props.border};\n  }\n`;\n\nconst ProviderImage = styled.img`\n  width: 32px;\n  max-height: 32px;\n  padding: 10px;\n`;\n\nconst ProviderLabel = styled.span`\n  font-size: 12px;\n  margin: 5px;\n`;\n\nconst StyledContainer = styled(ToastContainer).attrs({\n  // custom props\n})`\n  .Toastify__toast-container {\n  }\n  .Toastify__toast {\n  }\n  .Toastify__toast--error {\n  }\n  .Toastify__toast--warning {\n  }\n  .Toastify__toast--success {\n  }\n  .Toastify__toast-body {\n    font-size: 12px;\n  }\n  .Toastify__progress-bar {\n  }\n`;\n","import {configureStore, combineReducers, getDefaultMiddleware} from '@reduxjs/toolkit';\nimport contractReducer from './slices/contractSlice';\nimport channelReducer from './slices/channelSlice';\nimport adminReducer from './slices/adminSlice';\nimport notificationReducer from './slices/notificationSlice';\nimport spamReducer from './slices/spamSlice';\n\nconst rootReducer = combineReducers({\n\tcontracts: contractReducer,\n    channels: channelReducer,\n    admin: adminReducer,\n\tnotifications: notificationReducer,\n\tspam: spamReducer\n});\n\nconst store = configureStore({\n\treducer: rootReducer,\n\tmiddleware: getDefaultMiddleware({\n\t\tserializableCheck: false,\n\t\timmutableCheck: false\n\t})\n});\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ethers } from \"ethers\";\nimport { Provider } from \"react-redux\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport * as dotenv from \"dotenv\";\n\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\n\n// enable environmental variables across the entire application\ndotenv.config();\n// You should replace this uri with your own and put it into a .env file\nconst client = new ApolloClient({\n  uri: \"https://api.thegraph.com/subgraphs/name/epnsproject/epnsstaging\",\n  cache: new InMemoryCache(),\n});\n\n/**\n * A utility function used to get the provider\n */\nfunction getLibrary(provider) {\n  const gottenProvider = new ethers.providers.Web3Provider(provider, \"any\");\n  // adding this is important to deal with changing networks\n  gottenProvider.on(\"network\", (_, oldNetwork) => {\n    if (oldNetwork) {\n      // when network has been changed, refresh the page\n      window.location.reload();\n    }\n  });\n  return gottenProvider;\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ApolloProvider client={client}>\n      <Web3ReactProvider getLibrary={getLibrary}>\n        <App />\n      </Web3ReactProvider>\n    </ApolloProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// environmental configurations for the dapp for different environments\nconst config = {\n    apiUrl: \"https://backend-prod.epns.io/apis\", //the right backend URL to be used\n    allowedNetworks: [\n        1, //for eth\n        137 //for polygon\n    ],\n    coreContractChain: 1, //the chain id of the network which the core contract relies on\n    coreRPC: \"https://mainnet.infura.io/v3/4ff53a5254144d988a8318210b56f47a\"\n};\n\nexport default config;","// This address points to a dummy ERC20 contract deployed on Ethereum Mainnet,\n// Goerli, Kovan, Rinkeby and Ropsten. Replace it with your smart contracts.\nconst addresses = {\n  ceaErc20: \"0xc1C0472c0C80bCcDC7F5D01A376Bd97a734B8815\",\n  epnscore: \"0x66329Fdd4042928BfCAB60b179e1538D56eeeeeE\",\n  epnsEthComm: \"0xb3971BCef2D791bc4027BbfedFb47319A4AAaaAa\", // the ropsten core contract\n  epnsPolyComm: \"0xb3971BCef2D791bc4027BbfedFb47319A4AAaaAa\", // the ploygon comm contract\n  dai: \"0x6B175474E89094C44Da98b954EedeAC495271d0F\", //address for dai\n  aDai: \"0xcB1Fe6F440c49E9290c3eb7f158534c2dC374201\",\n  staking: \"0xd9218bb2a7Ff0131555A9b6F179fF5103a27a286\",\n  yieldFarmPUSH: \"0xFe0bcF750d4042480943CC8bA818CA3482DDf691\",\n  yieldFarmLP: \"0xE65fE4a8BCEB8A71D6A8D06dF2D91a9637081c61\",\n  epnsToken: \"0x38c4A4C7fa26eA48E34C45a9F6bDb5DA3f599c55\",\n  epnsLPToken: \"0x69E12FfD1170d851c096FfEC6A8eF27D26D96c0f\",\n  rockstar: \"0xCD1B6C8DDB9A735AA5961Ab4aa5B513fba23A3a3\", //ropsten address\n  batchMintNFT: \"0x9A20272669BBAa6254358ba4BB0520fFc813691C\", //ropsten address\n  NFTRewards: \"0x1f4CA0b2B0541b942A440A3f6673883eEacb2cb3\", //ropsten address\n  distributor: \"0x4Cd9Fe2E0acb9BC28fA51106b99825bd7a02309e\", //ropsten address\n};\n\nexport default addresses;\n","import erc20Abi from \"./abis/erc20\";\nimport ownableAbi from \"./abis/ownable\";\nimport epnscoreAbi from \"./abis/epnscore\";\nimport daiAbi from \"./abis/dai\";\nimport epnsTokenAbi from \"./abis/EPNS.json\";\nimport stakingAbi from \"./abis/Staking.json\";\nimport yieldFarmingAbi from \"./abis/YieldFarm.json\";\nimport rockstarAbi from \"./abis/Rockstar.json\";\nimport ec721Abi from \"./abis/ERC721.json\";\nimport NFTRewards from \"./abis/NFTRewards.json\";\nimport epnsCommAbi from \"./abis/epnsCommunicator.json\";\nimport MerkleDistributorAbi from \"./abis/MerkleDistributor.json\";\n\nexport const abis = {\n  erc20: erc20Abi,\n  ownable: ownableAbi,\n  epnscore: epnscoreAbi,\n  epnsPolyComm: epnsCommAbi,\n  epnsComm: epnsCommAbi,\n  dai: daiAbi,\n  epnsToken: epnsTokenAbi,\n  staking: stakingAbi,\n  yieldFarming: yieldFarmingAbi,\n  rockstar: rockstarAbi,\n  erc721: ec721Abi,\n  NFTRewards: NFTRewards,\n  distributor: MerkleDistributorAbi,\n};\n\nexport { default as envConfig } from \"./config\";\nexport { default as addresses } from \"./addresses\";\n","import React from \"react\";\nimport Select from \"react-select\";\nimport styled, { css } from \"styled-components\";\nimport {\n  Section,\n  Content,\n  Item,\n  ItemH,\n  ItemBreak,\n  H1,\n  H2,\n  H3,\n  Image,\n  P,\n  Span,\n  Anchor,\n  Button,\n  Showoff,\n  FormSubmision,\n  Input,\n  TextField,\n} from \"components/SharedStyling\";\n\nimport { FiLink } from \"react-icons/fi\";\n\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport Dropzone from \"react-dropzone-uploader\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Slider from \"@material-ui/core/Slider\";\n\nimport Loader from \"react-loader-spinner\";\n\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\n\nimport { addresses, abis } from \"@project/contracts\";\nconst ethers = require(\"ethers\");\n\nconst ipfs = require(\"ipfs-api\")();\n\nconst minStakeFees = 50;\nconst ALIAS_CHAINS = [{ value: \"POLYGON_TEST_MUMBAI:80001\", label: \"Polygon\" }];\n\n// Create Header\nfunction CreateChannel() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [processing, setProcessing] = React.useState(0);\n  const [processingInfo, setProcessingInfo] = React.useState(\"\");\n\n  const [uploadDone, setUploadDone] = React.useState(false);\n  const [stakeFeesChoosen, setStakeFeesChoosen] = React.useState(false);\n  const [channelInfoDone, setChannelInfoDone] = React.useState(false);\n\n  const [chainDetails, setChainDetails] = React.useState(\"\");\n  const [channelName, setChannelName] = React.useState(\"\");\n  const [channelAlias, setChannelAlias] = React.useState(\"\");\n  const [channelInfo, setChannelInfo] = React.useState(\"\");\n  const [channelURL, setChannelURL] = React.useState(\"\");\n  const [channelFile, setChannelFile] = React.useState(undefined);\n  const [channelStakeFees, setChannelStakeFees] = React.useState(minStakeFees);\n\n  const [stepFlow, setStepFlow] = React.useState(1);\n\n  React.useEffect(() => {});\n\n  // called every time a file's `status` changes\n  const handleChangeStatus = ({ meta, file }, status) => {\n    console.log(status, meta, file);\n  };\n\n  const onDropHandler = (files) => {\n    //   var file = files[0]\n    //   const reader = new FileReader();\n    //   reader.onload = (event) => {\n    //     console.log(event.target.result);\n    //   };\n    //   reader.readAsDataURL(file);\n    // setChannelFile(file);\n    // console.log(\"Drop Handler\");\n    // console.log(file);\n  };\n\n  // receives array of files that are done uploading when submit button is clicked\n  const handleLogoSubmit = (files, allFiles) => {\n    // console.log(files.map(f => f.meta))\n    allFiles.forEach((f) => {\n      var file = f.file;\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n      // console.log(f.file);\n\n      reader.onloadend = function(e) {\n        // console.log(reader.result);\n        const response = handleLogoSizeLimitation(reader.result);\n        if (response.success) {\n          setStepFlow(2);\n          setProcessing(0);\n          setUploadDone(true);\n          setChannelFile(reader.result);\n        } else {\n          setProcessing(3);\n          setProcessingInfo(response.info);\n        }\n      };\n    });\n  };\n\n  const handleLogoSizeLimitation = (base64) => {\n    // Setup Error on higher size of 128px\n    var sizeOf = require(\"image-size\");\n    var base64Data = base64.split(\";base64,\").pop();\n    var img = Buffer.from(base64Data, \"base64\");\n    var dimensions = sizeOf(img);\n\n    // Only proceed if image is equal to or less than 128\n    if (dimensions.width > 128 || dimensions.height > 128) {\n      console.log(\"Image size check failed... returning\");\n      return {\n        success: 0,\n        info: \"Image size check failed, Image should be 128X128PX\",\n      };\n    }\n\n    // only proceed if png or jpg\n    // This is brilliant: https://stackoverflow.com/questions/27886677/javascript-get-extension-from-base64-image\n    // char(0) => '/' : jpg\n    // char(0) => 'i' : png\n    let fileext;\n    console.log(base64Data.charAt(0));\n    if (base64Data.charAt(0) == \"/\") {\n      return {\n        success: 1,\n        info: \"Image checks passed\",\n      };\n    } else if (base64Data.charAt(0) == \"i\") {\n      return {\n        success: 1,\n        info: \"Image checks passed\",\n      };\n    } else {\n      return {\n        success: 0,\n        info: \"Image extension should be jpg or png\",\n      };\n    }\n  };\n\n  const handleCreateChannel = async (e) => {\n    // Check everything in order\n    // skip this for now\n    e.preventDefault();\n\n    if (\n      isEmpty(channelName) ||\n      isEmpty(channelInfo) ||\n      isEmpty(channelURL) ||\n      isEmpty(channelFile) ||\n      channelAlias\n        ? isEmpty(chainDetails)\n        : chainDetails\n        ? isEmpty(channelAlias)\n        : false\n    ) {\n      setProcessing(3);\n      setProcessingInfo(\"Channel Fields are Empty! Please retry!\");\n\n      return false;\n    }\n\n    // Check complete, start logic\n    setChannelInfoDone(true);\n    setProcessing(1);\n\n    console.log({\n      chainDetails,\n      channelAlias,\n    });\n    var chainDetailsSplit = chainDetails.split(\":\");\n    var blockchain = chainDetailsSplit[0];\n    var chain_id = chainDetailsSplit[1];\n    var address = channelAlias;\n\n    const input = JSON.stringify({\n      name: channelName,\n      info: channelInfo,\n      url: channelURL,\n      icon: channelFile,\n      blockchain: blockchain,\n      chain_id: chain_id,\n      address: address,\n    });\n\n    const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\n\n    setProcessingInfo(\"Uploading Payload...\");\n    const storagePointer = await ipfs.add(input);\n    console.log(\"IPFS storagePointer:\", storagePointer);\n    setProcessingInfo(\"Payload Uploaded, Approval to transfer DAI...\");\n    //console.log(await ipfs.cat(storagePointer));\n\n    // Send Transaction\n    // First Approve DAI\n    var signer = library.getSigner(account);\n\n    let daiContract = new ethers.Contract(addresses.dai, abis.erc20, signer);\n\n    // Pick between 50 DAI AND 25K DAI\n    const fees = ethers.utils.parseUnits(channelStakeFees.toString(), 18);\n\n    var sendTransactionPromise = daiContract.approve(addresses.epnscore, fees);\n    const tx = await sendTransactionPromise;\n\n    console.log(tx);\n    console.log(\"waiting for tx to finish\");\n    setProcessingInfo(\"Waiting for Approval TX to finish...\");\n\n    await library.waitForTransaction(tx.hash);\n\n    let contract = new ethers.Contract(\n      addresses.epnscore,\n      abis.epnscore,\n      signer\n    );\n\n    const channelType = 2; // Open Channel\n    const identity = \"1+\" + storagePointer; // IPFS Storage Type and HASH\n    const identityBytes = ethers.utils.toUtf8Bytes(identity);\n\n    var anotherSendTxPromise = contract.createChannelWithFees(\n      channelType,\n      identityBytes,\n      fees\n    );\n\n    setProcessingInfo(\"Creating Channel TX in progress\");\n    anotherSendTxPromise\n      .then(async function(tx) {\n        console.log(tx);\n        console.log(\"Check: \" + account);\n        await library.waitForTransaction(tx.hash);\n        setProcessing(3);\n        setProcessingInfo(\"Channel Created\");\n      })\n      .catch((err) => {\n        console.log(\"Error --> %o\", err);\n        console.log({ err });\n        setProcessing(3);\n        setProcessingInfo(\n          \"!!!PRODUCTION ENV!!! Contact support@epns.io to whitelist your wallet\"\n        );\n      });\n  };\n\n  const isEmpty = (field) => {\n    if (field.trim().length == 0) {\n      return true;\n    }\n\n    return false;\n  };\n\n  //mind Dai\n  const mintDai = async () => {\n    try {\n      var signer = library.getSigner(account);\n      let daiContract = new ethers.Contract(addresses.dai, abis.dai, signer);\n      console.log({\n        daiContract,\n      });\n      console.log(1);\n      let daiAmount = 1000;\n      const amount = ethers.utils.parseUnits(daiAmount.toString(), 18);\n      console.log(2);\n      var mintTransactionPromise = daiContract.mint(amount);\n      console.log(3);\n      const tx = await mintTransactionPromise;\n      console.log(tx);\n      await library.waitForTransaction(tx.hash);\n      console.log(4);\n      setProcessingInfo(\"1000 Dai minted successfully!\");\n      console.log(\"Transaction Completed\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <>\n      <Section>\n        <Content padding=\"10px 20px 20px\">\n          <Item align=\"flex-start\">\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">\n                Create\n              </Span>\n              <Span weight=\"200\"> Your Channel!</Span>\n            </H2>\n            <H3>\n              <b>Ethereum Push Notification Service</b> (EPNS) makes it\n              extremely easy to open and maintain a genuine channel of\n              communication with your users.\n            </H3>\n          </Item>\n        </Content>\n      </Section>\n\n      <Section>\n        <Content padding=\"0px 20px 20px\">\n          <ItemH justify=\"space-between\">\n            <Step\n              bg=\"#fff\"\n              activeBG=\"#e20880\"\n              type={stepFlow >= 1 ? \"active\" : \"inactive\"}\n            />\n            <Step\n              bg=\"#fff\"\n              activeBG=\"#e20880\"\n              type={stepFlow >= 2 ? \"active\" : \"inactive\"}\n            />\n            <Step\n              bg=\"#fff\"\n              activeBG=\"#e20880\"\n              type={stepFlow >= 3 ? \"active\" : \"inactive\"}\n            />\n            <Line />\n          </ItemH>\n        </Content>\n      </Section>\n\n      {/* Image Upload Section */}\n      {!uploadDone && (\n        <Section>\n          <Content padding=\"50px 20px 20px\">\n            <Item align=\"flex-start\">\n              <H3 color=\"#e20880\">\n                Upload Channel Logo to start the process. Make sure image is\n                128x128px.\n              </H3>\n            </Item>\n\n            <Item margin=\"-10px 0px 20px 0px\">\n              <Dropzone\n                onChangeStatus={handleChangeStatus}\n                onSubmit={handleLogoSubmit}\n                onDrop={onDropHandler}\n                maxFiles={1}\n                multiple={false}\n                accept=\"image/jpeg,image/png\"\n              />\n            </Item>\n            {\n              chainId != 1 ? (\n              <Item align=\"flex-end\">\n                <Minter\n                  onClick={() => {\n                    mintDai();\n                  }}\n                >\n                  <Pool>\n                    <br></br>\n                    <PoolShare>Get Free DAI for Channel</PoolShare>\n                  </Pool>\n                </Minter>\n              </Item>\n              ): <></>\n            }\n          </Content>\n        </Section>\n      )}\n\n      {/* Stake Fees Section */}\n      {uploadDone && !stakeFeesChoosen && (\n        <Section>\n          <Content padding=\"50px 0px 0px 0px\">\n            <Item align=\"flex-start\" margin=\"0px 20px\">\n              <H3 color=\"#e20880\">Set your staking fees in DAI</H3>\n            </Item>\n\n            <Item\n              margin=\"-10px 20px 20px 20px\"\n              padding=\"20px 20px 10px 20px\"\n              bg=\"#f1f1f1\"\n            >\n              <Slider\n                defaultValue={minStakeFees}\n                onChangeCommitted={(event, value) => setChannelStakeFees(value)}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                step={minStakeFees}\n                marks\n                min={minStakeFees}\n                max={25000}\n              />\n              <Span\n                weight=\"400\"\n                size=\"1.0em\"\n                textTransform=\"uppercase\"\n                spacing=\"0.2em\"\n              >\n                Amount Staked: {channelStakeFees} DAI\n              </Span>\n            </Item>\n\n            <Item self=\"stretch\" align=\"stretch\" margin=\"20px 0px 0px 0px\">\n              <Button\n                bg=\"#e20880\"\n                color=\"#fff\"\n                flex=\"1\"\n                radius=\"0px\"\n                padding=\"20px 10px\"\n                onClick={() => {\n                  setStakeFeesChoosen(true);\n                  setStepFlow(3);\n                }}\n              >\n                <Span\n                  color=\"#fff\"\n                  weight=\"400\"\n                  textTransform=\"uppercase\"\n                  spacing=\"0.1em\"\n                >\n                  Continue\n                </Span>\n              </Button>\n            </Item>\n          </Content>\n        </Section>\n      )}\n\n      {/* Channel Entry */}\n      {uploadDone && stakeFeesChoosen && !channelInfoDone && (\n        <Section>\n          <Content padding=\"50px 0px 0px 0px\">\n            <Item align=\"flex-start\" margin=\"0px 20px\">\n              <H3 color=\"#e20880\">Setup your Channel Info</H3>\n            </Item>\n\n            <FormSubmision\n              flex=\"1\"\n              direction=\"column\"\n              margin=\"0px\"\n              justify=\"center\"\n              size=\"1.1rem\"\n              onSubmit={handleCreateChannel}\n            >\n              <Item\n                margin=\"-10px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n              >\n                <Input\n                  required\n                  placeholder=\"Your Channel Name\"\n                  maxlength=\"40\"\n                  padding=\"12px\"\n                  border=\"1px solid #000\"\n                  weight=\"400\"\n                  size=\"1.2em\"\n                  bg=\"#fff\"\n                  value={channelName}\n                  onChange={(e) => {\n                    setChannelName(e.target.value);\n                  }}\n                />\n                {channelName.trim().length == 0 && (\n                  <Span\n                    padding=\"4px 10px\"\n                    right=\"0px\"\n                    top=\"0px\"\n                    pos=\"absolute\"\n                    color=\"#fff\"\n                    bg=\"#000\"\n                    size=\"0.7rem\"\n                    z=\"1\"\n                  >\n                    Name of Channel\n                  </Span>\n                )}\n              </Item>\n\n              <Item\n                margin=\"15px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n                style={{ position: \"relative\" }}\n              >\n                <Select\n                  className=\"basic-single\"\n                  classNamePrefix=\"select\"\n                  placeholder=\"Alias network\"\n                  name=\"color\"\n                  options={ALIAS_CHAINS}\n                  theme={(theme) => ({\n                    ...theme,\n                    borderRadius: 0,\n                    colors: {\n                      ...theme.colors,\n                      primary25: \"#e20880\",\n                      primary: \"#e20880\",\n                    },\n                  })}\n                  onChange={(selectedOption) => {\n                    setChainDetails(selectedOption.value);\n                  }}\n                />\n                <Input\n                  placeholder=\"Your Channel's Alias address\"\n                  maxlength=\"40\"\n                  padding=\"12px\"\n                  style={{ paddingLeft: \"22%\" }}\n                  border=\"1px solid #000\"\n                  weight=\"400\"\n                  size=\"1rem\"\n                  bg=\"#fff\"\n                  value={channelAlias}\n                  onChange={(e) => {\n                    setChannelAlias(e.target.value);\n                  }}\n                />\n              </Item>\n              <Item\n                margin=\"15px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n              >\n                <TextField\n                  required\n                  placeholder=\"Your Channel's Short Description (200 Characters)\"\n                  rows=\"4\"\n                  maxlength=\"200\"\n                  radius=\"4px\"\n                  padding=\"12px\"\n                  weight=\"400\"\n                  border=\"1px solid #000\"\n                  bg=\"#fff\"\n                  value={channelInfo}\n                  onChange={(e) => {\n                    setChannelInfo(e.target.value);\n                  }}\n                  autocomplete=\"off\"\n                />\n              </Item>\n\n              <ItemH\n                margin=\"15px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"center\"\n              >\n                <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                  <FiLink size={24} color=\"#000\" />\n                </Item>\n                <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                  <Input\n                    required\n                    placeholder=\"Call to Action Link\"\n                    padding=\"12px\"\n                    border=\"1px solid #000\"\n                    radius=\"4px\"\n                    weight=\"400\"\n                    bg=\"#f1f1f1\"\n                    value={channelURL}\n                    onChange={(e) => {\n                      setChannelURL(e.target.value);\n                    }}\n                  />\n                  {channelURL.trim().length == 0 && (\n                    <Span\n                      padding=\"4px 10px\"\n                      right=\"0px\"\n                      top=\"0px\"\n                      pos=\"absolute\"\n                      color=\"#fff\"\n                      bg=\"#000\"\n                      size=\"0.7rem\"\n                      z=\"1\"\n                    >\n                      Channel's Website URL\n                    </Span>\n                  )}\n                </Item>\n              </ItemH>\n\n              <Item\n                margin=\"15px 0px 0px 0px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n              >\n                <Button\n                  bg=\"#e20880\"\n                  color=\"#fff\"\n                  flex=\"1\"\n                  radius=\"0px\"\n                  padding=\"20px 10px\"\n                  disabled={processing == 1 ? true : false}\n                >\n                  {processing == 1 && (\n                    <Loader type=\"Oval\" color=\"#fff\" height={24} width={24} />\n                  )}\n                  {processing != 1 && (\n                    <Input\n                      cursor=\"hand\"\n                      textTransform=\"uppercase\"\n                      color=\"#fff\"\n                      weight=\"400\"\n                      size=\"0.8em\"\n                      spacing=\"0.2em\"\n                      type=\"submit\"\n                      value=\"Setup Channel\"\n                    />\n                  )}\n                </Button>\n              </Item>\n            </FormSubmision>\n          </Content>\n        </Section>\n      )}\n\n      {/* Channel Setup Progress */}\n      {(processing == 1 || processing == 3) && (\n        <Section>\n          <Content padding=\"0px 0px 0px 0px\">\n            {processing == 1 && (\n              <Item margin=\"20px 0px 10px 0px\">\n                <Loader type=\"Oval\" color=\"#000\" height={24} width={24} />\n              </Item>\n            )}\n\n            <Item\n              color=\"#fff\"\n              bg={processing == 1 ? \"#e1087f\" : \"#000\"}\n              padding=\"10px 15px\"\n              margin=\"15px 0px\"\n            >\n              <Span\n                color=\"#fff\"\n                textTransform=\"uppercase\"\n                spacing=\"0.1em\"\n                weight=\"400\"\n                size=\"1em\"\n              >\n                {processingInfo}\n              </Span>\n            </Item>\n          </Content>\n        </Section>\n      )}\n    </>\n  );\n}\n\n// css styles\nconst Step = styled.div`\n  height: 12px;\n  width: 12px;\n  background: ${(props) => props.bg || \"#fff\"};\n  border: 4px solid ${(props) => props.activeBG || \"#000\"};\n  border-radius: 100%;\n\n  ${({ type }) =>\n    type == \"active\" &&\n    css`\n      background: ${(props) => props.activeBG || \"#ddd\"};\n      border: 4px solid #00000022;\n    `};\n`;\n\nconst Line = styled.div`\n  position: absolute;\n  height: 5px;\n  background: #f1f1f1;\n  right: 0;\n  left: 0;\n  margin: 0px 10px;\n  z-index: -1;\n`;\n\nconst Channel = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst Notice = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled.h1`\n  color: #674c9f;\n  font-size: 30px;\n  font-weight: 300;\n  margin-top: 0px;\n  margin-bottom: 30px;\n`;\n\nconst Info = styled.label`\n  padding-bottom: 20px;\n  font-size: 14px;\n  color: #000;\n`;\n\nconst Info2 = styled(Info)``;\nconst Name = styled(Input)`\n  border-bottom: 1px solid #e20880;\n  font-size: 24px;\n`;\n\nconst ShortInfo = styled.textarea`\n  outline: 0;\n  border: 0;\n  border-bottom: 1px solid #35c5f3;\n  margin: 10px;\n  font-size: 18px;\n  min-height: 80px;\n  color: #111;\n`;\n\nconst Url = styled(Input)`\n  border-bottom: 1px solid #674c9f;\n  font-size: 1=8px;\n`;\n\nconst Text = styled.span``;\n\nconst Continue = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n  background: ${(props) => props.theme || \"#674c9f\"};\n  margin: 30px 0px 0px 0px;\n  border-radius: 8px;\n  padding: 16px;\n  font-size: 16px;\n  font-weight: 400;\n`;\nconst Minter = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 13px;\n`;\n\nconst ChannelMetaBox = styled.label`\n  margin: 0px 5px;\n  color: #fff;\n  font-weight: 600;\n  padding: 10px 20px;\n  border-radius: 10px;\n  font-size: 15px;\n  // font-size: 11px;\n`;\nconst Pool = styled.div`\n  margin: 0px 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst PoolShare = styled(ChannelMetaBox)`\n  background: #e20880;\n  // background: #674c9f;\n`;\n\n// Export Default\nexport default CreateChannel;\n","(function() {\n\t// The random number is a js implementation of the Xorshift PRNG\n\tvar randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\n\n\tfunction seedrand(seed) {\n\t\tfor (var i = 0; i < randseed.length; i++) {\n\t\t\trandseed[i] = 0;\n\t\t}\n\t\tfor (var i = 0; i < seed.length; i++) {\n\t\t\trandseed[i%4] = ((randseed[i%4] << 5) - randseed[i%4]) + seed.charCodeAt(i);\n\t\t}\n\t}\n\n\tfunction rand() {\n\t\t// based on Java's String.hashCode(), expanded to 4 32bit values\n\t\tvar t = randseed[0] ^ (randseed[0] << 11);\n\n\t\trandseed[0] = randseed[1];\n\t\trandseed[1] = randseed[2];\n\t\trandseed[2] = randseed[3];\n\t\trandseed[3] = (randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8));\n\n\t\treturn (randseed[3]>>>0) / ((1 << 31)>>>0);\n\t}\n\n\tfunction createColor() {\n\t\t//saturation is the whole color spectrum\n\t\tvar h = Math.floor(rand() * 360);\n\t\t//saturation goes from 40 to 100, it avoids greyish colors\n\t\tvar s = ((rand() * 60) + 40) + '%';\n\t\t//lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\n\t\tvar l = ((rand()+rand()+rand()+rand()) * 25) + '%';\n\n\t\tvar color = 'hsl(' + h + ',' + s + ',' + l + ')';\n\t\treturn color;\n\t}\n\n\tfunction createImageData(size) {\n\t\tvar width = size; // Only support square icons for now\n\t\tvar height = size;\n\n\t\tvar dataWidth = Math.ceil(width / 2);\n\t\tvar mirrorWidth = width - dataWidth;\n\n\t\tvar data = [];\n\t\tfor(var y = 0; y < height; y++) {\n\t\t\tvar row = [];\n\t\t\tfor(var x = 0; x < dataWidth; x++) {\n\t\t\t\t// this makes foreground and background color to have a 43% (1/2.3) probability\n\t\t\t\t// spot color has 13% chance\n\t\t\t\trow[x] = Math.floor(rand()*2.3);\n\t\t\t}\n\t\t\tvar r = row.slice(0, mirrorWidth);\n\t\t\tr.reverse();\n\t\t\trow = row.concat(r);\n\n\t\t\tfor(var i = 0; i < row.length; i++) {\n\t\t\t\tdata.push(row[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tfunction buildOpts(opts) {\n\t\tvar newOpts = {};\n\n\t\tnewOpts.seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);\n\n\t\tseedrand(newOpts.seed);\n\n\t\tnewOpts.size = opts.size || 8;\n\t\tnewOpts.scale = opts.scale || 4;\n\t\tnewOpts.color = opts.color || createColor();\n\t\tnewOpts.bgcolor = opts.bgcolor || createColor();\n\t\tnewOpts.spotcolor = opts.spotcolor || createColor();\n\n\t\treturn newOpts;\n\t}\n\n\tfunction renderIcon(opts, canvas) {\n\t\topts = buildOpts(opts || {});\n\t\tvar imageData = createImageData(opts.size);\n\t\tvar width = Math.sqrt(imageData.length);\n\n\t\tcanvas.width = canvas.height = opts.size * opts.scale;\n\n\t\tvar cc = canvas.getContext('2d');\n\t\tcc.fillStyle = opts.bgcolor;\n\t\tcc.fillRect(0, 0, canvas.width, canvas.height);\n\t\tcc.fillStyle = opts.color;\n\n\t\tfor(var i = 0; i < imageData.length; i++) {\n\n\t\t\t// if data is 0, leave the background\n\t\t\tif(imageData[i]) {\n\t\t\t\tvar row = Math.floor(i / width);\n\t\t\t\tvar col = i % width;\n\n\t\t\t\t// if data is 2, choose spot color, if 1 choose foreground\n\t\t\t\tcc.fillStyle = (imageData[i] == 1) ? opts.color : opts.spotcolor;\n\n\t\t\t\tcc.fillRect(col * opts.scale, row * opts.scale, opts.scale, opts.scale);\n\t\t\t}\n\t\t}\n\t\treturn canvas;\n\t}\n\n\tfunction createIcon(opts) {\n\t\tvar canvas = document.createElement('canvas');\n\n\t\trenderIcon(opts, canvas);\n\n\t\treturn canvas;\n\t}\n\n\tvar api = {\n\t\tcreate: createIcon,\n\t\trender: renderIcon\n\t};\n\n\tif (typeof module !== \"undefined\") {\n\t\tmodule.exports = api;\n\t}\n\tif (typeof window !== \"undefined\") {\n\t\t window.blockies = api;\n\t}\n\n})();\n","import styled, { css } from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  align-self: stretch;\n  justify-content: center;\n  align-items: ${props => props.align || 'initial'};\n  flex-direction: ${props => props.direction || 'column'};\n  background: ${props => props.theme || 'transparent'};\n  background: ${props => props.gradient || 'undefined'};\n  margin: ${props => props.margin || '0px'};\n  padding: ${props => props.padding || '0px'};\n  overflow: ${props => props.overflow || 'initial'};\n  flex: 1;\n  position: relative;\n`\n\nexport const SectionFS = styled(Section)`\n  min-height: 100vh;\n`\n\nexport const SectionFSHero = styled(Section)`\n  min-height: 100vh;\n  background: rgb(31,23,47);\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\n`\n\nexport const SectionHero = styled(Section)`\n  background: rgb(31,23,47);\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\n`\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: ${props => props.padding || \"40px 0px\"};\n  background: ${props => props.theme || 'transparent'};\n  background: ${props => props.gradient || 'undefined'};\n  position: relative;\n`\n\nexport const ItemBreak = styled.div`\n  flex-basis: 100%;\n`\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: ${props => props.wrap || 'wrap'};\n  position: ${props => props.position || 'relative'};\n  justify-content: center;\n  background: ${props => props.bg || 'transparent'};\n  flex: ${props => props.flex || '1'};\n  flex-direction: ${props => props.direction || 'column'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  padding: ${props => props.padding || \"0px\"};\n  margin: ${props => props.margin || '0px'};\n  min-width: ${props => props.minWidth || 'auto'};\n  max-width: ${props => props.maxWidth || 'initial'};\n  font-size: ${props => props.size || \"inherit\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n  filter: ${props => props.filter || \"none\"};\n\n  width: ${props => props.width || \"auto\" };\n  height: ${props => props.height || \"auto\" };\n\n  border: ${props => props.border || \"none\"};\n\n  border-radius: ${props => props.radius || \"0px\"};\n  overflow: ${props => props.overflow || \"initial\"};\n\n  &:hover & {\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\n  }\n\n  @media (max-width: 768px) {\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\n    text-align: ${props => (props.tabletTextAlign ? props.tabletTextAlign : (props.textAlign ? props.textAlign : \"inherit\")) || \"inherit\"};\n  }\n\n  ${ItemBreak} {\n    width: 0;\n  }\n`\n\nexport const ItemH = styled(Item)`\n  flex-direction: row;\n  flex: ${props => props.flex || '1'};\n\n  ${ItemBreak} {\n    width: auto;\n    height: 0;\n  }\n`\n\nexport const WaveOuter = styled.div`\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: ${props => props.bottom || '-70px'};\n  top: ${props => props.top || 'auto'};\n  transform: ${props => props.transform || 'initial'};\n`;\n\nexport const WaveInner = styled.div`\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  transform: ${props => props.transform || 'initial'};\n`;\n\nexport const Arc = styled.div`\n  position: absolute;\n\toverflow: hidden;\n\twidth: 100%;\n\theight: 300px;\n\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n\n  &:after {\n    content: '';\n    position: absolute;\n  \twidth: 300%;\n  \theight: 300%;\n  \ttop: -25%;\n  \tleft: -100%;\n\n\n    ${ props => props.arcRGB && css`\n      \tbackground: radial-gradient(ellipse at center, ${props.arcRGB}00 0%, ${props.arcRGB}00 50%, ${props.arcRGB}ff 50%, ${props.arcRGB}ff 100%);\n    `};\n  }\n`\n\nexport const H1 = styled.h1`\n  @media (max-width: 480px) {\n    font-size: 2.1rem;\n  }\n`\n\nexport const H2 = styled.h2`\n  color: ${props => props.color || '#000'};\n  font-weight: ${props => props.weight || 600};\n  font-size: ${props => props.size || \"2rem\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n`\n\nexport const H3 = styled.h3`\n  color: ${props => props.color || 'rgb(0 0 0 / 0.5)'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"1rem\"};\n  text-transform: ${props => props.textTransform || \"uppercase\"};\n  margin: ${props => props.margin || \"-15px 0px 20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"0.1em\"};\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n  max-width: ${props => props.maxWidth || 'initial'};\n`\n\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n  display: flex;\n`\n\nexport const P = styled.p`\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n\n  color: ${props => props.color || '#000'};\n  background: ${props => props.bg || 'transparent'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  text-align: ${props => props.textAlign || \"initial\"};\n`\n\nexport const Para = styled(P)`\n  font-weight: ${props => props.weight || 300};\n  letter-spacing: ${props => props.spacing || \"0.02em\"};\n  font-size: ${props => props.size || \"1.1em\"};\n  color: ${props => props.color || \"#000000ee\"};\n`\n\nexport const Span = styled.span`\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n\n  color: ${props => props.color || '#000'};\n  background: ${props => props.bg || 'transparent'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  text-align: ${props => props.textAlign || \"initial\"};\n\n  position: ${props => props.pos || 'initial'};\n  right: ${props => props.right || 'auto'};\n  left: ${props => props.left || 'auto'};\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n\n  z-index: ${props => props.z || 'auto'};\n`\n\nexport const B = styled.span`\n  color: ${props => props.color || '#000'};\n  font-weight: ${props => props.weight || 'bold'};\n`\n\nexport const UL = styled.ul`\n\n`\n\nexport const LI = styled.li`\n  margin: 10px 0px;\n`\n\nexport const Anchor = styled.a`\n  display: flex;\n  flex-direction: ${props => props.direction || 'row'};\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0\"};\n  padding: ${props => props.padding || \"10px 15px\"};\n  letter-spacing: ${props => props.spacing || \"0.2em\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  width: ${props => props.width || \"initial\" };\n\n  position: relative;\n  text-decoration: none;\n  overflow: ${props => props.overflow || \"hidden\"};\n  z-index: 3;\n\n  filter: ${props => props.filter || \"none\"};\n\n  cursor: pointer;\n  pointer: hand;\n\n  &:hover & {\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\n    display: none;\n    z-index: -1;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hoverBG || \"#000\"};\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &:hover:before {\n    display: block;\n  }\n\n  &:hover:after {\n    opacity: 0.08;\n  }\n  &:active:after {\n    opacity: 0.15;\n  }\n`\n\nexport const A = styled(Anchor)`\n  display: inline;\n  color: #e1087f;\n  background: transparent;\n  padding: 0px;\n  letter-spacing: inherit;\n  text-transform: initial;\n`\n\nexport const Button = styled.button`\n  display: flex;\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"tranparent\"};\n  margin: ${props => props.margin || \"0\"};\n  padding: ${props => props.padding || \"10px 15px\"};\n  letter-spacing: ${props => props.spacing || \"initial\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  text-transform: ${props => props.textTransform || \"initial\"};\n\n  position: relative;\n  text-decoration: none;\n  overflow: ${props => props.overflow || \"hidden\"};\n  z-index: 3;\n\n  cursor: pointer;\n  pointer: hand;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\n    display: none;\n    z-index: -1;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hoverBG || \"#000\"};\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &:hover:before {\n    display: block;\n  }\n\n  &:hover:after {\n    opacity: 0.08;\n  }\n  &:active:after {\n    opacity: 0.15;\n  }\n\n  & > div {\n    display: flex;\n  }\n`\n\nexport const Showoff = styled.div`\n  position: absolute;\n  right: ${props => props.right || 'auto'};\n  left: ${props => props.left || 'auto'};\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n  transform: ${props => props.transform || 'initial'};\n  opacity: ${props => props.opacity || 'initial'};\n\n  @media (max-width: 768px) {\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\n\n    right: ${props => (props.tabletRight ? props.tabletRight : (props.right ? props.right : \"auto\")) || \"auto\"};\n    left: ${props => (props.tabletLeft ? props.tabletLeft : (props.left ? props.left : \"auto\")) || \"auto\"};\n    top: ${props => (props.tabletTop ? props.tabletTop : (props.top ? props.top : \"auto\")) || \"auto\"};\n    bottom: ${props => (props.tabletBottom ? props.tabletBottom : (props.bottom ? props.bottom : \"auto\")) || \"auto\"};\n\n    transform: ${props => (props.tabletTransform ? props.tabletTransform : (props.transform ? props.transform : \"auto\")) || \"auto\"};\n\n    opacity: ${props => (props.tabletOpacity ? props.tabletOpacity : (props.opacity ? props.opacity : \"auto\")) || \"initial\"};\n  }\n`\n\nexport const FormSubmision = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  position: relative;\n`\n\nexport const Input = styled.input`\n  display: ${props => props.display || 'flex'};\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#000\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  outline: ${props => props.outline || \"none\"};\n  overflow: ${props => props.overflow || \"hidden\"};\n  position: relative;\n\n  cursor: ${props => props.cursor || \"initial\"};\n  pointer: ${props => props.hand || \"initial\"};\n\n  &:focus + span {\n    opacity: 0;\n\n    -webkit-transition: all 0.2s ease-in-out;\n    -moz-transition: all 0.2s ease-in-out;\n    -o-transition: all 0.2s ease-in-out;\n    transition: all 0.2s ease-in-out;\n  }\n`\n\nexport const TextField = styled.textarea`\n  display: flex;\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#000\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  outline: ${props => props.outline || \"none\"};\n  overflow: ${props => props.overflow || \"hidden\"};\n  position: relative;\n  resize: vertical;\n\n  &:focus + span {\n    opacity: 0;\n\n    -webkit-transition: all 0.2s ease-in-out;\n    -moz-transition: all 0.2s ease-in-out;\n    -o-transition: all 0.2s ease-in-out;\n    transition: all 0.2s ease-in-out;\n  }\n`\n"],"sourceRoot":""}
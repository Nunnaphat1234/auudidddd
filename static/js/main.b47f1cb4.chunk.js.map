{"version":3,"sources":["components/blockies.js","connectors.ts","hooks.ts","components/ChannelPreview.tsx","../../contracts/src/index.js","helpers/EPNSCoreHelper.js","pages/Home.js","components/BlockiesIdenticon.js","components/Profile.tsx","components/Bell.js","segments/Header.tsx","App.tsx","serviceWorker.js","index.js"],"names":["randseed","Array","rand","t","createColor","Math","floor","buildOpts","opts","newOpts","seed","random","pow","toString","i","length","charCodeAt","seedrand","size","scale","color","bgcolor","spotcolor","renderIcon","canvas","imageData","width","height","dataWidth","ceil","mirrorWidth","data","y","row","x","r","slice","reverse","concat","push","createImageData","sqrt","cc","getContext","fillStyle","fillRect","col","api","create","document","createElement","render","module","exports","window","blockies","require","config","injected","InjectedConnector","supportedChainIds","network","NetworkConnector","urls","3","defaultChainId","pollingInterval","portis","PortisConnector","dAppId","networks","styled","div","abis","erc20","ownable","epnscore","EPNSCoreHelper","getUserInfo","wallet","contract","a","Promise","resolve","reject","users","then","response","console","log","catch","err","getChannelInfo","channel","channels","getChannelAddEvent","startBlock","endBlock","filteredResponse","queryFilter","forEach","item","args","getJsonFileFromIPFSHash","ipfs","fetch","json","jsonData","error","getChannelJsonFromUserAddress","channelStartBlock","toNumber","ethers","Container","Controls","ControlButton","props","active","border","ControlImage","img","css","ControlText","label","ControlChannelImage","ControlChannelText","Interface","Home","setBadgeCount","bellPressed","useWeb3React","account","library","chainId","React","useState","controlAt","setControlAt","adminStatusLoaded","setAdminStatusLoaded","channelAdmin","setChannelAdmin","channelJson","setChannelJson","useEffect","userClickedAt","checkUserToChannelEvent","controlIndex","Contract","e","index","onClick","src","disabled","type","icon","name","BlockiesIdenticon","this","draw","prevProps","ref","Component","button","Blocky","BlockyInner","Wallet","span","Profile","address","setAddress","ens","setENS","ensFetched","setENSFetched","lookupAddress","toLowerCase","substring","tadaaa","keyframes","BellImage","ringme","BellImageAbs","Badge","Bell","badgeCount","bellPressedCB","badge","setBadge","ring","setRing","setResetRinger","setTimeout","className","animationIn","animationOut","durationOut","HeaderStyle","ProfileContainer","Logo","UserControls","NetworkDisplayer","Notice","PrimaryTheme","ThirdTheme","Connection","phase","Header","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","getErrorMessage","dotenv","connectorsByName","Injected","Network","Portis","getLibrary","provider","connector","providers","Web3Provider","App","context","activate","deactivate","setBellPressed","activatingConnector","setActivatingConnector","undefined","triedEager","tried","setTried","isAuthorized","useEagerConnect","suppress","ethereum","on","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","HeaderContainer","ParentContainer","HomeContainer","ProviderUpperContainer","ProviderLogo","ProviderContainer","Object","keys","map","currentConnector","activating","image","ProviderButton","key","ProviderImage","ProviderLabel","style","display","gridGap","gridTemplateColumns","maxWidth","margin","marginTop","borderRadius","borderColor","cursor","getSigner","signMessage","signature","alert","message","changeChainId","changeNetwork","close","Boolean","location","hostname","match","client","ApolloClient","uri","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"ovbAAA,WAEC,IAAIA,EAAW,IAAIC,MAAM,GAWzB,SAASC,IAER,IAAIC,EAAIH,EAAS,GAAMA,EAAS,IAAM,GAOtC,OALAA,EAAS,GAAKA,EAAS,GACvBA,EAAS,GAAKA,EAAS,GACvBA,EAAS,GAAKA,EAAS,GACvBA,EAAS,GAAMA,EAAS,GAAMA,EAAS,IAAM,GAAMG,EAAKA,GAAK,GAErDH,EAAS,KAAK,IAAO,GAAK,KAAM,GAGzC,SAASI,IASR,MADY,OANJC,KAAKC,MAAe,IAATJ,KAMM,KAJN,GAATA,IAAe,GAAM,KAII,KAFM,IAA/BA,IAAOA,IAAOA,IAAOA,KAAgB,KAEF,IA+B9C,SAASK,EAAUC,GAClB,IAAIC,EAAU,GAYd,OAVAA,EAAQC,KAAOF,EAAKE,MAAQL,KAAKC,MAAOD,KAAKM,SAASN,KAAKO,IAAI,GAAG,KAAMC,SAAS,IA/DlF,SAAkBH,GACjB,IAAK,IAAII,EAAI,EAAGA,EAAId,EAASe,OAAQD,IACpCd,EAASc,GAAK,EAEf,IAASA,EAAI,EAAGA,EAAIJ,EAAKK,OAAQD,IAChCd,EAASc,EAAE,IAAOd,EAASc,EAAE,IAAM,GAAKd,EAASc,EAAE,GAAMJ,EAAKM,WAAWF,GA4D1EG,CAASR,EAAQC,MAEjBD,EAAQS,KAAOV,EAAKU,MAAQ,EAC5BT,EAAQU,MAAQX,EAAKW,OAAS,EAC9BV,EAAQW,MAAQZ,EAAKY,OAAShB,IAC9BK,EAAQY,QAAUb,EAAKa,SAAWjB,IAClCK,EAAQa,UAAYd,EAAKc,WAAalB,IAE/BK,EAGR,SAASc,EAAWf,EAAMgB,GAEzB,IAAIC,EA7CL,SAAyBP,GAQxB,IAPA,IAAIQ,EAAQR,EACRS,EAAST,EAETU,EAAYvB,KAAKwB,KAAKH,EAAQ,GAC9BI,EAAcJ,EAAQE,EAEtBG,EAAO,GACHC,EAAI,EAAGA,EAAIL,EAAQK,IAAK,CAE/B,IADA,IAAIC,EAAM,GACFC,EAAI,EAAGA,EAAIN,EAAWM,IAG7BD,EAAIC,GAAK7B,KAAKC,MAAa,IAAPJ,KAErB,IAAIiC,EAAIF,EAAIG,MAAM,EAAGN,GACrBK,EAAEE,UACFJ,EAAMA,EAAIK,OAAOH,GAEjB,IAAI,IAAIrB,EAAI,EAAGA,EAAImB,EAAIlB,OAAQD,IAC9BiB,EAAKQ,KAAKN,EAAInB,IAIhB,OAAOiB,EAqBSS,EADhBhC,EAAOD,EAAUC,GAAQ,KACYU,MACjCQ,EAAQrB,KAAKoC,KAAKhB,EAAUV,QAEhCS,EAAOE,MAAQF,EAAOG,OAASnB,EAAKU,KAAOV,EAAKW,MAEhD,IAAIuB,EAAKlB,EAAOmB,WAAW,MAC3BD,EAAGE,UAAYpC,EAAKa,QACpBqB,EAAGG,SAAS,EAAG,EAAGrB,EAAOE,MAAOF,EAAOG,QACvCe,EAAGE,UAAYpC,EAAKY,MAEpB,IAAI,IAAIN,EAAI,EAAGA,EAAIW,EAAUV,OAAQD,IAGpC,GAAGW,EAAUX,GAAI,CAChB,IAAImB,EAAM5B,KAAKC,MAAMQ,EAAIY,GACrBoB,EAAMhC,EAAIY,EAGdgB,EAAGE,UAA6B,GAAhBnB,EAAUX,GAAWN,EAAKY,MAAQZ,EAAKc,UAEvDoB,EAAGG,SAASC,EAAMtC,EAAKW,MAAOc,EAAMzB,EAAKW,MAAOX,EAAKW,MAAOX,EAAKW,OAGnE,OAAOK,EAWR,IAAIuB,EAAM,CACTC,OATD,SAAoBxC,GACnB,IAAIgB,EAASyB,SAASC,cAAc,UAIpC,OAFA3B,EAAWf,EAAMgB,GAEVA,GAKP2B,OAAQ5B,GAIR6B,EAAOC,QAAUN,EAEI,qBAAXO,SACTA,OAAOC,SAAWR,GA7HrB,I,2UCaAS,EAAQ,IAAUC,SAElB,IAKaC,EAAW,IAAIC,IAAkB,CAAEC,kBAAmB,CAAC,KAEvDC,EAAU,IAAIC,IAAiB,CAC1CC,KAAM,CAAEC,EANL,iEAOHC,eAAgB,EAChBC,gBAVuB,OAyCZC,EAAS,IAAIC,IAAgB,CAAEC,OAAQ,uCAAkDC,SAAU,CAAC,EAAG,OCnDpHd,EAAQ,IAAUC,S,sICgBAc,IAAOC,IAAV,KAAf,ICjBaC,EAAO,CAClBC,M,OACAC,Q,OACAC,S,QCDIC,GAHSrB,EAAQ,IAGA,CAErBsB,YAAY,WAAD,4BAAE,WAAOC,EAAQC,GAAf,SAAAC,EAAA,+EACJ,IAAIC,SAAS,SAACC,EAASC,GAE5BJ,EAASK,MAAMN,GACZO,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZJ,EAAQI,MAETG,OAAM,SAACC,GACNH,QAAQC,IAAIE,GACZP,EAAOO,UAVF,2CAAF,qDAAC,GAeZC,eAAe,WAAD,4BAAE,WAAOC,EAASb,GAAhB,SAAAC,EAAA,+EACP,IAAIC,SAAS,SAACC,EAASC,GAE5BJ,EAASc,SAASD,GACfP,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZJ,EAAQI,MAETG,OAAM,SAACC,GACNH,QAAQC,IAAIE,GACZP,EAAOO,UAVC,2CAAF,qDAAC,GAefI,mBAAmB,WAAD,4BAAE,WAAOF,EAASG,EAAYC,EAAUjB,GAAtC,SAAAC,EAAA,+EACX,IAAIC,SAAS,SAACC,EAASC,GAE5B,IAAIc,EACJlB,EAASmB,YAAY,aAAcH,EAAYC,GAC5CX,MAAK,SAAAC,GAEJA,EAASa,SAAQ,SAAUC,GACrBA,EAAKC,KAAK,IAAMT,IAClBK,EAAmBG,MAIvBb,QAAQC,IAAI,mBACZD,QAAQC,IAAIF,GACZC,QAAQC,IAAI,uBACZD,QAAQC,IAAIS,GAEZf,EAAQe,MAETR,OAAM,SAACC,GACNH,QAAQC,IAAIE,GACZP,EAAOO,UAtBK,2CAAF,yDAAC,GA2BnBY,wBAAwB,WAAD,4BAAE,WAAMC,GAAN,SAAAvB,EAAA,+EAChB,IAAIC,SAAS,SAACC,EAASC,GAG5BqB,MADY,wBAA0BD,GAEnClB,MAAK,SAAAC,GAAQ,OAAIA,EAASmB,UAC1BpB,MAAK,SAACqB,GACLnB,QAAQC,IAAIkB,GACZxB,EAAQwB,MAETjB,OAAM,SAACkB,GACNpB,QAAQoB,MAAMA,GACdxB,EAAOwB,UAZU,2CAAF,mDAAC,GAiBxBC,8BAA8B,WAAD,4BAAE,WAAO9B,EAAQC,GAAf,SAAAC,EAAA,+EACtB,IAAIC,SAAS,SAACC,EAASC,GAE5BP,EAAeC,YAAYC,EAAQC,GAChCM,MAAK,SAAAC,GAAQ,OAAIV,EAAee,eAAeb,EAAQC,MACvDM,MAAK,SAAAC,GAAQ,OAAIV,EAAekB,mBAAmBhB,EAAQQ,EAASuB,kBAAkBC,WAAYxB,EAASuB,kBAAkBC,WAAY/B,MACzIM,MAAK,SAAAC,GAAQ,OAAIV,EAAe0B,wBAAwBhB,EAASe,KAAK,OACtEhB,MAAK,SAAAC,GAAQ,OAAIJ,EAAQI,MACzBG,OAAM,SAAAC,GAAG,OAAIP,EAAOO,UARI,2CAAF,qDAAC,KAajBd,I,s8ECpFf,IAAMmC,EAASxD,EAAQ,IAkHvB,IAAMyD,EAAY1C,IAAOC,IAAV,KAOT0C,EAAW3C,IAAOC,IAAV,KASR2C,EAAgB5C,IAAOC,IAAV,KAkBW,SAAC4C,GAAD,OAAWA,EAAMC,OAASD,EAAME,OAAS,sBAcjEC,EAAehD,IAAOiD,IAAV,KAGN,SAACJ,GAAD,OAAWA,EAAMC,OAAS,gBAAkB,mBAC3C,SAACD,GAAD,OAAWA,EAAMC,OAAS,IAAM,UAGxC,SAAAD,GAAK,OAAIA,EAAMC,QAAUI,YAAhB,QAMRC,EAAcnD,IAAOoD,MAAV,KAGJ,SAACP,GAAD,OAAWA,EAAMC,OAAS,IAAM,UAGxC,SAAAD,GAAK,OAAIA,EAAMC,QAAUI,YAAhB,QAKRG,EAAsBrD,IAAOiD,IAAV,KAGV,SAACJ,GAAD,OAAWA,EAAMC,OAAS,IAAM,UAGxC,SAAAD,GAAK,OAAIA,EAAMC,QAAUI,YAAhB,QAMVI,EAAqBtD,IAAOoD,MAAV,KAGX,SAACP,GAAD,OAAWA,EAAMC,OAAS,IAAM,UAExC,SAAAD,GAAK,OAAIA,EAAMC,QAAUI,YAAhB,QAMRK,EAAYvD,IAAOC,IAAV,KAaAuD,EA3Nf,YAAwD,EAAxCC,cAAyC,IAA1BC,EAAyB,EAAzBA,YAAarD,EAAY,EAAZA,SAAY,EACDsD,cAA9BC,GAD+B,EAC9Cd,OAD8C,EACtCT,MADsC,EAC/BuB,SAASC,EADsB,EACtBA,QADsB,KACbC,QAEPC,IAAMC,SAAS,IAHK,mBAG/CC,EAH+C,KAGpCC,EAHoC,OAIJH,IAAMC,UAAS,GAJX,mBAI/CG,EAJ+C,KAI5BC,EAJ4B,OAKdL,IAAMC,UAAS,GALD,mBAK/CK,EAL+C,KAKjCC,EALiC,OAMhBP,IAAMC,SAAS,IANC,mBAM/CO,EAN+C,KAMlCC,EANkC,KAQtDT,IAAMU,WAAU,WAEdH,GAAgB,GAChBF,GAAqB,GACrBM,EAAc,GACdF,EAAe,IAGfG,MAEC,CAACf,IAGJG,IAAMU,WAAU,WACdP,EAAa,KACZ,CAACR,IAGJ,IAAMgB,EAAgB,SAACE,GACrBV,EAAaU,IASTD,EAAuB,uCAAG,4BAAAjE,EAAA,sDAE1BD,EAAW,IAAIgC,EAAOoC,SAASxE,EAAUH,EAAKG,SAAUwD,GAE5DvD,EAAegC,8BAA8BsB,EAASnD,GACnDM,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZwD,EAAexD,GACfsD,GAAgB,GAChBF,GAAqB,MAEtBjD,OAAM,SAAA2D,GACLR,GAAgB,GAChBF,GAAqB,MAbK,2CAAH,qDAkB7B,OACE,kBAAC,EAAD,KACE,kBAACzB,EAAD,KACE,kBAACC,EAAD,CAAemC,MAAO,EAAGjC,OAAqB,GAAbmB,EAAiB,EAAI,EAAGlB,OAAO,UAC9DiC,QAAS,WACPN,EAAc,KAGhB,kBAAC1B,EAAD,CAAciC,IAAI,oBAAoBnC,OAAqB,GAAbmB,EAAiB,EAAI,IACnE,kBAACd,EAAD,CAAaL,OAAqB,GAAbmB,EAAiB,EAAI,GAA1C,YAEF,kBAACrB,EAAD,CAAemC,MAAO,EAAGjC,OAAqB,GAAbmB,EAAiB,EAAI,EAAGlB,OAAO,UAC9DiC,QAAS,WACPN,EAAc,KAGhB,kBAAC1B,EAAD,CAAciC,IAAI,oBAAoBnC,OAAqB,GAAbmB,EAAiB,EAAI,IACnE,kBAACd,EAAD,CAAaL,OAAqB,GAAbmB,EAAiB,EAAI,GAA1C,aAGF,kBAACrB,EAAD,CAAemC,MAAO,EAAGjC,OAAqB,GAAbmB,EAAiB,EAAI,EAAGlB,OAAO,UAC9DmC,UAAWf,EACXa,QAAS,WACHb,GACFO,EAAc,MAIhBP,GACA,kBAAC,IAAD,CACGgB,KAAK,OACLtI,MAAM,UACNO,OAAQ,GACRD,MAAO,KAGXkH,GAAgBF,GACf,oCACE,kBAACd,EAAD,CAAqB4B,IAAG,UAAKV,EAAYa,MAAQtC,OAAqB,GAAbmB,EAAiB,EAAI,IAC9E,kBAACX,EAAD,CAAoBR,OAAqB,GAAbmB,EAAiB,EAAI,GAAIM,EAAYc,QAGnEhB,GAAgBF,GAChB,oCACE,kBAACnB,EAAD,CAAciC,IAAI,yBAAyBnC,OAAqB,GAAbmB,EAAiB,EAAI,IACxE,kBAACd,EAAD,CAAaL,OAAqB,GAAbmB,EAAiB,EAAI,GAA1C,0BAKR,kBAACV,EAAD,Q,wDC5Ge+B,G,mDACnB,WAAYzC,GAAQ,uCACZA,G,sDAGN,MAAO,CACL1G,KAAMoJ,KAAK1C,MAAM5G,KAAKE,MAAQ,MAC9BU,MAAO0I,KAAK1C,MAAM5G,KAAKY,OAAS,OAChCC,QAASyI,KAAK1C,MAAM5G,KAAKa,SAAW,OACpCH,KAAM4I,KAAK1C,MAAM5G,KAAKU,MAAQ,GAC9BC,MAAO2I,KAAK1C,MAAM5G,KAAKW,OAAS,EAChCG,UAAWwI,KAAK1C,MAAM5G,KAAKc,WAAa,U,0CAI1CwI,KAAKC,S,yCAEYC,GAEbF,KAAK1C,MAAM1G,OAASsJ,EAAUtJ,MAChCoJ,KAAKC,S,6BAIPxG,KAASJ,OAAO,CACdzC,KAAMoJ,KAAK1C,MAAM5G,KAAKE,KACtBQ,KAAM4I,KAAK1C,MAAM5G,KAAKU,KACtBC,MAAO2I,KAAK1C,MAAM5G,KAAKW,OACtB2I,KAAKtI,U,+BAEA,IAAD,OACP,OAAO8G,IAAMpF,cAAc,SAAU,CAAC+G,IAAK,SAAAzI,GAAM,OAAI,EAAKA,OAASA,S,GA/BxB8G,IAAM4B,W,oqCCgErD,IAAMjD,GAAY1C,IAAO4F,OAAV,MAaTC,GAAS7F,IAAOC,IAAV,MAWN6F,GAAc9F,IAAOC,IAAV,MAGX8F,GAAS/F,IAAOgG,KAAV,MA0BGC,GArHf,WAAoB,IAAD,EACoCtC,cAArCtB,GADC,EACTS,OADS,EACDT,OAAOuB,EADN,EACMA,QAASC,EADf,EACeA,QADf,KACwBC,QAEXC,IAAMC,SAAS,KAH5B,mBAGVkC,EAHU,KAGDC,EAHC,OAIKpC,IAAMC,SAAS,IAJpB,mBAIVoC,EAJU,KAILC,EAJK,OAKmBtC,IAAMC,UAAS,GALlC,mBAKVsC,EALU,KAKEC,EALF,KAgCjB,OAzBAxC,IAAMU,WAAU,WACVb,GAAsB,IAAXA,GAETsC,IAAYtC,IACdyC,EAAO,IACPE,GAAc,GAGd1C,EACG2C,cAAc5C,GAAS7C,MAAK,SAASsE,GACpCgB,EAAOhB,GACPkB,GAAc,GACdJ,EAAWvC,MAEZzC,OAAM,WACLoF,GAAc,GACdJ,EAAWvC,SAKlB,CAACA,IAKF,oCACCA,GAAuB,KAAZA,IAAmBvB,GAC7B,kBAAC,GAAD,KACE,kBAACwD,GAAD,KACE,kBAACC,GAAD,KACG,kBAAC,GAAD,CAAU3J,KAAMyH,EAAQ6C,cAAexK,KAAM,CAACE,KAAMyH,EAAQ6C,cAAe9J,KAAM,EAAGC,MAAO,OAGhG,kBAACmJ,GAAD,MACEO,GACA,kBAAC,IAAD,CACEnB,KAAK,OACLtI,MAAM,OACNO,OAAQ,GACRD,MAAO,KAGVmJ,GAAcF,GACb,oCAAGA,GAEJE,IAAeF,GACd,oCAAGxC,EAAQ8C,UAAU,EAAG,GAAxB,QAAiC9C,EAAQ8C,UAAU9C,EAAQpH,OAAS,Q,6mECb9E,IAAMkG,GAAY1C,IAAO4F,OAAV,MAUH,SAAA/C,GAAK,OAAIA,EAAMzF,QAAU,MAC1B,SAAAyF,GAAK,OAAIA,EAAM1F,OAAS,MAa7BwJ,GAASC,YAAH,MAgCNC,GAAY7G,IAAOiD,IAAV,MAEH,SAAAJ,GAAK,OAAIA,EAAMzF,QAAU,MAC1B,SAAAyF,GAAK,OAAIA,EAAM1F,OAAS,MAG9B,SAAA0F,GAAK,OAAIA,EAAMiE,QAAU5D,YAAhB,KACGyD,OAMXI,GAAe/G,YAAO6G,GAAP7G,CAAH,MAIZgH,GAAQhH,IAAOgG,KAAV,MAaIiB,GApIf,YAA6D,IAA7CC,EAA4C,EAA5CA,WAAYC,EAAgC,EAAhCA,cAAehK,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OAAU,EAChC2G,IAAMC,SAAS,GADiB,mBACnDoD,EADmD,KAC5CC,EAD4C,OAElCtD,IAAMC,UAAS,GAFmB,mBAEnDsD,EAFmD,KAE7CC,EAF6C,KAI1DxD,IAAMU,WAAU,WAEd4C,EAASH,GAELE,EAAQ,GACVI,MAED,CAACN,IAEJ,IAAMM,EAAiB,WACrBD,GAAQ,GAERE,YAAW,WACPF,GAAQ,KACT,MAGL,OACE,kBAAC,GAAD,CACEvC,QAAS,WACHmC,GAAgBA,KAEtBhK,MAAOA,EACPC,OAAQA,GAER,kBAACyJ,GAAD,CAAWS,KAAMA,EAAMrC,IAAI,aAAayC,UAAU,SAASZ,OAAQQ,EAAMnK,MAAOA,EAAOC,OAAQA,IAC/F,kBAAC2J,GAAD,CAAc9B,IAAI,iBAAiB9H,MAAOA,EAAOC,OAAQA,IACzD,kBAAC2J,GAAD,CAAc9B,IAAI,aAAa9H,MAAOA,EAAOC,OAAQA,IAC3C,GAATgK,GACC,kBAAC,mBAAD,CACEO,YAAY,SACZC,aAAa,UACbC,YAAa,KAEb,kBAACb,GAAD,KAAQI,M,8sDCiClB,IAAMU,GAAc9H,IAAOC,IAAV,MAUX8H,GAAmB/H,IAAOC,IAAV,MAMhB+H,GAAOhI,IAAOiD,IAAV,MAIJgF,GAAejI,IAAOC,IAAV,MAUZiI,IAJclI,IAAO4F,OAAV,MAIQ5F,IAAOC,IAAV,OAMhBkI,GAASnI,IAAOgG,KAAV,MAaNoC,GAAepI,YAAOmI,GAAPnI,CAAH,MAIZqI,GAAarI,YAAOmI,GAAPnI,CAAH,MAIVsI,GAAatI,IAAOgG,KAAV,MAKZ,SAAAnD,GAAK,MAAoB,WAAhBA,EAAM0F,OAAsBrF,YAA5B,SAIT,SAAAL,GAAK,MAAoB,YAAhBA,EAAM0F,OAAuBrF,YAA7B,SAIT,SAAAL,GAAK,MAAoB,UAAhBA,EAAM0F,OAAqBrF,YAA3B,SAMEsF,GA1If,YAAgD,IAA9BtB,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,cAAiB,EACDxD,cAApCb,EADqC,EACrCA,OAAQT,EAD6B,EAC7BA,MAAOuB,EADsB,EACtBA,QA0BvB,OA3B6C,EACbE,QACf,IAAIpI,MAAM,GAE3BqI,IAAMU,WAAU,cAIb,CAACb,IAoBF,kBAACkE,GAAD,KACE,kBAACC,GAAD,KACCjF,IAAWT,GACV,kBAAC,GAAD,OAEAS,GACA,kBAACkF,GAAD,CAAM/C,IAAI,cAGZ,kBAACgD,GAAD,KACGnF,IAAWT,GACV,kBAAC,GAAD,CACE6E,WAAYA,EACZC,cAAeA,EACfhK,MAAO,GACPC,OAAQ,MAId,kBAAC8K,GAAD,OACK7F,GACD,kBAAC+F,GAAD,KAvCR,SAAyB/F,GACvB,OAAIA,aAAiBoG,IACZ,8GACEpG,aAAiBqG,IACnB,iDAEPrG,aAAiBsG,IAEV,kEAEP1H,QAAQoB,MAAMA,GACP,kEA4BYuG,CAAgBvG,KAE/BS,IAAWT,GACX,kBAACgG,GAAD,yCAEF,kBAACC,GAAD,CAAYC,MAAOzF,EAAS,SAAWT,EAAQ,QAAU,e,06DC3CjEwG,YAEA,IAAMC,GAA0D,CAC9DC,SAAU5J,EACV6J,QAAS1J,EACT2J,OAAQrJ,GAkBV,SAASsJ,GAAWC,EAAUC,GAC5B,OAAO,IAAI3G,SAAO4G,UAAUC,aAAaH,GAG5B,kBACb,OACE,kBAAC,IAAD,CAAmBD,WAAYA,IAC7B,kBAAC,GAAD,QAsKN,SAASK,KACP,IAAMC,EAAU7F,cACRyF,EAA8EI,EAA9EJ,UAAWvF,EAAmE2F,EAAnE3F,QAASC,EAA0D0F,EAA1D1F,QAASF,EAAiD4F,EAAjD5F,QAAS6F,EAAwCD,EAAxCC,SAAUC,EAA8BF,EAA9BE,WAAY5G,EAAkB0G,EAAlB1G,OAAQT,EAAUmH,EAAVnH,MAF/D,EAIyB0B,IAAMC,SAAS,GAJxC,mBAILkD,EAJK,KAIOzD,EAJP,OAK2BM,IAAMC,SAAS,GAL1C,mBAKLN,EALK,KAKQiG,EALR,OAQyC5F,IAAMC,WAR/C,mBAQN4F,EARM,KAQeC,EARf,KASb9F,IAAMU,WAAU,WACVmF,GAAuBA,IAAwBR,GACjDS,OAAuBC,KAExB,CAACF,EAAqBR,IAGzB,IAAMW,ETtOD,WAA4B,IAAD,EACHpG,cAArB8F,EADwB,EACxBA,SAAU3G,EADc,EACdA,OADc,EAGNkB,oBAAS,GAHH,mBAGzBgG,EAHyB,KAGlBC,EAHkB,KAwBhC,OAnBAxF,qBAAU,WACRtF,EAAS+K,eAAenJ,MAAK,SAACmJ,GACxBA,EACFT,EAAStK,OAAU2K,GAAW,GAAM3I,OAAM,WACxC8I,GAAS,MAGXA,GAAS,QAGZ,IAGHxF,qBAAU,YACHuF,GAASlH,GACZmH,GAAS,KAEV,CAACD,EAAOlH,IAEJkH,ES8MYG,GAKnB,OThNK,WAAyD,IAA5BC,EAA2B,0DACzBzG,cAA5Bb,EADqD,EACrDA,OAAQT,EAD6C,EAC7CA,MAAOoH,EADsC,EACtCA,SAEvBhF,qBAAU,WAAY,IACZ4F,EAAatL,OAAbsL,SACR,GAAIA,GAAYA,EAASC,KAAOxH,IAAWT,IAAU+H,EAAU,CAC7D,IAAMG,EAAgB,WACpBtJ,QAAQC,IAAI,4BACZuI,EAAStK,IAELqL,EAAqB,SAAC1G,GAC1B7C,QAAQC,IAAI,6CAA8C4C,GAC1D2F,EAAStK,IAELsL,EAAwB,SAACC,GAC7BzJ,QAAQC,IAAI,gDAAiDwJ,GACzDA,EAASlO,OAAS,GACpBiN,EAAStK,IAGPwL,EAAuB,SAACC,GAC5B3J,QAAQC,IAAI,+CAAgD0J,GAC5DnB,EAAStK,IAQX,OALAkL,EAASC,GAAG,UAAWC,GACvBF,EAASC,GAAG,eAAgBE,GAC5BH,EAASC,GAAG,kBAAmBG,GAC/BJ,EAASC,GAAG,iBAAkBK,GAEvB,WACDN,EAASQ,iBACXR,EAASQ,eAAe,UAAWN,GACnCF,EAASQ,eAAe,eAAgBL,GACxCH,EAASQ,eAAe,kBAAmBJ,GAC3CJ,EAASQ,eAAe,iBAAkBF,QAI/C,CAAC7H,EAAQT,EAAO+H,EAAUX,ISuK7BqB,EAAqBf,KAAgBH,GAGjC,oCACE,kBAACmB,GAAD,KACE,kBAAC,GAAD,CACE7D,WAAYA,EACZC,cAAe,WAAOwC,EAAejG,EAAc,OAIvD,kBAACsH,GAAD,KACElI,IAAYT,GACZ,kBAAC4I,GAAD,KACE,kBAAC,EAAD,CACExH,cAAeA,EACfC,YAAaA,EACbrD,SAAU,gDAOhB,kBAAC6K,GAAD,KACE,kBAACC,GAAD,CAAclG,IAAI,mBAClB,kBAACmG,GAAD,KACGC,OAAOC,KAAKxC,IAAkByC,KAAI,SAAAlG,GACjC,IAAMmG,EAAmB1C,GAAiBzD,GACpCoG,EAAaD,IAAqB5B,EAElC1E,GAAY6E,KAAgBH,GADhB4B,IAAqBpC,KACiC/G,EAClEqJ,EAAiB,aAATrG,EAAsB,iBAA4B,WAATA,EAAoB,eAAiB,cAE5F,OACE,kBAACsG,GAAD,CACEzG,SAAUA,EACV0G,IAAKvG,EACLL,QAAS,WACP6E,EAAuB2B,GACvB/B,EAASX,GAAiBzD,KAE5BtC,OAAiB,aAATsC,EAAsB,UAAqB,WAATA,EAAoB,UAAY,WAE1E,kBAACwG,GAAD,CAAe5G,IAAKyG,IAEpB,kBAACI,GAAD,KACGL,GACC,kBAAC,IAAD,CACGtG,KAAK,OACLtI,MAAM,UACNO,OAAQ,GACRD,MAAO,MAGVsO,GACA,oCACU,aAATpG,EAAsB,wBAAmC,WAATA,EAAoB,sBAAwB,yBAa3G,yBACE0G,MAAO,CACLC,QAAS,OACTC,QAAS,OACTC,oBAAqB,cACrBC,SAAU,QACVC,OAAQ,UAGRtJ,GAAUT,IACV,4BACE0J,MAAO,CACL3O,OAAQ,OACRiP,UAAW,OACXC,aAAc,OACdC,YAAa,MACbC,OAAQ,WAEVxH,QAAS,WACP0E,MATJ,iBAgBE7F,IAAWD,IACb,4BACEmI,MAAO,CACL3O,OAAQ,OACRkP,aAAc,OACdE,OAAQ,WAEVxH,QAAS,WACPnB,EACG4I,UAAU7I,GACV8I,YAAY,gBACZ3L,MAAK,SAAC4L,GACL5N,OAAO6N,MAAP,sBAA4BD,OAE7BxL,OAAM,SAACkB,GACNtD,OAAO6N,MAAM,YAAcvK,GAASA,EAAMwK,QAAf,cAAgCxK,EAAMwK,SAAY,UAdrF,kBAqBEzD,IAAc9J,IAAWwE,IAC3B,4BACEiI,MAAO,CACL3O,OAAQ,OACRkP,aAAc,OACdE,OAAQ,WAEVxH,QAAS,WACLoE,EAAkB0D,cAA0B,IAAZhJ,EAAgB,EAAI,KAP1D,mBAaDsF,IAAcxJ,GACb,yCACekK,IAAZhG,GACC,4BACEiI,MAAO,CACL3O,OAAQ,OACRkP,aAAc,OACdE,OAAQ,WAEVxH,QAAS,WACLoE,EAAkB2D,cAA0B,IAAZjJ,EAAgB,IAAM,KAP5D,mBAaF,4BACEiI,MAAO,CACL3O,OAAQ,OACRkP,aAAc,OACdE,OAAQ,WAEVxH,QAAS,WACLoE,EAAkB4D,UAPxB,2BAwBd,IAAMjC,GAAkB/K,IAAOC,IAAV,MAWf+K,GAAkBhL,IAAOC,IAAV,MASfgL,GAAgBjL,IAAOC,IAAV,MAQbiL,GAAyBlL,IAAOC,IAAV,MAOtBkL,GAAenL,IAAOiD,IAAV,MAQZmI,GAAoBpL,IAAOC,IAAV,MAOjB0L,GAAiB3L,IAAO4F,OAAV,MA0BI,SAAA/C,GAAK,OAAIA,EAAME,UAMf,SAAAF,GAAK,OAAIA,EAAME,UAIjC8I,GAAgB7L,IAAOiD,IAAV,MAKb6I,GAAgB9L,IAAOgG,KAAV,MC3eCiH,QACW,cAA7BlO,OAAOmO,SAASC,UAEe,UAA7BpO,OAAOmO,SAASC,UAEhBpO,OAAOmO,SAASC,SAASC,MAAM,2DCHnCvE,YAGA,IAAMwE,GAAS,IAAIC,IAAa,CAC9BC,IAAK,qEAGPC,IAAS5O,OAEL,kBAAC,IAAD,CAAgByO,OAAQA,IACtB,kBAAC9D,GAAD,OAEF7K,SAAS+O,eAAe,SDkGtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7M,MAAK,SAAA8M,GACjCA,EAAaC,kB","file":"static/js/main.b47f1cb4.chunk.js","sourcesContent":["(function() {\n\t// The random number is a js implementation of the Xorshift PRNG\n\tvar randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\n\n\tfunction seedrand(seed) {\n\t\tfor (var i = 0; i < randseed.length; i++) {\n\t\t\trandseed[i] = 0;\n\t\t}\n\t\tfor (var i = 0; i < seed.length; i++) {\n\t\t\trandseed[i%4] = ((randseed[i%4] << 5) - randseed[i%4]) + seed.charCodeAt(i);\n\t\t}\n\t}\n\n\tfunction rand() {\n\t\t// based on Java's String.hashCode(), expanded to 4 32bit values\n\t\tvar t = randseed[0] ^ (randseed[0] << 11);\n\n\t\trandseed[0] = randseed[1];\n\t\trandseed[1] = randseed[2];\n\t\trandseed[2] = randseed[3];\n\t\trandseed[3] = (randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8));\n\n\t\treturn (randseed[3]>>>0) / ((1 << 31)>>>0);\n\t}\n\n\tfunction createColor() {\n\t\t//saturation is the whole color spectrum\n\t\tvar h = Math.floor(rand() * 360);\n\t\t//saturation goes from 40 to 100, it avoids greyish colors\n\t\tvar s = ((rand() * 60) + 40) + '%';\n\t\t//lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\n\t\tvar l = ((rand()+rand()+rand()+rand()) * 25) + '%';\n\n\t\tvar color = 'hsl(' + h + ',' + s + ',' + l + ')';\n\t\treturn color;\n\t}\n\n\tfunction createImageData(size) {\n\t\tvar width = size; // Only support square icons for now\n\t\tvar height = size;\n\n\t\tvar dataWidth = Math.ceil(width / 2);\n\t\tvar mirrorWidth = width - dataWidth;\n\n\t\tvar data = [];\n\t\tfor(var y = 0; y < height; y++) {\n\t\t\tvar row = [];\n\t\t\tfor(var x = 0; x < dataWidth; x++) {\n\t\t\t\t// this makes foreground and background color to have a 43% (1/2.3) probability\n\t\t\t\t// spot color has 13% chance\n\t\t\t\trow[x] = Math.floor(rand()*2.3);\n\t\t\t}\n\t\t\tvar r = row.slice(0, mirrorWidth);\n\t\t\tr.reverse();\n\t\t\trow = row.concat(r);\n\n\t\t\tfor(var i = 0; i < row.length; i++) {\n\t\t\t\tdata.push(row[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tfunction buildOpts(opts) {\n\t\tvar newOpts = {};\n\n\t\tnewOpts.seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);\n\n\t\tseedrand(newOpts.seed);\n\n\t\tnewOpts.size = opts.size || 8;\n\t\tnewOpts.scale = opts.scale || 4;\n\t\tnewOpts.color = opts.color || createColor();\n\t\tnewOpts.bgcolor = opts.bgcolor || createColor();\n\t\tnewOpts.spotcolor = opts.spotcolor || createColor();\n\n\t\treturn newOpts;\n\t}\n\n\tfunction renderIcon(opts, canvas) {\n\t\topts = buildOpts(opts || {});\n\t\tvar imageData = createImageData(opts.size);\n\t\tvar width = Math.sqrt(imageData.length);\n\n\t\tcanvas.width = canvas.height = opts.size * opts.scale;\n\n\t\tvar cc = canvas.getContext('2d');\n\t\tcc.fillStyle = opts.bgcolor;\n\t\tcc.fillRect(0, 0, canvas.width, canvas.height);\n\t\tcc.fillStyle = opts.color;\n\n\t\tfor(var i = 0; i < imageData.length; i++) {\n\n\t\t\t// if data is 0, leave the background\n\t\t\tif(imageData[i]) {\n\t\t\t\tvar row = Math.floor(i / width);\n\t\t\t\tvar col = i % width;\n\n\t\t\t\t// if data is 2, choose spot color, if 1 choose foreground\n\t\t\t\tcc.fillStyle = (imageData[i] == 1) ? opts.color : opts.spotcolor;\n\n\t\t\t\tcc.fillRect(col * opts.scale, row * opts.scale, opts.scale, opts.scale);\n\t\t\t}\n\t\t}\n\t\treturn canvas;\n\t}\n\n\tfunction createIcon(opts) {\n\t\tvar canvas = document.createElement('canvas');\n\n\t\trenderIcon(opts, canvas);\n\n\t\treturn canvas;\n\t}\n\n\tvar api = {\n\t\tcreate: createIcon,\n\t\trender: renderIcon\n\t};\n\n\tif (typeof module !== \"undefined\") {\n\t\tmodule.exports = api;\n\t}\n\tif (typeof window !== \"undefined\") {\n\t\t window.blockies = api;\n\t}\n\n})();\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { PortisConnector } from '@web3-react/portis-connector'\nimport { NetworkConnector } from '@web3-react/network-connector'\n// import { WalletConnectConnector } from '@web3-react/walletconnect-connector'\n// import { WalletLinkConnector } from '@web3-react/walletlink-connector'\n// import { LedgerConnector } from '@web3-react/ledger-connector'\n// import { TrezorConnector } from '@web3-react/trezor-connector'\n// import { FrameConnector } from '@web3-react/frame-connector'\n// import { AuthereumConnector } from '@web3-react/authereum-connector'\n// import { FortmaticConnector } from '@web3-react/fortmatic-connector'\n// import { SquarelinkConnector } from '@web3-react/squarelink-connector'\n// import { TorusConnector } from '@web3-react/torus-connector'\n\nrequire('dotenv').config();\n\nconst POLLING_INTERVAL = 12000\nconst RPC_URLS: { [chainId: number]: string } = {\n  3: \"https://ropsten.infura.io/v3/084ddf3da9e240c5b5dd9264f37c0526\" as string\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds: [3] })\n\nexport const network = new NetworkConnector({\n  urls: { 3: RPC_URLS[3] },\n  defaultChainId: 3,\n  pollingInterval: POLLING_INTERVAL\n})\n\n// export const walletconnect = new WalletConnectConnector({\n//   rpc: { 1: RPC_URLS[1] },\n//   bridge: 'https://bridge.walletconnect.org',\n//   qrcode: true,\n//   pollingInterval: POLLING_INTERVAL\n// })\n//\n// export const walletlink = new WalletLinkConnector({\n//   url: RPC_URLS[1],\n//   appName: 'web3-react example'\n// })\n//\n// export const ledger = new LedgerConnector({ chainId: 1, url: RPC_URLS[1], pollingInterval: POLLING_INTERVAL })\n//\n// export const trezor = new TrezorConnector({\n//   chainId: 1,\n//   url: RPC_URLS[1],\n//   pollingInterval: POLLING_INTERVAL,\n//   manifestEmail: 'dummy@abc.xyz',\n//   manifestAppUrl: 'http://localhost:1234'\n// })\n//\n// export const frame = new FrameConnector({ supportedChainIds: [1] })\n//\n// export const authereum = new AuthereumConnector({ chainId: 42 })\n//\n// export const fortmatic = new FortmaticConnector({ apiKey: process.env.FORTMATIC_API_KEY as string, chainId: 4 })\n\nexport const portis = new PortisConnector({ dAppId: 'cfefa032-9afd-4833-bfb4-2b0cb7ec3413' as string, networks: [1, 100] })\n\n// export const squarelink = new SquarelinkConnector({\n//   clientId: process.env.SQUARELINK_CLIENT_ID as string,\n//   networks: [1, 100]\n// })\n\n// export const torus = new TorusConnector({ chainId: 1 })\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from './connectors'\n\nrequire('dotenv').config();\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\n// Create Header\nfunction ChannelPreview() {\n  React.useEffect(() => {\n\n  });\n\n  // to create blockies\n\n  return (\n    <Container>\n      I am Create Channel\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n\n`\n\n// Export Default\nexport default ChannelPreview;\n","import erc20Abi from \"./abis/erc20\";\nimport ownableAbi from \"./abis/ownable\";\nimport epnscoreAbi from \"./abis/epnscore\";\n\nexport const abis = {\n  erc20: erc20Abi,\n  ownable: ownableAbi,\n  epnscore: epnscoreAbi,\n};\n\nexport { default as addresses } from \"./addresses\";\n","import React from \"react\";\n\nimport { addresses, abis } from \"@project/contracts\";\nconst ethers = require('ethers');\n\n// FeedDB Helper Function\nconst EPNSCoreHelper = {\n  // To get if user is a channel\n  getUserInfo: async (wallet, contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users(wallet)\n        .then(response => {\n          console.log(response);\n          resolve(response);\n        })\n        .catch((err) => {\n          console.log(err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel's Info\n  getChannelInfo: async (channel, contract) => {\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      contract.channels(channel)\n        .then(response => {\n          console.log(response);\n          resolve(response);\n        })\n        .catch((err) => {\n          console.log(err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel's AddChannel event\n  getChannelAddEvent: async (channel, startBlock, endBlock, contract) => {\n    return new Promise ((resolve, reject) => {\n      // To get channel ipfs hash from channel info\n      let filteredResponse;\n      contract.queryFilter('AddChannel', startBlock, endBlock)\n        .then(response => {\n\n          response.forEach(function (item) {\n            if (item.args[0] == channel) {\n              filteredResponse = item;\n            }\n          });\n\n          console.log(\"Full Response: \");\n          console.log(response);\n          console.log(\"Filtered Response: \");\n          console.log(filteredResponse);\n\n          resolve(filteredResponse);\n        })\n        .catch((err) => {\n          console.log(err);\n          reject(err);\n        });\n    })\n  },\n  // Retrive IPFS File from ipfshash\n  getJsonFileFromIPFSHash: async(ipfs) => {\n    return new Promise ((resolve, reject) => {\n      // Form Gateway URL\n      const url = \"https://ipfs.io/ipfs/\" + ipfs;\n      fetch(url)\n        .then(response => response.json())\n        .then((jsonData) => {\n          console.log(jsonData)\n          resolve(jsonData);\n        })\n        .catch((error) => {\n          console.error(error);\n          reject(error);\n        });\n    });\n  },\n  // Finally a helper to get Channel from User's address\n  getChannelJsonFromUserAddress: async (wallet, contract) => {\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      EPNSCoreHelper.getUserInfo(wallet, contract)\n        .then(response => EPNSCoreHelper.getChannelInfo(wallet, contract))\n        .then(response => EPNSCoreHelper.getChannelAddEvent(wallet, response.channelStartBlock.toNumber(), response.channelStartBlock.toNumber(), contract))\n        .then(response => EPNSCoreHelper.getJsonFileFromIPFSHash(response.args[1]))\n        .then(response => resolve(response))\n        .catch(err => reject(err));\n    });\n  }\n}\n\nexport default EPNSCoreHelper;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\nimport ChannelPreview from 'components/ChannelPreview';\nimport Loader from 'react-loader-spinner'\n\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\n\nimport { addresses, abis } from \"@project/contracts\";\nconst ethers = require('ethers');\n\n// Create Header\nfunction Home({ setBadgeCount, bellPressed, epnscore }) {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [controlAt, setControlAt] = React.useState(0);\n  const [adminStatusLoaded, setAdminStatusLoaded] = React.useState(false);\n  const [channelAdmin, setChannelAdmin] = React.useState(false);\n  const [channelJson, setChannelJson] = React.useState([]);\n\n  React.useEffect(() => {\n    // Reset when account refreshes\n    setChannelAdmin(false);\n    setAdminStatusLoaded(false);\n    userClickedAt(0);\n    setChannelJson([]);\n\n    // Call Admin Chcek\n    checkUserToChannelEvent();\n\n  }, [account]);\n\n  // Revert to Feedbox on bell pressed\n  React.useEffect(() => {\n    setControlAt(0);\n  }, [bellPressed]);\n\n  // handle user action at control center\n  const userClickedAt = (controlIndex) => {\n    setControlAt(controlIndex);\n  }\n\n  //Start Listening...\n  const listenForUserToChannelConversion = async () => {\n\n  }\n\n  // Check if a user is a channel or not\n  const checkUserToChannelEvent = async () => {\n    // Check if account is admin or not and handle accordingly\n    let contract = new ethers.Contract(epnscore, abis.epnscore, library);\n    let channelInfo;\n    EPNSCoreHelper.getChannelJsonFromUserAddress(account, contract)\n      .then(response => {\n        console.log(response);\n        setChannelJson(response);\n        setChannelAdmin(true);\n        setAdminStatusLoaded(true);\n      })\n      .catch(e => {\n        setChannelAdmin(false);\n        setAdminStatusLoaded(true);\n      });\n  }\n\n  // Render\n  return (\n    <Container>\n      <Controls>\n        <ControlButton index={0} active={controlAt == 0 ? 1 : 0} border=\"#e20880\"\n          onClick={() => {\n            userClickedAt(0)\n          }}\n        >\n          <ControlImage src=\"./svg/feedbox.svg\" active={controlAt == 0 ? 1 : 0} />\n          <ControlText active={controlAt == 0 ? 1 : 0}>Feedbox</ControlText>\n        </ControlButton>\n        <ControlButton index={1} active={controlAt == 1 ? 1 : 0} border=\"#35c5f3\"\n          onClick={() => {\n            userClickedAt(1)\n          }}\n        >\n          <ControlImage src=\"./svg/channel.svg\" active={controlAt == 1 ? 1 : 0}/>\n          <ControlText active={controlAt == 1 ? 1 : 0}>Channels</ControlText>\n        </ControlButton>\n\n        <ControlButton index={2} active={controlAt == 2 ? 1 : 0} border=\"#674c9f\"\n          disabled={!adminStatusLoaded}\n          onClick={() => {\n            if (adminStatusLoaded) {\n              userClickedAt(2)\n            }\n          }}\n        >\n          {!adminStatusLoaded &&\n            <Loader\n               type=\"Oval\"\n               color=\"#674c9f\"\n               height={32}\n               width={32}\n            />\n          }\n          {channelAdmin && adminStatusLoaded &&\n            <>\n              <ControlChannelImage src={`${channelJson.icon}`} active={controlAt == 2 ? 1 : 0}/>\n              <ControlChannelText active={controlAt == 2 ? 1 : 0}>{channelJson.name}</ControlChannelText>\n            </>\n          }\n          {!channelAdmin && adminStatusLoaded &&\n            <>\n              <ControlImage src=\"./svg/channeladmin.svg\" active={controlAt == 2 ? 1 : 0}/>\n              <ControlText active={controlAt == 2 ? 1 : 0}>Create Your Channel</ControlText>\n            </>\n          }\n        </ControlButton>\n      </Controls>\n      <Interface>\n      </Interface>\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  min-height: 80vh;\n  flex-direction: column;\n`\n\nconst Controls = styled.div`\n  flex: 0;\n  display: flex;\n  flex-direction: row;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`\n\nconst ControlButton = styled.div`\n  flex: 1 1 25%;\n  height: 120px;\n  min-width: 240px;\n  background: #fff;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225,225,225);\n\n  border-bottom: 10px solid rgb(180,180,180);\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-bottom: 10px solid ${(props) => props.active ? props.border : \"rgb(180,180,180)\"};\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst ControlImage = styled.img`\n  height: 30%;\n  margin-right: 15px;\n  filter: ${(props) => props.active ? \"brightness(1)\" : \"brightness(0)\"};\n  opacity: ${(props) => props.active ? \"1\" : \"0.25\"};\n\n  transition: transform .2s ease-out;\n  ${ props => props.active && css`\n    transform: scale(3.5) translate(-20px, 0px);\n    opacity: 0.4;\n  `};\n`\n\nconst ControlText = styled.label`\n  font-size: 16px;\n  font-weight: 200;\n  opacity: ${(props) => props.active ? \"1\" : \"0.75\"};\n\n  transition: transform .2s ease-out;\n  ${ props => props.active && css`\n    transform: scale(1.5) translate(-10px, 0px);\n  `};\n`\n\nconst ControlChannelImage = styled.img`\n    height: 30%;\n    margin-right: 15px;\n    opacity: ${(props) => props.active ? \"1\" : \"0.25\"};\n\n    transition: transform .2s ease-out;\n    ${ props => props.active && css`\n      transform: scale(3.5) translate(-20px, 0px);\n      opacity: 0.4;\n    `};\n`\n\nconst ControlChannelText = styled.label`\n  font-size: 16px;\n  font-weight: 200;\n  opacity: ${(props) => props.active ? \"1\" : \"0.75\"};\n  transition: transform .2s ease-out;\n  ${ props => props.active && css`\n    transform: scale(1.5) translate(-10px, 0px);\n  `};\n\n`\n\nconst Interface = styled.div`\n  flex: 1;\n  display: flex;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 20px;\n  border: 1px solid rgb(225,225,225);\n\n  margin: 15px;\n  overflow: hidden;\n`\n\n// Export Default\nexport default Home;\n","// Usage:\n//   create component file (e.g. BlockiesIdenticon.js) using uncommented code below\n//   npm install blockies-identicon\n//   in the file you want to use the component (e.g. BlockiesIdenticon.js):\n//   import Blockies from \"blockies/react-component\";\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\nimport React from 'react';\nimport blockies from \"./blockies\";\n\nexport default class BlockiesIdenticon extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  getOpts () {\n    return {\n      seed: this.props.opts.seed || \"foo\",\n      color: this.props.opts.color || \"#dfe\",\n      bgcolor: this.props.opts.bgcolor || \"#a71\",\n      size: this.props.opts.size || 15,\n      scale: this.props.opts.scale || 3,\n      spotcolor: this.props.opts.spotcolor || \"#000\"\n    };\n  }\n  componentDidMount() {\n    this.draw();\n  }\n  componentDidUpdate(prevProps) {\n    // Check for prop change\n    if (this.props.seed !== prevProps.seed) {\n      this.draw();\n    }\n  }\n  draw() {\n    blockies.render({\n      seed: this.props.opts.seed,\n      size: this.props.opts.size,\n      scale: this.props.opts.scale\n    }, this.canvas);\n  }\n  render() {\n    return React.createElement(\"canvas\", {ref: canvas => this.canvas = canvas});\n  }\n}\n","import React from \"react\";\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\nimport styled, { css } from 'styled-components';\n\nimport Loader from 'react-loader-spinner'\nimport Blockies from \"components/BlockiesIdenticon\";\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\n// Create Header\nfunction Profile() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [address, setAddress] = React.useState('');\n  const [ens, setENS] = React.useState('');\n  const [ensFetched, setENSFetched] = React.useState(false);\n\n  React.useEffect(() => {\n    if (account && account != '') {\n      // Check if the address is the same\n      if (address !== account) {\n        setENS('');\n        setENSFetched(false);\n\n        // get ens\n        library\n          .lookupAddress(account).then(function(name) {\n            setENS(name);\n            setENSFetched(true);\n            setAddress(account);\n          })\n          .catch(() => {\n            setENSFetched(true);\n            setAddress(account);\n          })\n      }\n\n    }\n  }, [account]);\n\n  // to create blockies\n\n  return (\n    <>\n    {account && account !== '' && !error &&\n      <Container>\n        <Blocky>\n          <BlockyInner>\n             <Blockies seed={account.toLowerCase()} opts={{seed: account.toLowerCase(), size: 7, scale: 7}}/>\n          </BlockyInner>\n        </Blocky>\n        <Wallet>\n        {!ensFetched &&\n          <Loader\n      \t     type=\"Oval\"\n      \t     color=\"#FFF\"\n      \t     height={16}\n      \t     width={16}\n      \t  />\n        }\n        {ensFetched && ens &&\n          <>{ens}</>\n        }\n        {ensFetched && !ens &&\n          <>{account.substring(0, 6)}.....{account.substring(account.length - 6)}</>\n        }\n        </Wallet>\n      </Container>\n    }\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  margin: 0;\n  padding: 0;\n  background: none;\n  border: 0;\n  outline: 0;\n  justify-content: flex-start;\n  flex: 1,\n  flex-direction: row;\n  align-items: center;\n  display: flex;\n`\n\nconst Blocky = styled.div`\n  position: relative;\n  width: 50px;\n  height: 50px;\n  border-radius: 100%;\n  overflow: hidden;\n  transform: scale(0.85);\n  outline-width: 2px;\n  outline-color: rgba(225,225,225,1);\n`\n\nconst BlockyInner = styled.div`\n`\n\nconst Wallet = styled.span`\n  margin: 0px 10px;\n  padding: 8px 15px;\n  height: 16px;\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  font-weight: bold;\n  font-size: 14px;\n  color: #fff;\n  border-radius: 15px;\n  background: rgb(226,8,128);\n  background: linear-gradient(107deg, rgba(226,8,128,1) 30%, rgba(103,76,159,1) 70%, rgba(53,197,243,1) 100%);\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\n// Export Default\nexport default Profile;\n","import React from \"react\";\nimport styled, { css, keyframes } from 'styled-components';\nimport { AnimateOnChange } from 'react-animation';\n\n// Create Header\nfunction Bell({ badgeCount, bellPressedCB, width, height }) {\n  const [badge, setBadge] = React.useState(0);\n  const [ring, setRing] = React.useState(false);\n\n  React.useEffect(() => {\n    // Set new badge count and ring the bell\n    setBadge(badgeCount);\n\n    if (badge > 0) {\n      setResetRinger();\n    }\n  }, [badgeCount]);\n\n  const setResetRinger = () => {\n    setRing(true);\n\n    setTimeout(() => {\n        setRing(false)\n    }, 500);\n  }\n\n  return (\n    <Container\n      onClick={() => {\n        if (bellPressedCB) {bellPressedCB();}\n      }}\n      width={width}\n      height={height}\n    >\n      <BellImage ring={ring} src=\"./bell.png\" className=\"tadaaa\" ringme={ring} width={width} height={height} />\n      <BellImageAbs src=\"./bellball.png\" width={width} height={height} />\n      <BellImageAbs src=\"./ring.png\" width={width} height={height} />\n      {badge != 0 &&\n        <AnimateOnChange\n          animationIn=\"fadeIn\"\n          animationOut=\"fadeOut\"\n          durationOut={200}\n        >\n          <Badge>{badge}</Badge>\n        </AnimateOnChange>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  border: 0;\n  outline: 0;\n  background: transparent;\n  border: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 10px;\n  position: relative;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst tadaaa = keyframes`\n  0% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n\n  10%, 20% {\n    -webkit-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n  }\n\n  30%, 50%, 70%, 90% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n  }\n\n  40%, 60%, 80% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n  }\n\n  100% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n`;\n\nconst BellImage = styled.img`\n  position: absolute;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n\n  transition: transform .2s ease-out;\n  ${ props => props.ringme && css`\n    animation: ${tadaaa} 1s ease-out;\n  `};\n\n\n`\n\nconst BellImageAbs = styled(BellImage)`\n  left: 0,\n`\n\nconst Badge = styled.span`\n  position: absolute;\n  font-size: 10px;\n  color: #fff;\n  padding: 2px 4px;\n  border-radius: 100%;\n  background: rgba(208.0, 44.0, 30.0, 1.0);\n  top: 0px;\n  left: 5px;\n  font-weight: bold;\n`\n\n// Export Default\nexport default Bell;\n","import React from \"react\";\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\n\nimport styled, { css } from 'styled-components';\n\nimport Profile from 'components/Profile';\nimport Bell from 'components/Bell';\n\n\n// Create Header\nfunction Header({ badgeCount, bellPressedCB }) {\n  const { active, error, account, chainId } = useWeb3React();\n  const randseed = new Array(4);\n\n  React.useEffect(() => {\n    if (account && account != '') {\n\n    }\n  }, [account]);\n\n  function getErrorMessage(error: Error) {\n    if (error instanceof NoEthereumProviderError) {\n      return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\n    } else if (error instanceof UnsupportedChainIdError) {\n      return \"Unsupported Network, please connect to Ropsten\"\n    } else if (\n      error instanceof UserRejectedRequestErrorInjected\n    ) {\n      return 'Please authorize this website to access your Ethereum account.'\n    } else {\n      console.error(error)\n      return 'An unknown error occurred. Check the console for more details.'\n    }\n  }\n\n  // to create blockies\n\n  return (\n    <HeaderStyle>\n      <ProfileContainer>\n      {active && !error &&\n        <Profile />\n      }\n      {!active &&\n        <Logo src=\"epns.png\" />\n      }\n      </ProfileContainer>\n      <UserControls>\n        {active && !error &&\n          <Bell\n            badgeCount={badgeCount}\n            bellPressedCB={bellPressedCB}\n            width={40}\n            height={40}\n          />\n        }\n      </UserControls>\n      <NetworkDisplayer>\n        {!!error &&\n          <PrimaryTheme>{getErrorMessage(error)}</PrimaryTheme>\n        }\n        {!active && !error &&\n          <ThirdTheme>Please connect to a Web3 Network</ThirdTheme>\n        }\n        <Connection phase={active ? 'active' : error ? 'error' : 'waiting'} />\n      </NetworkDisplayer>\n\n    </HeaderStyle>\n  );\n}\n\n// CSS Styles\nconst HeaderStyle = styled.div`\n  height: 100%;\n  padding: 5px 15px;\n  background: #fff;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n`\n\nconst ProfileContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justfy-content: flex-start;\n`\n\nconst Logo = styled.img`\n  height: 45px;\n`\n\nconst UserControls = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ImageButton = styled.button`\n\n`\n\nconst NetworkDisplayer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Notice = styled.span`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n`\n\nconst PrimaryTheme = styled(Notice)`\n  background: #e20880;\n`\n\nconst ThirdTheme = styled(Notice)`\n  background: #674c9f;\n`\n\nconst Connection = styled.span`\n  height: 10px;\n  width: 10px;\n  border-radius: 100%;\n\n  ${props => props.phase === 'active' && css`\n    background: #77DD77;\n  `};\n\n  ${props => props.phase === 'waiting' && css`\n    background: #FFAE42;\n  `};\n\n  ${props => props.phase === 'error' && css`\n    background: #DC143C;\n  `};\n`\n\n// Export Default\nexport default Header;\n","import React from \"react\";\n\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { Web3Provider } from 'ethers/providers'\n\nimport { useEagerConnect, useInactiveListener } from 'hooks'\nimport {\n  injected,\n  portis,\n  network\n} from 'connectors'\nimport Loader from 'react-loader-spinner'\nimport { ethers } from \"ethers\";\n\nimport Home from 'pages/Home';\nimport Header from 'segments/Header';\n\nimport styled from 'styled-components';\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\nconst connectorsByName: { [name: string]: AbstractConnector } = {\n  Injected: injected,\n  Network: network,\n  Portis: portis\n}\n\nfunction getErrorMessage(error: Error) {\n  if (error instanceof NoEthereumProviderError) {\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\n  } else if (error instanceof UnsupportedChainIdError) {\n    return \"You're connected to an unsupported network.\"\n  } else if (\n    error instanceof UserRejectedRequestErrorInjected\n  ) {\n    return 'Please authorize this website to access your Ethereum account.'\n  } else {\n    console.error(error)\n    return 'An unknown error occurred. Check the console for more details.'\n  }\n}\n\nfunction getLibrary(provider, connector) {\n  return new ethers.providers.Web3Provider(provider); // this will vary according to whether you use e.g. ethers or web3.js\n}\n\nexport default function() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  )\n}\n\nfunction ChainId() {\n  const { chainId } = useWeb3React()\n\n  return (\n    <>\n      <span>Chain Id</span>\n      <span role=\"img\" aria-label=\"chain\">\n        ⛓\n      </span>\n      <span>{Number.isInteger(chainId) ? chainId : ''}</span>\n    </>\n  )\n}\n\nfunction BlockNumber() {\n  const { chainId, library } = useWeb3React()\n\n  const [blockNumber, setBlockNumber] = React.useState<number>()\n  React.useEffect((): any => {\n    if (!!library) {\n      let stale = false\n\n      library\n        .getBlockNumber()\n        .then((blockNumber: number) => {\n          if (!stale) {\n            setBlockNumber(blockNumber)\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setBlockNumber(null)\n          }\n        })\n\n      const updateBlockNumber = (blockNumber: number) => {\n        setBlockNumber(blockNumber)\n      }\n      library.on('block', updateBlockNumber)\n\n      return () => {\n        stale = true\n        library.removeListener('block', updateBlockNumber)\n        setBlockNumber(undefined)\n      }\n    }\n  }, [library, chainId]) // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return (\n    <>\n      <span>Block Number</span>\n      <span role=\"img\" aria-label=\"numbers\">\n        🔢\n      </span>\n      <span>\n        {Number.isInteger(blockNumber)\n          ? blockNumber.toLocaleString()\n          : blockNumber === null\n          ? 'Error'\n          : !!library\n          ? '...'\n          : ''}\n      </span>\n    </>\n  )\n}\n\nfunction Account() {\n  const { account } = useWeb3React()\n\n  return (\n    <>\n      <span>Account</span>\n      <span role=\"img\" aria-label=\"robot\">\n        🤖\n      </span>\n      <span>\n        {account === undefined\n          ? ''\n          : account === null\n          ? '-'\n          : `${account.substring(0, 6)}...${account.substring(account.length - 4)}`}\n      </span>\n    </>\n  )\n}\n\nfunction Balance() {\n  const { account, library, chainId } = useWeb3React()\n\n  const [balance, setBalance] = React.useState()\n  React.useEffect((): any => {\n    if (!!account && !!library) {\n      let stale = false\n\n      library\n        .getBalance(account)\n        .then((balance: any) => {\n          if (!stale) {\n            setBalance(balance)\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setBalance(null)\n          }\n        })\n\n      return () => {\n        stale = true\n        setBalance(undefined)\n      }\n    }\n  }, [account, library, chainId]) // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return (\n    <>\n      <span>Balance</span>\n      <span role=\"img\" aria-label=\"gold\">\n        💰\n      </span>\n      <span>\n        {!!balance\n          ? `Ξ${parseFloat(balance).toPrecision(4)}`\n          : balance === null\n          ? 'Error'\n          : account === null\n          ? '-'\n          : !!account && !!library\n          ? '...'\n          : ''}\n      </span>\n    </>\n  )\n}\n\nfunction HeaderOld() {\n  const { active, error } = useWeb3React()\n\n  return (\n    <>\n\n      <h5\n        style={{\n          display: 'grid',\n          gridGap: '0rem',\n          gridTemplateColumns: '1fr min-content 1fr',\n          maxWidth: '20rem',\n          lineHeight: '2rem',\n          margin: 'auto'\n        }}\n      >\n        <ChainId />\n        <BlockNumber />\n        <Account />\n        <Balance />\n      </h5>\n    </>\n  )\n}\n\nfunction App() {\n  const context = useWeb3React<Web3Provider>()\n  const { connector, library, chainId, account, activate, deactivate, active, error } = context\n\n  const [ badgeCount, setBadgeCount ] = React.useState(0);\n  const [ bellPressed, setBellPressed ] = React.useState(0);\n\n  // handle logic to recognize the connector currently being activated\n  const [activatingConnector, setActivatingConnector] = React.useState<AbstractConnector>()\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined)\n    }\n  }, [activatingConnector, connector])\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect()\n\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager || !!activatingConnector)\n\n  return (\n      <>\n        <HeaderContainer>\n          <Header\n            badgeCount={badgeCount}\n            bellPressedCB={() => {setBellPressed(bellPressed + 1)}}\n          />\n        </HeaderContainer>\n\n        <ParentContainer>\n        {(active) && !error && (\n          <HomeContainer>\n            <Home\n              setBadgeCount={setBadgeCount}\n              bellPressed={bellPressed}\n              epnscore={'0x42d10cdd9cdc4ae284e4bec54e204dbdc44adf9a'}\n            />\n          </HomeContainer>\n\n        )}\n\n\n        <ProviderUpperContainer>\n          <ProviderLogo src=\"./epnsbell.png\" />\n          <ProviderContainer>\n            {Object.keys(connectorsByName).map(name => {\n              const currentConnector = connectorsByName[name]\n              const activating = currentConnector === activatingConnector\n              const connected = currentConnector === connector\n              const disabled = !triedEager || !!activatingConnector || connected || !!error\n              const image = name === 'Injected' ? './metamask.png' : name === 'Portis' ? './portis.png' : './ninja.png';\n\n              return (\n                <ProviderButton\n                  disabled={disabled}\n                  key={name}\n                  onClick={() => {\n                    setActivatingConnector(currentConnector)\n                    activate(connectorsByName[name])\n                  }}\n                  border={name === 'Injected' ? '#e20880' : name === 'Portis' ? '#35c5f3' : '#674c9f'}\n                >\n                  <ProviderImage src={image} />\n\n                  <ProviderLabel>\n                    {activating &&\n                      <Loader\n                         type=\"Oval\"\n                         color=\"#35c5f3\"\n                         height={20}\n                         width={20}\n                      />\n                    }\n                    {!activating &&\n                      <>\n                      {name === 'Injected' ? 'Connect with MetaMask' : name === 'Portis' ? 'Connect with Portis' : 'Login as Ninja'}\n                      </>\n                    }\n\n                  </ProviderLabel>\n\n                </ProviderButton>\n              )\n            })}\n          </ProviderContainer>\n        </ProviderUpperContainer>\n\n\n        <div\n          style={{\n            display: 'grid',\n            gridGap: '1rem',\n            gridTemplateColumns: 'fit-content',\n            maxWidth: '20rem',\n            margin: 'auto'\n          }}\n        >\n          {(active || error) && (\n            <button\n              style={{\n                height: '3rem',\n                marginTop: '2rem',\n                borderRadius: '1rem',\n                borderColor: 'red',\n                cursor: 'pointer'\n              }}\n              onClick={() => {\n                deactivate()\n              }}\n            >\n              Deactivate\n            </button>\n          )}\n\n          {!!(library && account) && (\n            <button\n              style={{\n                height: '3rem',\n                borderRadius: '1rem',\n                cursor: 'pointer'\n              }}\n              onClick={() => {\n                library\n                  .getSigner(account)\n                  .signMessage('👋')\n                  .then((signature: any) => {\n                    window.alert(`Success!\\n\\n${signature}`)\n                  })\n                  .catch((error: any) => {\n                    window.alert('Failure!' + (error && error.message ? `\\n\\n${error.message}` : ''))\n                  })\n              }}\n            >\n              Sign Message\n            </button>\n          )}\n          {!!(connector === network && chainId) && (\n            <button\n              style={{\n                height: '3rem',\n                borderRadius: '1rem',\n                cursor: 'pointer'\n              }}\n              onClick={() => {\n                ;(connector as any).changeChainId(chainId === 1 ? 3 : 1)\n              }}\n            >\n              Switch Networks\n            </button>\n          )}\n          {connector === portis && (\n            <>\n              {chainId !== undefined && (\n                <button\n                  style={{\n                    height: '3rem',\n                    borderRadius: '1rem',\n                    cursor: 'pointer'\n                  }}\n                  onClick={() => {\n                    ;(connector as any).changeNetwork(chainId === 1 ? 100 : 1)\n                  }}\n                >\n                  Switch Networks\n                </button>\n              )}\n              <button\n                style={{\n                  height: '3rem',\n                  borderRadius: '1rem',\n                  cursor: 'pointer'\n                }}\n                onClick={() => {\n                  ;(connector as any).close()\n                }}\n              >\n                Kill Portis Session\n              </button>\n            </>\n          )}\n        </div>\n        </ParentContainer>\n\n\n      </>\n  );\n}\n\n\n// CSS STYLES\nconst HeaderContainer = styled.div`\n  height: 55px;\n  left: 0;\n  right: 0;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  z-index: 999;\n  background: #fff;\n`\n\nconst ParentContainer = styled.div`\n  flex-wrap: wrap;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 80px 20px 20px 20px;\n  flex: 1;\n`\n\nconst HomeContainer = styled.div`\n  display: flex;\n  flex: 1;\n  align-self: center;\n  width: 100%;\n  max-width: 940px;\n`\n\nconst ProviderUpperContainer = styled.div`\n  display: flex;\n  flex: 1,\n  align-self: center;\n  flex-direction: column;\n`\n\nconst ProviderLogo = styled.img`\n  width: 15vw;\n  align-self: center;\n  display: flex;\n  margin: 20px;\n  min-width: 200px;\n`\n\nconst ProviderContainer = styled.div`\n  flex-wrap: wrap;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst ProviderButton = styled.button`\n  flex: 1 1 0;\n  min-width: 200px;\n  background: #fff;\n  outline: 0;\n  max-width: 200px;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225,225,225);\n\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n    border: 1px solid ${props => props.border}\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n    border: 1px solid ${props => props.border}\n  }\n`\n\nconst ProviderImage = styled.img`\n  height: 60px;\n  padding: 10px;\n`\n\nconst ProviderLabel = styled.span`\n  font-size: 12px;\n  margin: 5px;\n`\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\n\nimport './index.css';\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { ethers } from \"ethers\";\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\n// You should replace this uri with your own and put it into a .env file\nconst client = new ApolloClient({\n  uri: \"https://api.thegraph.com/subgraphs/name/paulrberg/create-eth-app\",\n});\n\nReactDOM.render(\n\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>,\n    document.getElementById(\"root\"),\n\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}